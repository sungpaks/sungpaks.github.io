{"version":3,"file":"component---src-pages-til-tsx-9f045ed3c98ef430ddd8.js","mappings":"sJAmEA,IAlDY,KAAO,IAAD,EAChB,MAiBMA,EAA2C,QAAzB,GAjBXC,EAAAA,EAAAA,gBAAe,cAiBIC,KAAKC,oBAAY,aAAtBC,EAAwBJ,OAGnD,OACEK,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OAabD,EAAAA,cAAAA,MAAAA,MACGL,aAAM,EAANA,EAAQO,OACPF,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,SAAAA,KAASL,EAAOO,MAAc,YAC9B,4BACCP,aAAM,EAANA,EAAQQ,UAAW,KACpBH,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,WAAU,eAI5B,C,8EC4DV,MAjHA,SAAe,GAAgC,IAAhC,UAAEG,GAA2B,EAC1C,MAAM,EAACC,EAAc,EAACC,IAAoBC,EAAAA,EAAAA,UAAS,GAC7CC,EAAW,WACXC,EAAW,WACXC,EAAgB,gBAChBC,EAAY,SACZ,EAACC,EAAW,EAACC,IAAmBN,EAAAA,EAAAA,WAAS,GACzCO,EAAa,KACbC,EAAY,MACZ,EAACC,EAAQ,EAACC,IAAcV,EAAAA,EAAAA,UAAS,IAwBvC,OAtBAW,EAAAA,EAAAA,YAAU,KACRC,SAASC,iBAAiB,UAAU,KAClC,MAAMC,EAAwBF,SAASG,gBAAgBC,UACjDC,EACJL,SAASG,gBAAgBG,aACzBN,SAASG,gBAAgBI,aAC3BpB,EAAkC,IAAhBe,EAAuBG,EAAY,IAEnDG,OAAOC,WAAW,gCAAgCC,SACpDhB,GAAgB,GAElBI,EACEL,EACIkB,aAAaC,QAAQpB,KAAeF,EAClCK,EACAC,EACFe,aAAaC,QAAQpB,KAAeF,EACpCM,EACAD,EACL,GACA,IAGDd,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,UACbD,EAAAA,cAAAA,KAAAA,CAAIC,UAAU,eAAe+B,MAAO,CAAEC,OAAQ,IAC5CjC,EAAAA,cAACkC,EAAAA,KAAI,CACHC,GAAG,IACHC,QAAS,KACHhC,GAAWA,EAAU,MAAM,GAElC,cAIHJ,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACbD,EAAAA,cAAAA,IAAAA,CACEqC,GAAG,gBACHD,QAAS,KACP,MAAME,EAAQR,aAAaC,QAAQpB,GAC9B2B,GAASA,IAAU9B,GAItBW,SAASoB,KAAKC,UAAUC,OAAO/B,GAC/BoB,aAAaY,QAAQ/B,EAAWH,KAJhCW,SAASoB,KAAKC,UAAUG,IAAIjC,GAC5BoB,aAAaY,QAAQ/B,EAAWF,IAKlCkB,OAAOiB,cACL,IAAIC,aAAa,UAAW,CAAEC,IAAKnC,KAErCM,EACEL,EACIkB,aAAaC,QAAQpB,KAAeF,EAClCK,EACAC,EACFe,aAAaC,QAAQpB,KAAeF,EACpCM,EACAD,EACL,GAGFE,GAEHhB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBACZe,IAAYF,EAAa,OAAS,WAIzCd,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aAAa+B,MAAO,CAAEC,OAAQ,eAC3CjC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACbD,EAAAA,cAACkC,EAAAA,KAAI,CAACC,GAAG,QAAO,OAChBnC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBAAe,QAGlCD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACbD,EAAAA,cAACkC,EAAAA,KAAI,CAACC,GAAG,QAAO,OAChBnC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBACbD,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,WAAU,OAC1BD,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,OAAAA,CAAMC,UAAU,WAAU,sBAIhCD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,cACbD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,WACbD,EAAAA,cAACkC,EAAAA,KAAI,CAACC,GAAG,gBAAe,MACxBnC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,gBAAe,WAKtCD,EAAAA,cAAAA,MAAAA,CACEC,UAAU,eACV+B,MAAO,CAAEe,MAAU1C,EAAa,OAIxC,EC1FA,MApBe2C,IAAwD,IAAvD,SAAEC,EAAQ,SAAEC,EAAQ,UAAE9C,GAA2B,EAC/D,MACM+C,EADW,OACEF,aAAQ,EAARA,EAAUG,UAE7B,OACEpD,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAACqD,EAAK,CAACjD,UAAWA,IAClBJ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,iBAAiB,oBAAmBkD,GACjDnD,EAAAA,cAAAA,SAAAA,CAAQC,UAAU,kBAClBD,EAAAA,cAAAA,OAAAA,KAAOkD,GACPlD,EAAAA,cAAAA,SAAAA,KAAQ,MACH,IAAIsD,MAAOC,cAAc,eAC5B,IACAvD,EAAAA,cAAAA,IAAAA,CAAGwD,KAAK,4BAA2B,YAGnC,C,+CCiCV,IA3CYR,IAAuD,IAAD,UAArD,YAAES,EAAW,MAAEC,EAAK,SAAER,GAA0B,EAC3D,MAAM,KAAErD,IAASD,EAAAA,EAAAA,gBAAe,cAgB1B+D,EAAkBF,GAAe5D,EAAKC,aAAa2D,YACnDG,EAAgC,QAApB,EAAG/D,EAAKC,oBAAY,aAAjB+D,EAAmBH,MAExC,OACE1D,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQ4D,EAAY,GAAMA,EAAiBF,GAC3C1D,EAAAA,cAAAA,OAAAA,CAAME,KAAK,cAAc4D,QAASH,IAClC3D,EAAAA,cAAAA,OAAAA,CAAM+D,SAAS,WAAWD,QAASJ,IACnC1D,EAAAA,cAAAA,OAAAA,CAAM+D,SAAS,iBAAiBD,QAASH,IACzC3D,EAAAA,cAAAA,OAAAA,CAAM+D,SAAS,UAAUD,QAAQ,YACjC9D,EAAAA,cAAAA,OAAAA,CAAME,KAAK,eAAe4D,QAAQ,YAClC9D,EAAAA,cAAAA,OAAAA,CACEE,KAAK,kBACL4D,SAA0B,QAAjB,EAAAjE,EAAKC,oBAAY,OAAQ,QAAR,EAAjBkE,EAAmBC,cAAM,WAAR,EAAjBC,EAA2BC,UAAO,KAE7CnE,EAAAA,cAAAA,OAAAA,CAAME,KAAK,gBAAgB4D,QAASJ,IACpC1D,EAAAA,cAAAA,OAAAA,CAAME,KAAK,sBAAsB4D,QAASH,IACzCT,EACDlD,EAAAA,cAAAA,OAAAA,CACEE,KAAK,2BACL4D,QAAQ,gDAET,C,gICwGP,UA5GsBd,IAAwC,UAAvC,KAAEoB,EAAI,SAAEnB,GAA0B,EACf,QAAtB,EAAAmB,EAAKvE,KAAKC,oBAAY,OAAtBC,EAAwB2D,MAA1C,MACMW,EAAQD,EAAKE,kBAAkBC,OAC/B,EAACC,EAAM,EAAEpE,IAAaG,EAAAA,EAAAA,UAAiB,QACvC,EAACkE,EAAW,EAAEC,IAAkBnE,EAAAA,EAAAA,UAA+B8D,GAkBrE,OAhBAnD,EAAAA,EAAAA,YAAU,KAENwD,EADa,QAAXF,GACa,OAAIH,IAEJ,OAAIA,EAAMM,QAAOC,GAAKA,EAAEC,YAAYC,IAAIC,SAASP,OAElE,MAAMQ,EAAa7D,SAAS8D,uBAAuB,cACnD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,IACtB,QAAXV,GAAoBQ,EAAWE,GAAG7C,KAAOmC,EAC3CQ,EAAWE,GAAG1C,UAAUG,IAAI,WAE5BqC,EAAWE,GAAG1C,UAAUC,OAAO,UAEnC,GACC,CAAC+B,IAEiB,IAAjBH,EAAMc,OAENnF,EAAAA,cAACoF,EAAAA,EAAM,CAACnC,SAAUA,EAAU7C,UAAWA,GACrCJ,EAAAA,cAACqF,EAAAA,EAAG,MACJrF,EAAAA,cAAAA,IAAAA,KAAG,8JAUPA,EAAAA,cAACoF,EAAAA,EAAM,CAACnC,SAAUA,EAAU7C,UAAWA,GACrCJ,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OACbD,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,SAAAA,KAAQ,mBACRA,EAAAA,cAAAA,KAAAA,MAAM,iCAIVA,EAAAA,cAAAA,KAAAA,MACAA,EAAAA,cAAAA,KAAAA,CAAIgC,MAAO,CAAEsD,UAAW,SACrBb,EAAYc,KAAIC,IAAQ,MACvB,MAAM9B,EAAQ8B,EAAKX,YAAYnB,OAAS8B,EAAKC,OAAOC,KAMpD,OACE1F,EAAAA,cAAAA,KAAAA,CAAI8C,IAAK0C,EAAKC,OAAOC,MACnB1F,EAAAA,cAAAA,UAAAA,CACEC,UAAU,iBACV0F,WAAS,EACTC,SAAS,6BAET5F,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACkC,EAAAA,KAAI,CAACC,GAAIqD,EAAKC,OAAOC,KAAMG,SAAS,OACnC7F,EAAAA,cAAAA,OAAAA,CACE6F,SAAS,WACT5F,UAAU,wBAETyD,MAKY,QADZ,EACR8B,EAAKX,YAAYC,WAAG,aAApBgB,EAAsBP,KAAIQ,GAEvB/F,EAAAA,cAAAA,SAAAA,CACE8C,IAAKiD,EACL1D,GAAI0D,EACJ9F,UAAU,2BACVmC,QAAS4D,IACP5F,EAAU2F,IAAMvB,EAAS,MAAQuB,EAEjC,GAGDA,KAIP/F,EAAAA,cAAAA,UAAAA,KACEA,EAAAA,cAAAA,IAAAA,CACEiG,wBAAyB,CACvBC,OAAQV,EAAKX,YAAYpB,aAAe+B,EAAKW,SAE/CN,SAAS,iBAGb7F,EAAAA,cAAAA,QAAAA,KAAQwF,EAAKX,YAAYuB,OAExB,KAIXpG,EAAAA,cAAAA,KAAAA,MACO,EAWN,MAAMqG,EAAO,IAClBrG,EAAAA,cAACsG,EAAAA,EAAG,CAAC5C,MAAM,kBAAkBD,YAAY,GAAGP,SAAU,M","sources":["webpack://gatsby-starter-blog/./src/components/Bio.tsx","webpack://gatsby-starter-blog/./src/components/TopUI.tsx","webpack://gatsby-starter-blog/./src/components/Layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/pages/til.tsx"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { FC } from \"react\"\n//import { StaticImage } from \"gatsby-plugin-image\"\n\ninterface authorType {\n  name: string\n  summary: string\n}\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author: authorType = data.site.siteMetadata?.author\n  //const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/*{\" \"}\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      */}\n      <div>\n        {author?.name && (\n          <p>\n            <strong>{author.name}</strong> Ïù¥ÎùºÍ≥† Ìï©ÎãàÎã§.\n            <br />\n            {author?.summary || null}\n            <br />\n            <span className=\"smaller\">Î∞∞ÏõÄÏùÑ ÎÖ∏ÎÇòÎ®πÏñ¥Ïöî</span>\n          </p>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { FC } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { useEffect, useState } from \"react\"\n\ninterface ComponentProps {\n  setCurTag?(value: string): void\n}\n\nfunction TopUI({ setCurTag }: ComponentProps) {\n  const [scrollPercent, setScrollPercent] = useState(0)\n  const ORIGINAL = \"original\"\n  const REVERSED = \"reversed\"\n  const THEME_REVERSE = \"theme-reverse\"\n  const KEY_THEME = \"theme\"\n  const [preferDark, setPreferedDark] = useState(false)\n  const LIGHT_MODE = \"üåô\"\n  const DARK_MODE = \"üåô\"\n  const [curMode, setCurMode] = useState(\"\")\n\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const currentScroll: number = document.documentElement.scrollTop\n      const totalScroll: number =\n        document.documentElement.scrollHeight -\n        document.documentElement.clientHeight\n      setScrollPercent((currentScroll * 100) / totalScroll)\n    })\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setPreferedDark(true)\n    }\n    setCurMode(\n      preferDark\n        ? localStorage.getItem(KEY_THEME) === REVERSED\n          ? LIGHT_MODE\n          : DARK_MODE\n        : localStorage.getItem(KEY_THEME) === REVERSED\n        ? DARK_MODE\n        : LIGHT_MODE\n    )\n  }, [])\n\n  return (\n    <div>\n      <div className=\"top-ui\">\n        <h5 className=\"top-ui-title\" style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            onClick={() => {\n              if (setCurTag) setCurTag(\"ALL\")\n            }}\n          >\n            üëç Ï°∞ÏÑ±Í∞úÎ∞úÏã§Î°ù\n          </Link>\n        </h5>\n        <div>\n          <div className=\"top-ui-tag\">\n            <div className=\"tooltip\">\n              <a\n                id=\"light-or-dark\"\n                onClick={() => {\n                  const theme = localStorage.getItem(KEY_THEME)\n                  if (!theme || theme === ORIGINAL) {\n                    document.body.classList.add(THEME_REVERSE)\n                    localStorage.setItem(KEY_THEME, REVERSED)\n                  } else {\n                    document.body.classList.remove(THEME_REVERSE)\n                    localStorage.setItem(KEY_THEME, ORIGINAL)\n                  }\n                  window.dispatchEvent(\n                    new StorageEvent(\"storage\", { key: KEY_THEME })\n                  )\n                  setCurMode(\n                    preferDark\n                      ? localStorage.getItem(KEY_THEME) === REVERSED\n                        ? LIGHT_MODE\n                        : DARK_MODE\n                      : localStorage.getItem(KEY_THEME) === REVERSED\n                      ? DARK_MODE\n                      : LIGHT_MODE\n                  )\n                }}\n              >\n                {curMode}\n              </a>\n              <div className=\"tooltip-text\">\n                {curMode === LIGHT_MODE ? \"Îã§ÌÅ¨Î™®Îìú\" : \"ÎùºÏù¥Ìä∏Î™®Îìú\"}\n              </div>\n            </div>\n          </div>\n          <div className=\"top-ui-tag\" style={{ margin: \"0 20px 0 0\" }}>\n            <div className=\"tooltip\">\n              <Link to=\"/tag\">üè∑Ô∏è</Link>\n              <div className=\"tooltip-text\">ÌÉúÍ∑∏</div>\n            </div>\n          </div>\n          <div className=\"top-ui-tag\">\n            <div className=\"tooltip\">\n              <Link to=\"/til\">üìù </Link>\n              <div className=\"tooltip-text\">\n                <span className=\"smaller\">TIL</span>\n                <br />\n                <span className=\"x-small\">Today I Learned</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"top-ui-tag\">\n            <div className=\"tooltip\">\n              <Link to=\"/visitor-log\">üí¨</Link>\n              <div className=\"tooltip-text\">Î∞©Î™ÖÎ°ù</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"progress-bar\"\n        style={{ width: `${scrollPercent}%` }}\n      ></div>\n    </div>\n  )\n}\n\nexport default TopUI\n","import * as React from \"react\"\nimport TopUI from \"./TopUI\"\nimport { FC } from \"react\"\nimport { useState } from \"react\"\n\ninterface ComponentProps {\n  location: any\n  children: any | undefined\n  setCurTag?(value: string): void\n}\n\nconst Layout = ({ location, children, setCurTag }: ComponentProps) => {\n  const rootPath = \"/\" //`${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath\n\n  return (\n    <div>\n      <TopUI setCurTag={setCurTag} />\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{}</header>\n        <main>{children}</main>\n        <footer>\n          ¬© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { FC } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface ComponentProps {\n  description: string\n  title: string\n  children?: any\n}\n\nconst Seo = ({ description, title, children }: ComponentProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n      <meta\n        name=\"google-site-verification\"\n        content=\"iP6AmcpYft1WcrX_A3DlYxkWH2bwT-mrYanTBB8vm4k\"\n      />\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\nimport { FC } from \"react\"\n\ninterface SiteMetadata {\n  title: string\n}\n\ninterface Frontmatter {\n  date: string\n  title: string\n  description: string\n  tag: string[]\n}\n\ninterface Fields {\n  slug: string\n}\n\ninterface MarkdownRemarkNode {\n  excerpt: string\n  fields: Fields\n  frontmatter: Frontmatter\n}\n\ninterface TagNode {\n  fieldValue: string\n  totalCount: number\n}\n\nexport interface PageQueryData {\n  site: {\n    siteMetadata: SiteMetadata\n  }\n  allMarkdownRemark: {\n    nodes: MarkdownRemarkNode[]\n  }\n  tags: {\n    group: TagNode[]\n  }\n}\n\ninterface ComponentProps {\n  data: PageQueryData\n  location: any\n}\n\nconst TodayILearned = ({ data, location }: ComponentProps) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const [curTag, setCurTag] = useState<string>(\"ALL\")\n  const [curPostList, setCurPostList] = useState<MarkdownRemarkNode[]>(posts)\n\n  useEffect(() => {\n    if (curTag === \"ALL\") {\n      setCurPostList([...posts])\n    } else {\n      setCurPostList([...posts.filter(p => p.frontmatter.tag.includes(curTag))])\n    }\n    const tagButtons = document.getElementsByClassName(\"tag-button\")\n    for (let i = 0; i < tagButtons.length; i++) {\n      if (curTag !== \"ALL\" && tagButtons[i].id === curTag) {\n        tagButtons[i].classList.add(\"pressed\")\n      } else {\n        tagButtons[i].classList.remove(\"pressed\")\n      }\n    }\n  }, [curTag])\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} setCurTag={setCurTag}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} setCurTag={setCurTag}>\n      <div className=\"bio\">\n        <p>\n          <br />\n          <strong>Today I Learned</strong>\n          <br />\n          ÌïôÏäµ Í∏∞Î°ù&Ï†ïÎ¶¨Ïù∏Îç∞ Î∏îÎ°úÍ∑∏ Í≤åÏãúÍ∏ÄÍπåÏßÑ ÏïÑÎãå Îí∑Í≥†Í∏∞Îì§\n        </p>\n      </div>\n      <hr />\n      <ol style={{ listStyle: `none` }}>\n        {curPostList.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          /*const categories = [\n            { fieldValue: ALL_NAME, totalCount: allPosts.length },\n            ...data.categories.group,\n          ]*/\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span\n                        itemProp=\"headline\"\n                        className=\"post-list-item-title\"\n                      >\n                        {title}\n                      </span>\n                    </Link>\n                  </h2>\n                </header>\n                {post.frontmatter.tag?.map(c => {\n                  return (\n                    <button\n                      key={c}\n                      id={c}\n                      className=\"custom-button tag-button\"\n                      onClick={e => {\n                        setCurTag(c === curTag ? \"ALL\" : c)\n                        if (c === curTag) {\n                        }\n                      }}\n                    >\n                      {c}\n                    </button>\n                  )\n                })}\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n                <small>{post.frontmatter.date}</small>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <hr />\n    </Layout>\n  )\n}\n\nexport default TodayILearned\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => (\n  <Seo title=\"Today I Learned\" description=\"\" children={null} />\n)\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tag: { eq: \"TIL\" } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tag\n        }\n      }\n    }\n\n    tags: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tag) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","_data$site$siteMetada","React","className","name","summary","setCurTag","scrollPercent","setScrollPercent","useState","ORIGINAL","REVERSED","THEME_REVERSE","KEY_THEME","preferDark","setPreferedDark","LIGHT_MODE","DARK_MODE","curMode","setCurMode","useEffect","document","addEventListener","currentScroll","documentElement","scrollTop","totalScroll","scrollHeight","clientHeight","window","matchMedia","matches","localStorage","getItem","style","margin","Link","to","onClick","id","theme","body","classList","remove","setItem","add","dispatchEvent","StorageEvent","key","width","_ref","location","children","isRootPath","pathname","TopUI","Date","getFullYear","href","description","title","metaDescription","defaultTitle","_site$siteMetadata","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter","data","posts","allMarkdownRemark","nodes","curTag","curPostList","setCurPostList","filter","p","frontmatter","tag","includes","tagButtons","getElementsByClassName","i","length","Layout","Bio","listStyle","map","post","fields","slug","itemScope","itemType","itemProp","_post$frontmatter$tag","c","e","dangerouslySetInnerHTML","__html","excerpt","date","Head","Seo"],"sourceRoot":""}