{"componentChunkName":"component---src-templates-blog-post-js","path":"/github-blog-using-gatsby/","result":{"data":{"site":{"siteMetadata":{"title":"성훈 블로그"}},"markdownRemark":{"id":"696a5bc7-ebed-59cf-ad14-023eb3c514da","excerpt":"여러분 새해 복 많이 받으십시오 저는 미루고 미뤄왔던 깃허브 블로그를 드디어 만들었습니다 새해 시작이 좋네요 원래 Jeykll로 한번 시도를 했었는데 쩝.. Ruby인 것도 맘에 안 들고 어디서 막혔는지 기억도 안 나네요 대신 React 기반인 Gatsby…","html":"<p>여러분 새해 복 많이 받으십시오<br>\n저는 미루고 미뤄왔던 깃허브 블로그를 드디어 만들었습니다<br>\n새해 시작이 좋네요</p>\n<p>원래 Jeykll로 한번 시도를 했었는데<br>\n쩝.. Ruby인 것도 맘에 안 들고 어디서 막혔는지 기억도 안 나네요<br>\n대신 React 기반인 Gatsby를 썼습니다</p>\n<p>제 지인 블로그인 <a href=\"https://klloo.github.io/make-blog/\">여기(klloo 블로그)</a>를 좀 참고했는데요..<br>\n질투와 시기심. 그로 인한 동기부여. 가장 큰 도움. 내가 받은.<br>\n설치와 프로젝트 구성 과정은 저 안에 있는 <a href=\"https://devfoxstar.github.io/web/github-pages-gatsby/\">링크</a>를 많이 참고했습니다.<br>\n감사의 인사 드리며..</p>\n<h2>설치와 프로젝트 생성</h2>\n<p>링크에 자세한 설명이 있으니 저는 대략적으로만 쓰겠습니다<br>\n설치는 <code class=\"language-text\">npm install -g gatsby-cli</code><br>\n테마는 <a href=\"https://www.gatsbyjs.com/starters/\">여기에서</a> 골라보시면 되는데요<br>\n테마를 고르고 해당 깃허브 주소를 가져다가<br>\n<code class=\"language-text\">gatsby new 프로젝트명 깃허브URL</code><br>\n이런식으로 명령줄을 입력하시면 되겠습니다</p>\n<p>근데 저같은 경우<br>\n<img src=\"https://i.imgur.com/F5qObnj.png\" width=\"100%\" height=\"100%/\"><br>\n이런 문제가 나타났는데..<br>\n찾아보고 찾아보다가 모르겠어서 테마를 그냥 바꿔봤는데 됐습니다..<br>\n테마의 문제인가?<br>\n아무튼 저는 그냥 그래서 <code class=\"language-text\">Gatsby Starter Blog</code> 테마를 썼습니다.<br>\n쩝.. Gatsby 만든 사람이 만드신 스타터팩인가봅니다</p>\n<p>이제 프로젝트 폴더에서 <code class=\"language-text\">gatsby develop</code>을 입력하여 로컬 개발환경을 열고<br>\n브라우저에서 <code class=\"language-text\">localhost:8000</code>에 가면</p>\n<img src=\"https://i.imgur.com/OOqFGw3.png\" width=\"100%/\">\n이렇게 되어있습니다.\n<h2>Github Page와 연동</h2>\n<p>이제 <em>(본인의 깃허브 이름).github.io</em>라는 이름의 레포지토리를 만듭시다.<br>\n전 이미 있어서 그냥<br>\n<code class=\"language-text\">git remote add origin REPO_URL</code> 이런식으로 프로젝트 폴더에 원격 저장소를 연결하고<br>\n쓸데없는 것들이 있었어서.. <code class=\"language-text\">--force</code> 옵션을 붙여서 <code class=\"language-text\">push</code>해주어 덮어씌워버렸습니다</p>\n<p>이제 레포지토리의 <code class=\"language-text\">master</code>브랜치에 프로젝트가 올라가있을건데요<br>\n저는 배포를 따로 다른 브랜치에서 하고싶기 때문에 로컬 <code class=\"language-text\">deploy</code> 브랜치를 먼저 생성합니다 : <br>\n<code class=\"language-text\">git branch deploy</code><br>\n그리고 <strong>package.json</strong> 파일 보시면 맨 아래쪽에 <code class=\"language-text\">\"scripts\"</code> 룰이 있는데</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gatsby build &amp;&amp; gh-pages -d public -b deploy\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>이렇게 <code class=\"language-text\">deploy</code>를 추가해줍니다</p>\n<p>그런 다음 <code class=\"language-text\">npm run deploy</code> 입력해주면 알아서 배포파일을 만들고 원격 <code class=\"language-text\">deploy</code>브랜치에 올라가기까지 합니다</p>\n<p>마지막으로.. Github 레포지토리에서 <strong>Settings</strong> - <strong>pages</strong> - <strong>Build and deployment</strong> 로 가서 브랜치를 deploy로 설정해줍니다<br>\n이렇게 하면 deploy를 기준으로 Github Page를 호스팅해줍니다\n<img src=\"https://i.imgur.com/MGNEGYR.png\" width=\"100%/\"></p>\n<h2>초기 작업</h2>\n<h3>1. 프로필</h3>\n<p>지금은 Gatsby 개발해주신 Kyle Methews 선생님께서 인사를 하고계시니까.. 먼저 프로필을 바꿔봅시다?</p>\n<p><strong>bio.js</strong>를 보면 \"siteMetadata\"를 가져와서 <code class=\"language-text\">author</code>와 <code class=\"language-text\">social</code>을 가져오도록 되어 있다고 친절하게도 주석으로 써주셨습니다.<br>\n따라서 <strong>gatsby-config.js</strong> 파일로 가서 적당히 <code class=\"language-text\">Title, author, social</code> 이런 데이터들을 본인 것으로 바꿔주도록 합시다.</p>\n<h3>2. 폰트</h3>\n<p><a href=\"https://0andme.github.io/blog/gatsby%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-(4)-%ED%8F%B0%ED%8A%B8-%EB%B0%94%EA%BE%B8%EA%B8%B0/\">여기</a>를 좀 참고했습니다.<br>\n이미 Gatsby Starter Blog 테마는 Fontsource를 이용하고 있습니다.<br>\n저는 <strong>IBM</strong> 폰트를 사용하기 위해\n<code class=\"language-text\">npm install @fontsource/ibm-plex-sans</code>와 같이 입력하여 받아와서<br>\n<strong>gatsby-browser.js</strong>에 <code class=\"language-text\">import \"@fontsource/ibm-plex-sans\"</code>라고 써줬습니다.<br>\n그 다음 <strong>style.css</strong>에서 <code class=\"language-text\">body { font-family: \"ibm-plex-sans\"; }</code>라고 써주면..</p>\n<img src=\"https://i.imgur.com/kPO51P6.png\" width=\"50%\">\n<p>잘 되네요~</p>\n<h3>3. 상단바</h3>\n<p>그 왜 있잖아요 상단에 고정되어서 따라다니는데 반투명하고\n버튼같은거 있어서 블로그 홈으로 가거나 그럴 수 있는 상단 메뉴 UI<br>\n그런거를 만들어보겠습니다<br>\n이미 테마에서 스타일이 많이 적용되어있고 <code class=\"language-text\">wrapper</code>스타일도 존재하니 적당히 살펴보고 겹치지 않게 잘 해주도록 합시다</p>\n<p>일단 <code class=\"language-text\">TopUI</code> 컴포넌트를 만들어주고</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"top-ui\"</span><span class=\"token operator\">></span>\n   <span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Link to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span><span class=\"token operator\">></span>성훈 블로그<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Link<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<p>저는 대충 이런식으로 썼습니다<br>\n고맙게도 <code class=\"language-text\">Link</code>컴포넌트가 이미 있는데요<br>\n<code class=\"language-text\">to=\"/\"</code>와 같이 쓰면 블로그 홈으로 가도록 해줄 수 있네요</p>\n<p>이제 이 컴포넌트를 이미 있는 <strong>layout.js</strong>의 <code class=\"language-text\">Layout</code> 컴포넌트에서 함께 뱉어내도록 합시다<br>\n이미 최상위 <code class=\"language-text\">div</code>가 <code class=\"language-text\">global-wrapper</code>스타일로 적용되어있는데요<br>\n이 스타일에 구애받지 않고 따로 <code class=\"language-text\">top-ui</code> 스타일을 만들어주고 싶으니 이 <code class=\"language-text\">div</code>의 바깥에 작성하고 새로운 <code class=\"language-text\">div</code>로 감싸줬습니다\n<img src=\"https://i.imgur.com/0HjPPVL.png\" width=\"100%/\"></p>\n<p>이제 <strong>style.css</strong>에 가서 스타일 클래스를 만들어줍시다<br>\n<code class=\"language-text\">.top-ui {}</code>와 같이 쓰고 이 안에다 CSS style을 작성하면 되겠습니다<br>\n상단에 고정할거니까 <code class=\"language-text\">position: fixed</code>라고 쓰고<br>\n투명도를 조절하려면 <code class=\"language-text\">opacity</code><br>\n가 아닌.. 배경색만 반투명하게 하고싶으니\\ <code class=\"language-text\">background-color</code>를 <code class=\"language-text\">rgba(255,255,255,0.8)</code>와 같이 써줍니다.<br>\n<code class=\"language-text\">width: 100%</code>라고 적어주고 적당히 높이와 여백을 써주면??\n<img src=\"https://i.imgur.com/Um9EDUg.png\" width=\"100%/\">\n좋네요 나중에 적당히 다른 버튼들을 만들어주면 있어보일 것 같습니다</p>\n<h2>글 작성하기</h2>\n<p>블로그라면 응당 글을 써야겠죠?<br>\n프로젝트 폴더에 보면 <strong>content/blog</strong> 밑에 이미 세 개의 글이 기본적으로 있습니다.<br>\n이거 다 지워주고..<br>\n새 글을 쓰려면 폴더를 하나 만들고 그 밑에 마크다운 파일을 생성하여 여기에 글을 작성합니다. 이미지같은거 넣으려면 또한 같이 넣으시구요.<br>\n이런식으로</p>\n<img src=\"https://i.imgur.com/uZfUuLc.png\" width=\"100%/\">\n<p>글의 제목과 날짜, 설명은\n마크다운 파일 가장 상단에</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">---\ntitle: 내 동년배들 다 깃허브 블로그 운영한다\ndate: \"2024-01-03T15:30\"\ndescription: \"Gatsby로 Github 블로그 만들어봤습니다\"\n---</code></pre></div>\n<p>이렇게 쓰시면 알아서 아래와 같이 됩니다\n<img src=\"https://i.imgur.com/oVOck6K.png\" width=\"100%/\"></p>\n<p>쩝.. 이정도면 준비는 얼추 된 것 같네요.\n스타일도 좀 만지고 완성도도 높이고 하는건 천천히 하겠습니다\n이만 마칩니다</p>","frontmatter":{"title":"✒️ 내 동년배들 다 깃허브 블로그 운영한다","date":"January 03, 2024","description":"Gatsby로 Github 블로그 만들어봤습니다"}},"previous":null,"next":{"fields":{"slug":"/multi-threading-in-cpp/"},"frontmatter":{"title":"👥 C++ 멀티스레딩 맛 한번 보세요"}}},"pageContext":{"id":"696a5bc7-ebed-59cf-ad14-023eb3c514da","previousPostId":null,"nextPostId":"db93ec6a-4556-5de7-87a4-797032932351"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}