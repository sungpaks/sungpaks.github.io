{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/til/animation-in-react/","result":{"data":{"site":{"siteMetadata":{"title":"조성개발실록"}},"markdownRemark":{"id":"e04f0a94-3e43-597c-a8b5-f37f08b43af0","excerpt":"! 주의 : TIL 게시글입니다. 다듬지 않고 올리거나 기록을 통째로 복붙했을 수 있는 뒷고기 포스팅입니다. 데모 페이지 내 프로젝트가 좀 있어보이려면 애니메이션 넣는것도 좋은 선택일 수 있습니다 아무래도 먹기 좋은 떡이 보기에도 좋습니다. 반대인가? CSS…","html":"<blockquote>\n<p>! 주의 : TIL 게시글입니다. 다듬지 않고 올리거나 기록을 통째로 복붙했을 수 있는 뒷고기 포스팅입니다.</p>\n</blockquote>\n<p><a href=\"/demo\">데모 페이지</a></p>\n<p>내 프로젝트가 좀 있어보이려면 애니메이션 넣는것도 좋은 선택일 수 있습니다<br>\n아무래도 먹기 좋은 떡이 보기에도 좋습니다. 반대인가?</p>\n<h1 id=\"css만-써서-애니메이션-넣기\" style=\"position:relative;\"><a href=\"#css%EB%A7%8C-%EC%8D%A8%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%84%A3%EA%B8%B0\" aria-label=\"css만 써서 애니메이션 넣기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS만 써서 애니메이션 넣기</h1>\n<p>먼저 내가 리액트를 쓰든, 뭘 쓰든 간에, CSS 자체로 애니메이션을 넣을 수 있습니다</p>\n<h2 id=\"transitions\" style=\"position:relative;\"><a href=\"#transitions\" aria-label=\"transitions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Transitions</h2>\n<p>CSS Transitions를 이용하여, 특정 속성의 값이 변화할 때 애니메이션을 적용할 수 있습니다<br>\n<code class=\"language-text\">transition: color 0.5s ease</code> 이런 식으로요<br>\n\"<code class=\"language-text\">속성 지속시간 타이밍함수</code>\" 순으로 작성합니다<br>\n타이밍 함수는 없어도 되는데 원하는 스타일이 있으면 적용합니다<br>\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/transition-timing-function\">transition timing function</a> 뭐가 있는지는 여기서 확인할 수 있습니다</p>\n<p>여러 개 적을 때는 콤마로 구분해요<br>\n<code class=\"language-text\">transition: color 0.5s ease, background-color 0.5 ease-out</code> 이런 식으로</p>\n<p>그럼 이제 예를 들어, 다크모드 전환으로 인한 <code class=\"language-text\">body</code>의 배경색과 글씨 색 변화에 효과를 넣고 싶으면</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">body</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/*\n    다른 속성들\n  */</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> background-color 0.2s ease-in<span class=\"token punctuation\">,</span> color 0.2s ease-in<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이런 식으로 해주면 되겠죠? 우상단의 동그라미를 눌러보세요</p>\n<p>근데 이거는 이미 DOM에 있는 요소의 속성변화를 감지하는거라,<br>\n모달을 조건부로 DOM에 삽입하고 띄울 때 등의 상황에서는 <code class=\"language-text\">transition</code>으로 효과를 볼 수 없습니다<br>\n<code class=\"language-text\">transition</code>은 초기 값에 대해서는 효과가 없거덩요</p>\n<h2 id=\"keyframes\" style=\"position:relative;\"><a href=\"#keyframes\" aria-label=\"keyframes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keyframes</h2>\n<p>대신에 <code class=\"language-text\">@keyframes</code>를 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token atrule\"><span class=\"token rule\">@keyframes</span> slide-up-fade-in</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token selector\">0%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>30px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">100%</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">transform</span><span class=\"token punctuation\">:</span> <span class=\"token function\">translateY</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">opacity</span><span class=\"token punctuation\">:</span> 1<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 <code class=\"language-text\">@keyframes: 내맘대로-이름-정하기 {}</code> 와 같이 규칙 블록을 만들고<br>\n열어서 내부에는 <code class=\"language-text\">from, to</code> 또는 <code class=\"language-text\">0%, 100%</code>처럼 단계를 정합니다<br>\n대충 짐작 가능하듯이 <code class=\"language-text\">0%</code>는 처음에 시작할 상태, <code class=\"language-text\">100%</code>는 최종으로 도달할 상태입니다</p>\n<p>이제 이 애니메이션을 적용할 대상 선택자에<br>\n<code class=\"language-text\">animation: slide-up-fade-in 0.3 ease-out forwards;</code> 이라고 적어주면 됩니다<br>\n아까 transition과 비슷하게 하네요.<br>\n<code class=\"language-text\">forwards</code> 키워드는 애니메이션이 종료되면 이를 최종상태로 고정하게 명시하는 키워드입니다.<br>\n이제 이 <code class=\"language-text\">slide-up-fade-in</code> 애니메이션이 적용된 경우 투명하고 살짝 아래에 있던 상태에서 스르륵 올라오는 효과가 부여될 것 같네요~</p>\n<p>이제 이정도만으로도 어느정도의 애니메이션이 다 가능할텐데<br>\n모달을 닫을 때처럼 DOM에서 삭제하는 경우에는 애니메이션을 넣기 좀 까다롭고<br>\n복잡한 애니메이션도 넣기 머리아픕니다..<br>\n항상 그렇듯이 이걸 편하게 해주는 라이브러리가 또 존재하는데</p>\n<h1 id=\"framer-motion\" style=\"position:relative;\"><a href=\"#framer-motion\" aria-label=\"framer motion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Framer Motion</h1>\n<p><a href=\"https://www.framer.com/motion/\">Framer Motion</a>이라는 라이부락리입니다<br>\n<code class=\"language-text\">npm install framer-motion</code>으로 먼저 설치합니다<br>\n이제 이걸 쓸 곳에서 <code class=\"language-text\">import { motion } from \"framer-motion\"</code>와 같이 임포트해주면 준비됐습니다</p>\n<h2 id=\"기본-사용\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9\" aria-label=\"기본 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 사용</h2>\n<p>이제 움직일 요소에 대해, 예를 들어 div라면, <code class=\"language-text\">&lt;motion.div></code>로 대체해주면 됩니다<br>\n이제 여기다 <code class=\"language-text\">animate</code> 프로퍼티를 넣어주는데, 객체로 넣어줍니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">,</span> setX<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.div</span>\n  <span class=\"token attr-name\">animate</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">x</span><span class=\"token operator\">:</span> x <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> <span class=\"token string\">\"lightgreen\"</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token string\">\"fit-content\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setX</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev</span> <span class=\"token operator\">=></span> prev <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token string\">\"&lt;-\"</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  안녕하세요? 지나가겠습니다\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setX</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">prev</span> <span class=\"token operator\">=></span> prev <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span><span class=\"token string\">\"->\"</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>motion.div</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"/demo#1\">데모 : 1</a>처럼, 예를 들어, x값을 상태로 관리하고 버튼을 눌러 x값이 변하게 만들 수 있습니다<br>\n여기에 transition 프로퍼티를 또 설정할 수 있어서<br>\n<code class=\"language-text\">transition={{duration: 3}}</code>과 같이 커스텀할 수도 있습니다<br>\n<code class=\"language-text\">transition={{ type: 'spring', bounce: 5 }}</code> 이런 식으로 통통 튀게 할 수도 있구요</p>\n<h2 id=\"초기-상태와-종료-상태를-정하기\" style=\"position:relative;\"><a href=\"#%EC%B4%88%EA%B8%B0-%EC%83%81%ED%83%9C%EC%99%80-%EC%A2%85%EB%A3%8C-%EC%83%81%ED%83%9C%EB%A5%BC-%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"초기 상태와 종료 상태를 정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>초기 상태와 종료 상태를 정하기</h2>\n<p>이제 모달을 조건부로 DOM에 추가될 때는 올라오는 모션을 적용하고자 합니다<br>\n<code class=\"language-text\">animate</code>프로퍼티는 그대로 사용하고, <code class=\"language-text\">initial={{}}</code>로 초기 값을 정의할 수 있습니다<br>\n또한 <code class=\"language-text\">exit={{}}</code> 프로퍼티로 DOM에서 나갈 때의 종료 값을 정의할 수도 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.dialog</span>\n\t<span class=\"token attr-name\">initial</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\t  <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n\t<span class=\"token attr-name\">animate</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\t  <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n\t<span class=\"token attr-name\">exit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\t  <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이렇게 하고, <code class=\"language-text\">isOpen</code>같은 true/false 상태값으로 모달 오픈 여부를 관리하고,<br>\n<code class=\"language-text\">isOpen &amp;&amp; &lt;motion.modal></code> 이렇게 띄우면<br>\n열 때는 되지만 닫을 때는 모션이 적용되지 않습니다<br>\n이건 <code class=\"language-text\">isOpen</code>이 false로 변하면 리액트가 해당 컴포넌트를 DOM에서 <strong>즉시 제거</strong>하기 때문인데<br>\n이는 곧 리액트는 애니메이션이고 뭐고 몰라~ 라는 뜻입니다</p>\n<p>다행히도 framer motion 라이브러리에서 이걸 리액트가 기다리도록 하는 컴포넌트를 제공하는데<br>\n<code class=\"language-text\">&lt;AnimatePresence></code> 컴포넌트로 감싸면 됩니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">AnimatePresence</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token punctuation\">{</span>isModalOpen <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.dialog</span>\n      <span class=\"token attr-name\">onClose</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setIsModalOpen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">open</span>\n      <span class=\"token attr-name\">initial</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">exit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">animate</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">안녕하세요? 모달입니다</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setIsModalOpen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">모달 닫기</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>motion.dialog</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">AnimatePresence</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이제 이러면 <code class=\"language-text\">&lt;AnimatePresence></code> 덕분에 React는 애니메이션을 끝까지 기다리고 DOM에서 제거합니다</p>\n<p><a href=\"/demo#2\">데모 : 2</a>에서 확인해볼 수 있습니다</p>\n<h2 id=\"variants-프로퍼티로-간단히-할-수-있음\" style=\"position:relative;\"><a href=\"#variants-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EB%A1%9C-%EA%B0%84%EB%8B%A8%ED%9E%88-%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%8C\" aria-label=\"variants 프로퍼티로 간단히 할 수 있음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>variants 프로퍼티로 간단히 할 수 있음</h2>\n<p>variants 프로퍼티로 아예.. 약간 redux에서 reducer의 action type에서 하듯이?<br>\n아무튼 좀 간단하게 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.dialog</span>\n\t<span class=\"token attr-name\">variants</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\t  <span class=\"token literal-property property\">hidden</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t  <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n\t<span class=\"token attr-name\">initial</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>hidden<span class=\"token punctuation\">'</span></span>\n\t<span class=\"token attr-name\">animate</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>visible<span class=\"token punctuation\">'</span></span>\n\t<span class=\"token attr-name\">exit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>hidden<span class=\"token punctuation\">'</span></span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이런 식인데, 변수처럼 키-값 쌍을 variants에서 정의하고, 이를 <code class=\"language-text\">initial, animate, exit</code>에서 갖다 씁니다.<br>\n사실 <code class=\"language-text\">initial</code>과 <code class=\"language-text\">exit</code>은 내용이 똑같았잖아요?</p>\n<p>그리고 이렇게 <code class=\"language-text\">variants</code>에서 선언한 것들은 그 하위 <code class=\"language-text\">motion.요소</code>들도 효과를 받습니다<br>\n자식 모션 컴포넌트에서는 <code class=\"language-text\">hidden, visible</code>이라는 <code class=\"language-text\">variants</code>의 key에 대한 값들만 다시 재정의해주면 됩니다<br>\n<code class=\"language-text\">initial, animate, exit</code>은 다 상속받기 때문이지용</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.dialog</span>\n  <span class=\"token attr-name\">variants</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">hidden</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token attr-name\">initial</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">animate</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span>\n  <span class=\"token attr-name\">exit</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.p</span>\n    <span class=\"token attr-name\">variants</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">hidden</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token number\">0.5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    HI\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>motion.p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>motion.dialog</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이런 식으로요<br>\n자식 컴포넌트에 맞는 <code class=\"language-text\">variants</code>만 다시 적어주면 됩니다</p>\n<h2 id=\"hover할-때는\" style=\"position:relative;\"><a href=\"#hover%ED%95%A0-%EB%95%8C%EB%8A%94\" aria-label=\"hover할 때는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hover할 때는</h2>\n<p>버튼에 Hover하면 크기를 키우거나 하고 싶을 수 있습니다<br>\n사실 css만으로도 할 수는 있지만.. 이미 framer를 쓰고있으니까욘<br>\ncss쓰러 가기는 귀찮고, 이벤트리스너로 하려면 상태값을 또 추가해야합니다<br>\nframer는 단순하게 써줘도 기본으로 부드러운 애니메이션을 적용해주니까 또 좋습니다</p>\n<p>아무튼 그래서 <code class=\"language-text\">whileHover</code>같은 while류 프로퍼티를 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.button</span> <span class=\"token attr-name\">whileHover</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">scale</span><span class=\"token operator\">:</span> <span class=\"token number\">1.5</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setIsModalOpen</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  모달 열기\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>motion.button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이런 식으로용<br>\n대충 감이 오시죠?</p>\n<h2 id=\"staggering\" style=\"position:relative;\"><a href=\"#staggering\" aria-label=\"staggering permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Staggering</h2>\n<p>모션 컴포넌트 하위의 여러 자식 모션 컴포넌트들이 등장하게 될 때<br>\n한 번에 어셈블!! 이 아니라 차례대로 줄지어 들어오게 하고 싶다면<br>\nstaggering을 이용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">variants<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t  <span class=\"token literal-property property\">transition</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token literal-property property\">staggerChildren</span><span class=\"token operator\">:</span> <span class=\"token number\">0.05</span>\n\t  <span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>단순히 이렇게 해주면 됩니다.<br>\n그럼 <code class=\"language-text\">variants</code>의 <code class=\"language-text\">staggerChildren</code>에서 정의한 시간 간격에 따라<br>\n자식 모션 컴포넌트들이 줄지어 등장합니다<br>\n<a href=\"/demo#3\">데모 : 3</a>처럼요</p>\n<h2 id=\"키-프레임으로-효과-여러-개-넣기\" style=\"position:relative;\"><a href=\"#%ED%82%A4-%ED%94%84%EB%A0%88%EC%9E%84%EC%9C%BC%EB%A1%9C-%ED%9A%A8%EA%B3%BC-%EC%97%AC%EB%9F%AC-%EA%B0%9C-%EB%84%A3%EA%B8%B0\" aria-label=\"키 프레임으로 효과 여러 개 넣기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>키 프레임으로 효과 여러 개 넣기</h2>\n<p>애니메이션 넣을 때, 객체에 <code class=\"language-text\">scale:</code> 이런 키에 대한 값으로 그냥 숫자만 넣었는데요<br>\n숫자 배열도 넣을 수 있습니다.<br>\n<code class=\"language-text\">scale: [1.3, 0.7, 1.5, 0.5, 1]</code> 이러면 1.3 갔다가, 0.7로 다시 갔다가, ... 다 거쳐서 1에 도달합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.div</span>\n    <span class=\"token attr-name\">variants</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">visible</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">hidden</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">y</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">></span></span></code></pre></div>\n<p>이런 식으로 프레임을 지정할 수 있는 셈입니다<br>\n<a href=\"/demo#4\">데모 : 4</a>에 있습니다</p>\n<h2 id=\"명령적인-방법으로-애니메이션-정의하기\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EB%A0%B9%EC%A0%81%EC%9D%B8-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0\" aria-label=\"명령적인 방법으로 애니메이션 정의하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명령적인 방법으로 애니메이션 정의하기</h2>\n<p>지금까지는 선언적이었어요<br>\n모션 요소에 프로퍼티로써 애니메이션을 선언했습니다</p>\n<p>근데 이제 명령적인 방법도 궁금하죠? 예를 들어 입력이 유효하지 않으면 요소를 흔들리게 하거나 등..</p>\n<p>훅으로 할 수 있습니다. React 라이브러리답게 훅으로 애니메이션을 제어하는 방법을 제공합니다.<br>\n<code class=\"language-text\">const [scope, animate] = useAnimate()</code></p>\n<ul>\n<li>scope는 ref입니다. 원하는 HTML 요소에 연결하면 되겠습니다. <code class=\"language-text\">&lt;form ref={scope}></code>처럼</li>\n<li>animate는 <code class=\"language-text\">animate(선택자 문자열, { 애니메이션 상태 객체 }, { transition 객체 })</code>와 같이 써서 애니메이션을 트리거하는 함수입니다.\n<ul>\n<li>첫 번째 인자로 문자열로 선택자를 집어넣습니다. <code class=\"language-text\">'textarea, input, .my-class'</code>처럼</li>\n<li>두 번째 인자에는 <code class=\"language-text\">animate</code> 프로퍼티에 넣었던 객체와 동일</li>\n<li>세 번째 인자에는 <code class=\"language-text\">transition</code> 프로퍼티에 넣었던 객체와 동일하게 합니다.\n<ul>\n<li>이 때, stagger는 제공되는 <code class=\"language-text\">stagger()</code>함수를 import하여 <code class=\"language-text\">delay: stagger(0.5)</code>처럼 씁니다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>저는 빈 값을 제출하려 할 때 입력란이 진동되게 했습니다<br>\n아래처럼요</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>motionFormRef<span class=\"token punctuation\">,</span> motionFormAnimate<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAnimate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleInputSubmit</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">e</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> formData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> formData<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"demo-input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">motionFormAnimate</span><span class=\"token punctuation\">(</span>\n      <span class=\"token string\">\"input\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">rotateZ</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">duration</span><span class=\"token operator\">:</span> <span class=\"token number\">0.2</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">ref</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>motionFormRef<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onSubmit</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleInputSubmit<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>demo-input<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">입력</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><a href=\"/demo#5\">데모 : 5</a>에 구현되어 있습니다</p>\n<h2 id=\"스크롤-애니메이션\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\" aria-label=\"스크롤 애니메이션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크롤 애니메이션</h2>\n<p><code class=\"language-text\">useScroll</code> 훅으로 <code class=\"language-text\">scrollX, scrollY, scrollYProgress</code>같은 값을 가져올 수 있습니다<br>\n<code class=\"language-text\">scrollYProgress</code>는 0~1사이 값을 갖는 진행률이고, <code class=\"language-text\">scrollY</code>는 픽셀값입니다</p>\n<p>이제 이 <code class=\"language-text\">scrollY</code>값을 이용하여\n<code class=\"language-text\">const scrollOpacity = useTransform(scrollY, [0, 200, 300, 500], [1, 0.5, 0.5, 0]);</code>과 같이</p>\n<ul>\n<li>첫 번째 인자로, 변화를 추적할 값</li>\n<li>두 번째 인자로, 브레이크포인트 (scrollY의 픽셀)</li>\n<li>각 브레이크포인트에 상응하는 반환값</li>\n</ul>\n<p>이렇게 하면, <code class=\"language-text\">framer motion</code>라이브러리에서 이 값을 추적하고 변화시킵니다<br>\n그리고 또 이건 상태값으로 관리하는게 아니라서, 컴포넌트 함수를 다시 실행하지 않습니다<br>\n이는 모션 값 객체로 내부에서 알아서 감싸 관리하기 때문인데<br>\n이 덕분에 framer motion에 의한 에니메이션의 적용이 전체 컴포넌트 렌더링 사이클에 영향을 미치지 않게 합니다.<br>\n최적화 방면에서 중요한 역할을 하는 셈이죠</p>\n<p>이제 이렇게 얻어온 값을 <code class=\"language-text\">&lt;motion.div style={{opacity: scrollOpacity}}></code>와 같이 사용합니다.<br>\n이 <code class=\"language-text\">style</code>프로퍼티는 원래도 inline 스타일을 지정할 때 HTML요소에 사용할 수 있었지만<br>\n<code class=\"language-text\">&lt;motion.div></code>같은 모션 요소에서 더 특별해서, 여기에 모션 값을 넣어주면 그 값의 변화가 애니메이션을 트리거하면서도, 리렌더링이 일어나지 않게 합니다.</p>\n<p>전체 코드는 이렇구요</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> scrollY <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useScroll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> scrollOpacity <span class=\"token operator\">=</span> <span class=\"token function\">useTransform</span><span class=\"token punctuation\">(</span>\n  scrollY<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>motion.div</span>\n    <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">opacity</span><span class=\"token operator\">:</span> scrollOpacity\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n  <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>motion.div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>데모는 <a href=\"/demo#6\">여기</a></p>\n<h2 id=\"그-외-잡다한-것들\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EC%99%B8-%EC%9E%A1%EB%8B%A4%ED%95%9C-%EA%B2%83%EB%93%A4\" aria-label=\"그 외 잡다한 것들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 외 잡다한 것들</h2>\n<ul>\n<li><code class=\"language-text\">&lt;AnimatePresence></code>로 감쌀 때, 이 때 역시 목록처럼 여러 컴포넌트가 있을 때는 <code class=\"language-text\">key</code> props를 줘야 Framer Motion이 이들이 서로 별개임을 알 수 있습니다</li>\n<li><code class=\"language-text\">&lt;AnimatePresence mode='wait'></code> 이렇게 하면, 각 애니메이션들은 줄지어서 실행됩니다. (기본값은 <code class=\"language-text\">'sync'</code>라서, 동시에 플레이)</li>\n<li><code class=\"language-text\">&lt;motion.div layoutId='tab-indicator'></code> 이런 식으로 <code class=\"language-text\">layoutId</code> 프로퍼티를 추가하면, 이 값이 똑같은 모션 요소들끼리는 전환을 부드럽게 변경해줍니다.</li>\n</ul>\n<hr>\n<p><br>\n이거 덕분에 블로그에 애니메이션 좀 넣었네요<br>\n이만 마칩니다</p>","frontmatter":{"title":"React 프로젝트에 애니메이션 넣기","date":"October 05, 2024","description":"애니메이션 저도 참 좋아하는데요","tag":["TIL","React","CSS","Framer"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#css%EB%A7%8C-%EC%8D%A8%EC%84%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EB%84%A3%EA%B8%B0\">CSS만 써서 애니메이션 넣기</a></p>\n<ul>\n<li><a href=\"#transitions\">Transitions</a></li>\n<li><a href=\"#keyframes\">Keyframes</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#framer-motion\">Framer Motion</a></p>\n<ul>\n<li><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%82%AC%EC%9A%A9\">기본 사용</a></li>\n<li><a href=\"#%EC%B4%88%EA%B8%B0-%EC%83%81%ED%83%9C%EC%99%80-%EC%A2%85%EB%A3%8C-%EC%83%81%ED%83%9C%EB%A5%BC-%EC%A0%95%ED%95%98%EA%B8%B0\">초기 상태와 종료 상태를 정하기</a></li>\n<li><a href=\"#variants-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0%EB%A1%9C-%EA%B0%84%EB%8B%A8%ED%9E%88-%ED%95%A0-%EC%88%98-%EC%9E%88%EC%9D%8C\">variants 프로퍼티로 간단히 할 수 있음</a></li>\n<li><a href=\"#hover%ED%95%A0-%EB%95%8C%EB%8A%94\">Hover할 때는</a></li>\n<li><a href=\"#staggering\">Staggering</a></li>\n<li><a href=\"#%ED%82%A4-%ED%94%84%EB%A0%88%EC%9E%84%EC%9C%BC%EB%A1%9C-%ED%9A%A8%EA%B3%BC-%EC%97%AC%EB%9F%AC-%EA%B0%9C-%EB%84%A3%EA%B8%B0\">키 프레임으로 효과 여러 개 넣기</a></li>\n<li><a href=\"#%EB%AA%85%EB%A0%B9%EC%A0%81%EC%9D%B8-%EB%B0%A9%EB%B2%95%EC%9C%BC%EB%A1%9C-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98-%EC%A0%95%EC%9D%98%ED%95%98%EA%B8%B0\">명령적인 방법으로 애니메이션 정의하기</a></li>\n<li><a href=\"#%EC%8A%A4%ED%81%AC%EB%A1%A4-%EC%95%A0%EB%8B%88%EB%A9%94%EC%9D%B4%EC%85%98\">스크롤 애니메이션</a></li>\n<li><a href=\"#%EA%B7%B8-%EC%99%B8-%EC%9E%A1%EB%8B%A4%ED%95%9C-%EA%B2%83%EB%93%A4\">그 외 잡다한 것들</a></li>\n</ul>\n</li>\n</ul>"},"previous":{"fields":{"slug":"/til/about-redux-toolkit/"},"frontmatter":{"title":"아따 시방부터 리덕수 툴킷에 대해 알아볼텨 (Redux Toolkit)"}},"next":null},"pageContext":{"id":"e04f0a94-3e43-597c-a8b5-f37f08b43af0","previousPostId":"9de55127-7456-5f3a-b8e1-2dd8ff6d2ca9","nextPostId":null}},"staticQueryHashes":["2841359383"],"slicesMap":{}}