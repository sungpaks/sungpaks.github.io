{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/til/threejs-tips-and-tricks-for-beginner/","result":{"data":{"site":{"siteMetadata":{"title":"조성개발실록"}},"markdownRemark":{"id":"85d72f2b-b60d-5551-a37a-5eccde8d4112","excerpt":"! 주의 : TIL 게시글입니다. 다듬지 않고 올리거나 기록을 통째로 복붙했을 수 있는 뒷고기 포스팅입니다. Three.js 관련해서 이것저것 찾아보다가 Discovery Three.js라는 좋은 사이트를 발견했습니다 특히 The Big List of three.js Tips and…","html":"<blockquote>\n<p>! 주의 : TIL 게시글입니다. 다듬지 않고 올리거나 기록을 통째로 복붙했을 수 있는 뒷고기 포스팅입니다.</p>\n</blockquote>\n<p>Three.js 관련해서 이것저것 찾아보다가 <a href=\"https://discoverthreejs.com/\">Discovery Three.js</a>라는 좋은 사이트를 발견했습니다<br>\n특히 <a href=\"https://discoverthreejs.com/tips-and-tricks/\">The Big List of three.js Tips and Tricks!</a> 문서가 너무 좋아서 하나하나 읽어봤네요<br>\n저는 맞으면서 배웠는데 그런 맞으면서 배운 것들이 압축되어있는 느낌<br>\n그리고 아직도 몰랐던 내용들이 좀 있었습니다</p>\n<p>아무튼 그래서 저같이 영어울렁증 있는 코리안들도 간단하게 훑어볼 수 있게 정리(거의 번역)해왔습니다<br>\n언제 쓴 자료인지는 모르곘는데 deprecated된 내용도 조금씩 있더라구요<br>\n제가 아는 선에서는 이런 부분도 정정해서 역주를 달아놨습니다.</p>\n<p><code class=\"language-text\">(역주)</code>가 달려있는게 아닌 것들은 거의 그대로 번역만 한 사족없는 내용들입니다.</p>\n<h1 id=\"물체가-안보여용\" style=\"position:relative;\"><a href=\"#%EB%AC%BC%EC%B2%B4%EA%B0%80-%EC%95%88%EB%B3%B4%EC%97%AC%EC%9A%A9\" aria-label=\"물체가 안보여용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>물체가 안보여용</h1>\n<ul>\n<li>브라우저 콘솔 열어보세요(당연히 해보셨겠죠?)</li>\n<li>배경색 검은색말고 딴거 해보세요</li>\n<li><strong>조명</strong>은 응당 있어야</li>\n<li>재질들을 <code class=\"language-text\">MeshBasicMaterial</code>로 써보세요. &#x3C;-- <em>조명이 필요하지 않은</em> 재질\n<ul>\n<li><code class=\"language-text\">MeshStandardMaterial</code>같은 것들은 조명에 의해 영향을 받음 - 조명 없으면 당연히 안보임</li>\n</ul>\n</li>\n<li>카메라 확인\n<ul>\n<li><strong>viewing frustrum</strong>(<a href=\"https://ko.wikipedia.org/wiki/%EC%A0%88%EB%91%90%EC%B2%B4\">절두체</a>) 에 포함되는지 확인하세요.\n<ul>\n<li>예를 들어, near가 10인데 1만큼의 거리 내에 있으면 안보임</li>\n</ul>\n</li>\n<li>또한 당연히 <strong>카메라의 위치나 시야각</strong>에 물체가 포함되는지도 보세요</li>\n<li>(역주) <a href=\"https://threejs.org/docs/#examples/ko/controls/OrbitControls\">OrbitControls</a>쓰면 마우스로 카메라를 이동/줌/회전하면서 보기 용이함</li>\n</ul>\n</li>\n<li><strong>스케일</strong>을 대충 정하지 말고 기준을 잡으세요.\n<ul>\n<li>ex. \"1\"을 1미터로 생각하는 등, 기준을 명확히</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"general-tips\" style=\"position:relative;\"><a href=\"#general-tips\" aria-label=\"general tips permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>General Tips</h1>\n<ul>\n<li>자바스크립트에서 <strong>객체 생성은 비싼 작업</strong>이니 루프 내에서 막 하지 마세요\n<ul>\n<li>대신 <code class=\"language-text\">Vector3</code> 객체 하나만 생성해두고 <code class=\"language-text\">vector.set()</code>같은 메서드로 재사용 ㄱㄱ</li>\n</ul>\n</li>\n<li>렌더 루프에서도 마찬가지 : <strong>최소한 초당 60프레임은 보장</strong>해야 애니메이션이 매끄러움\n<ul>\n<li>그러니 매 루프에서 일어나는 일이 적어도 1/60초 내에 끝나야 함</li>\n</ul>\n</li>\n<li><code class=\"language-text\">Geometry</code>대신에 <code class=\"language-text\">BufferGeometry</code>쓰세요. 훨씬빠름 (<code class=\"language-text\">BoxGeometry</code>같은 빌트인 geometry도, 대응되는 <code class=\"language-text\">BoxBufferGeometry</code>있음)</li>\n<li>재질, 텍스쳐, 오브젝트 등등 다른것도 재사용을 항상 생각하세요</li>\n</ul>\n<h1 id=\"국제-단위계-쓰기\" style=\"position:relative;\"><a href=\"#%EA%B5%AD%EC%A0%9C-%EB%8B%A8%EC%9C%84%EA%B3%84-%EC%93%B0%EA%B8%B0\" aria-label=\"국제 단위계 쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>국제 단위계 쓰기</h1>\n<p>국제단위계: 이를테면</p>\n<ul>\n<li>거리는 미터. (`1 three.js unit = 1 meter 대응)\n<ul>\n<li>(역주) Three.js는 거리 단위가 unitless라고 아는데 딱 이렇게 대응시켜 생각하면 편하다는 뜻?같기도</li>\n</ul>\n</li>\n<li>시간은 seconds</li>\n<li>빛은 Candela(cd), Lumen(lm), Lux(lx)\n<ul>\n<li><code class=\"language-text\">renderer.physicallyCorrectLights = true</code> 를 켜는 경우에 해당\n<ul>\n<li>(역주) Lumen 단위가 되는 것으로 알고있음.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>우주 시뮬레이션처럼 완전히 특별한 단위계를 사용해야 한다면 : <a href=\"https://threejs.org/examples/#webgl_camera_logarithmicdepthbuffer\">로그 스케일의 depth buffer를 사용하세요</a></p>\n<h1 id=\"정확한-색상\" style=\"position:relative;\"><a href=\"#%EC%A0%95%ED%99%95%ED%95%9C-%EC%83%89%EC%83%81\" aria-label=\"정확한 색상 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정확한 색상</h1>\n<p>(근사적으로)정확한 색상을 위해서는 렌더러 세팅을 이렇게 해주세요</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">renderer<span class=\"token punctuation\">.</span>gammaFactor <span class=\"token operator\">=</span> <span class=\"token number\">2.2</span><span class=\"token punctuation\">;</span>\nrenderer<span class=\"token punctuation\">.</span>outputEncoding <span class=\"token operator\">=</span> <span class=\"token constant\">THREE</span><span class=\"token punctuation\">.</span>sRGBEncoding<span class=\"token punctuation\">;</span></code></pre></div>\n<p>(역주) 근데 최근에 감마팩터 옵션 쓰니까 deprecated라고 나왔읍니다. outputEncoding도 typescript에 잡히지가 않구요</p>\n<ul>\n<li><a href=\"https://discourse.threejs.org/t/deprecated-gamma-correction-alternative/57170\">이와 관련한 Three.js 포럼 질문</a></li>\n<li><a href=\"https://discourse.threejs.org/t/updates-to-color-management-in-three-js-r152/50791\">Three.js <strong>r152부터는 Color Management 시스템이 변경</strong></a>되어서 <code class=\"language-text\">encoding</code>들을 이제 <code class=\"language-text\">colorSpace</code>라고 생각하셔야 합니다.\n<ul>\n<li>예를 들어, <code class=\"language-text\">outputEncoding</code> -> <code class=\"language-text\">outputColorSpace</code></li>\n</ul>\n</li>\n</ul>\n<p>색상은:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x800080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncolor<span class=\"token punctuation\">.</span><span class=\"token function\">convertSRGBToLinear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 또는 재질에 적용된 색상도</span>\n<span class=\"token keyword\">const</span> material <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MeshBasicMaterial</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> <span class=\"token number\">0x800080</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmaterial<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span><span class=\"token function\">convertSRGBToLinear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>(역주) 위에서 언급한 r152버전부터 또한 <code class=\"language-text\">convertSRGBToLinear()</code>가 필요하지 않습니다.\n아래는 Migration Guide에서 발췌</p>\n<blockquote>\n<ol>\n<li>Be aware that three.js now interprets CSS and hexadecimal as <em>sRGB</em> colors by default (as in CSS and HTML), and automatically converts them to Linear-sRGB:</li>\n</ol>\n</blockquote>\n<h1 id=\"javascript\" style=\"position:relative;\"><a href=\"#javascript\" aria-label=\"javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JavaScript</h1>\n<ul>\n<li>자바스크립트 엔진은 자주 업데이트되고 최적화가 계속 추가되니, 뭐가 빠른건지는 알아서 테스트해보거나 최신 자료를 찾아보세요.\n<ul>\n<li>ex. <code class=\"language-text\">array.map, array.forEach</code>쓰지마세요!! 등??</li>\n</ul>\n</li>\n<li>스타일 가이드와 린트 룰을 따르세요\n<ul>\n<li>eslint, prettier 등.</li>\n<li><a href=\"https://github.com/airbnb/javascript\">Airbnb 스타일</a>이 보통 자주 쓰이지만, Three.js에서는 <a href=\"https://github.com/mrdoob/three.js/wiki/Mr.doob%27s-Code-Style%E2%84%A2\">mrdoob (Three.js 레포지토리 방장) 스타일</a>이 선호되는 듯</li>\n<li>관련 플러그인: <a href=\"https://www.npmjs.com/package/eslint-config-airbnb\">eslint-config-airbnb</a> , <a href=\"https://www.npmjs.com/package/eslint-config-mdcs\">eslint-config-mdcs</a>.</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"모델-메쉬-등-볼-수-있는-것들\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8-%EB%A9%94%EC%89%AC-%EB%93%B1-%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8A%94-%EA%B2%83%EB%93%A4\" aria-label=\"모델 메쉬 등 볼 수 있는 것들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델, 메쉬 등 볼 수 있는 것들</h1>\n<ul>\n<li>Wavefront OBJ, COLLADA같이 텍스트 기반 3D 데이터 포맷보다는 웹에 최적화된 <strong>glTF</strong>같은거 쓰세요.</li>\n<li>glTF 파일을 <strong>Draco mesh compression</strong>으로 압축하세요. 가끔은 10%까지 되기도 함!!\n<ul>\n<li>또는 gltfpack 이라는 루키도 있음</li>\n</ul>\n</li>\n<li>한꺼번에 많은 오브젝트를 보이게하거나 안보이게 하려면(또는 씬에서 제거/추가) - <a href=\"https://threejs.org/docs/#api/en/core/Layers\">Layers</a>쓰세요</li>\n<li>정확히 같은 위치에 놓인 물체들은 <em>Z-fighting</em> 을 일으키며 깜빡거립니다. GPU도 힘들어하니 0.001같이 아주 작은 간격을 두세요</li>\n<li>원점의 중심으로부터 너무 멀리 가지 마세요 - 큰 좌표계에서는 floating-point 에러 위험이 생깁니다</li>\n<li><code class=\"language-text\">Scene</code>을 움직이지 마세요. (만들어질 때 <code class=\"language-text\">(0,0,0)</code>)</li>\n</ul>\n<h1 id=\"카메라\" style=\"position:relative;\"><a href=\"#%EC%B9%B4%EB%A9%94%EB%9D%BC\" aria-label=\"카메라 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>카메라</h1>\n<ul>\n<li>성능을 위해 절두체를 잘 활용하세요.\n<ul>\n<li>(역주) ex. 배그에서 너무 멀면 렌더링 안해버리는 것처럼</li>\n</ul>\n</li>\n<li>far clipping plane (멀리 있는 것들이 안보이기 시작하는, 절두체의 먼 쪽 평면) 에 걸치게 물체를 두지 마세요. 특히 그 평면이 크면 클수록 더!! 깜빡임 문제가 생깁니다.</li>\n</ul>\n<h1 id=\"렌더러\" style=\"position:relative;\"><a href=\"#%EB%A0%8C%EB%8D%94%EB%9F%AC\" aria-label=\"렌더러 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>렌더러</h1>\n<ul>\n<li><code class=\"language-text\">preserveDrawingBuffer</code>, alpha buffer, stencil buffer, depth buffer 이런거는 꼭 필요한거 아니면 쓰지마세요</li>\n<li>렌더러 생성 시 <code class=\"language-text\">powerPreference: \"high-performance</code> 써보세요. 유저 시스템의 GPU가 여러개면 제일 좋은거 쓰게합니다</li>\n<li>카메라 위치가 <a href=\"https://docs.unity3d.com/Packages/com.unity.visualeffectgraph@10.5/manual/Operator-Epsilon.html\">epsilon</a> 단위로 변했거나 애니메이션이 일어나는 경우에만 다시 렌더링하세요</li>\n<li>씬이 정적이고 <code class=\"language-text\">OrbitControl</code>을 쓴다면 <code class=\"language-text\">change</code> 이벤트리스너에서 <code class=\"language-text\">renderer.render(scene, camera)</code>를 호출하세요 - 카메라가 움직일 때만 렌더링하게</li>\n</ul>\n<p>마지막 두 개는 프레임 속도를 향상하는건 아니지만 팬 작동과 (모바일 기기의) 배터리 소모를 줄여줍니다</p>\n<h1 id=\"조명\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EB%AA%85\" aria-label=\"조명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조명</h1>\n<ul>\n<li>직선광 (<code class=\"language-text\">SpotLight, PointLight, RectAreaLight, DirectionalLight</code>)은 상대적으로 느립니다.</li>\n<li>씬에 조명을 직접 새로 추가하거나 제거하기보다는 <code class=\"language-text\">light.visible=false</code> 또는 <code class=\"language-text\">light.intensity=0</code>을 사용합시다.\n<ul>\n<li>조명이 새로 들어오거나 제거되면 <code class=\"language-text\">WebGLRenderer</code>는 전체 쉐이더 프로그램을 다시 컴파일해야 합니다.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">renderer.physicallyCorrectLights</code>는 켜서 국제단위계 씁시다.</li>\n</ul>\n<h1 id=\"그림자\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A6%BC%EC%9E%90\" aria-label=\"그림자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그림자</h1>\n<ul>\n<li>씬이 정적이면 그림자 맵을 매 프레임이 아닌 무언가 변경이 있을 때만 업데이트하세요</li>\n<li><a href=\"https://threejs.org/docs/#api/en/helpers/CameraHelper\">CameraHelper</a>를 사용하면 그림자와 카메라의 시야 절두체를 시각적으로 확인하기 좋습니다</li>\n<li>그림자 절두체와 텍스쳐 해상도는 최대한 작게</li>\n<li>point light에 의한 그림자는 다른 것들보다 더 계산이 비쌉니다. 예를 들어, <code class=\"language-text\">PointLight</code>는 각 6개 방향을 계산해야하므로 <code class=\"language-text\">DirectionLight</code>와 <code class=\"language-text\">SpotLight</code>보다 6배 연산이 필요합니다.\n<ul>\n<li><code class=\"language-text\">CameraHelper</code>는 point light의 그림자 하나만 보여줍니다. 나머지 5개가 더 있다는 사실에 유념하세요</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"재질\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EC%A7%88\" aria-label=\"재질 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재질</h1>\n<ul>\n<li><code class=\"language-text\">MeshLambertMaterial</code>은 광나는 재질에는 동작하지 않습니다. 그러나 의류같은 매트한 재질들에 대해서는 <code class=\"language-text\">MeshPhongMaterial</code>만큼이나 비슷하게 보이겠지만 더 빠릅니다.</li>\n<li>morph target이나 morph normal 쓴다면 <code class=\"language-text\">morphTargets=true</code>를, SkinnedMesh 쓴다면 <code class=\"language-text\">material.skinning = true</code>를 켜줍시다.\n<ul>\n<li>(역주) 근데 두 옵션 다 공식문서에 안보이는걸 보면 없어졌나 싶기도 합니다</li>\n</ul>\n</li>\n<li>morph target, morph normal, skinned mesh 등에 대해서는 재질을 공유할 수 없습니다. 각각의 재질은 유니크한 재질을 새로 만듭시다. (<code class=\"language-text\">material.clone()</code> 활용)</li>\n</ul>\n<h1 id=\"custom-materials--geometry\" style=\"position:relative;\"><a href=\"#custom-materials--geometry\" aria-label=\"custom materials  geometry permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Materials , Geometry</h1>\n<p>이 부분은 딱히 와닿는(옮긴이 기준) 부분이 없어서 넘어갑니다. 내용도 별로 없고</p>\n<h1 id=\"텍스쳐\" style=\"position:relative;\"><a href=\"#%ED%85%8D%EC%8A%A4%EC%B3%90\" aria-label=\"텍스쳐 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>텍스쳐</h1>\n<ul>\n<li>사이즈는 2의 제곱수(<strong>POT</strong>: Power Of Two)로 합시다. ex. 1, 2, 4, 8, 16, ..., 512, ..</li>\n<li>텍스쳐 사이즈를 변경하는 것보다 새로 만드는게 더 빠릅니다</li>\n<li>텍스쳐 사이즈는 가능한 작게.</li>\n<li>Non-POT 사이즈의 텍스쳐는 선형 또는 근사적 필터링과, clamp-to-edge또는 clamp-to-border 래핑이 필요합니다.\n<ul>\n<li>Mipmap 필터링과 repeat 래핑을 지원하지 않습니다.</li>\n<li>그니까 POT 사이즈 텍스쳐를 쓰시라고.</li>\n</ul>\n</li>\n<li>모든 텍스쳐는 같은 사이즈일 때 메모리에서 차지하는 용량이 똑같습니다. JPG와 PNG도, 파일 크기는 다를 수 있어도, GPU 메모리에서의 공간 차지는 똑같습니다</li>\n</ul>\n<h1 id=\"antialiasing과-post-processing\" style=\"position:relative;\"><a href=\"#antialiasing%EA%B3%BC-post-processing\" aria-label=\"antialiasing과 post processing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Antialiasing과 Post-Processing</h1>\n<p>은 내용도 적고 딱히 이 기능 자체가 기초적이진 않은 것 같아서 넘어갑니다.\n궁금하면 <a href=\"https://discoverthreejs.com/tips-and-tricks/#antialiasing\">여기</a>에서 확인</p>\n<h1 id=\"무언가를-제거하기\" style=\"position:relative;\"><a href=\"#%EB%AC%B4%EC%96%B8%EA%B0%80%EB%A5%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\" aria-label=\"무언가를 제거하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>무언가를 제거하기</h1>\n<p>씬에서 무언가를 제거할 때는</p>\n<ul>\n<li>일시적이고 곧 다시 추가할거라면, <code class=\"language-text\">object.visible = false</code> 또는 <code class=\"language-text\">material.opacity = 0</code>, 또는 <code class=\"language-text\">light.intensity = 0</code> 같이 임시로 안보이게 합시다.</li>\n<li>완전히 제거할거라면, 관련한 <a href=\"https://discoverthreejs.com/tips-and-tricks/#antialiasing\">공식문서 매뉴얼</a>이 있으니 잘 참고합시다.</li>\n</ul>\n<h1 id=\"이외-내용--추가-읽을-거리들\" style=\"position:relative;\"><a href=\"#%EC%9D%B4%EC%99%B8-%EB%82%B4%EC%9A%A9--%EC%B6%94%EA%B0%80-%EC%9D%BD%EC%9D%84-%EA%B1%B0%EB%A6%AC%EB%93%A4\" aria-label=\"이외 내용  추가 읽을 거리들 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>이외 내용 + 추가 읽을 거리들</h1>\n<ul>\n<li>씬에서 오브젝트를 업데이트한다면: <a href=\"https://threejs.org/docs/#manual/en/introduction/How-to-update-things\">How to update things</a>.</li>\n<li>[이 아티클의 Performance 관련 내용](Read this article: <a href=\"https://threejs.org/docs/#manual/en/introduction/How-to-update-things\">How to update things</a>.)</li>\n<li><a href=\"https://docs.unity3d.com/Manual/OptimizingGraphicsPerformance.html\">Optimizing graphics performance (Unity)</a></li>\n<li><a href=\"https://docs.unrealengine.com/en-us/Engine/Performance/Guidelines\">Performance Guidelines for Artists and Designers (Unreal)</a></li>\n<li><a href=\"http://webglinsights.github.io/tips.html\">WebGL Insights Tips</a></li>\n</ul>","frontmatter":{"title":"이건 첫 번째 레슨, 초보를 위한 Three.js Tips & Tricks (번역 90%)","date":"July 12, 2025","description":"모르면 맞아야 하는 초심자들을 위한 Three.js 팁과 노하우들","tag":["TIL","JavaScript","Three.js"]},"tableOfContents":"<ul>\n<li><a href=\"#%EB%AC%BC%EC%B2%B4%EA%B0%80-%EC%95%88%EB%B3%B4%EC%97%AC%EC%9A%A9\">물체가 안보여용</a></li>\n<li><a href=\"#general-tips\">General Tips</a></li>\n<li><a href=\"#%EA%B5%AD%EC%A0%9C-%EB%8B%A8%EC%9C%84%EA%B3%84-%EC%93%B0%EA%B8%B0\">국제 단위계 쓰기</a></li>\n<li><a href=\"#%EC%A0%95%ED%99%95%ED%95%9C-%EC%83%89%EC%83%81\">정확한 색상</a></li>\n<li><a href=\"#javascript\">JavaScript</a></li>\n<li><a href=\"#%EB%AA%A8%EB%8D%B8-%EB%A9%94%EC%89%AC-%EB%93%B1-%EB%B3%BC-%EC%88%98-%EC%9E%88%EB%8A%94-%EA%B2%83%EB%93%A4\">모델, 메쉬 등 볼 수 있는 것들</a></li>\n<li><a href=\"#%EC%B9%B4%EB%A9%94%EB%9D%BC\">카메라</a></li>\n<li><a href=\"#%EB%A0%8C%EB%8D%94%EB%9F%AC\">렌더러</a></li>\n<li><a href=\"#%EC%A1%B0%EB%AA%85\">조명</a></li>\n<li><a href=\"#%EA%B7%B8%EB%A6%BC%EC%9E%90\">그림자</a></li>\n<li><a href=\"#%EC%9E%AC%EC%A7%88\">재질</a></li>\n<li><a href=\"#custom-materials--geometry\">Custom Materials , Geometry</a></li>\n<li><a href=\"#%ED%85%8D%EC%8A%A4%EC%B3%90\">텍스쳐</a></li>\n<li><a href=\"#antialiasing%EA%B3%BC-post-processing\">Antialiasing과 Post-Processing</a></li>\n<li><a href=\"#%EB%AC%B4%EC%96%B8%EA%B0%80%EB%A5%BC-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\">무언가를 제거하기</a></li>\n<li><a href=\"#%EC%9D%B4%EC%99%B8-%EB%82%B4%EC%9A%A9--%EC%B6%94%EA%B0%80-%EC%9D%BD%EC%9D%84-%EA%B1%B0%EB%A6%AC%EB%93%A4\">이외 내용 + 추가 읽을 거리들</a></li>\n</ul>"},"previous":{"fields":{"slug":"/javascript-memory-leaks/"},"frontmatter":{"title":"🚰 29K+ Star 오픈소스에서 메모리가 줄줄 새는 원인 찾기 (JavaScript 메모리 누수)"}},"next":null},"pageContext":{"id":"85d72f2b-b60d-5551-a37a-5eccde8d4112","previousPostId":"55623a6c-afa0-5905-b611-d824175046ca","nextPostId":null}},"staticQueryHashes":["2841359383"],"slicesMap":{}}