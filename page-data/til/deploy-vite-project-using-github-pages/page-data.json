{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/til/deploy-vite-project-using-github-pages/","result":{"data":{"site":{"siteMetadata":{"title":"조성개발실록"}},"markdownRemark":{"id":"7609df7a-0cbc-58cb-b53b-cf8043e366a5","excerpt":"! 주의 : TIL 게시글입니다. 다듬지 않고 올리거나 기록을 통째로 복붙했을 수 있는 뒷고기 포스팅입니다. 지금 후딱 배포해보고 싶은데 마침 당신의 프로젝트가 Vite로 되어있고 Github…","html":"<blockquote>\n<p>! 주의 : TIL 게시글입니다. 다듬지 않고 올리거나 기록을 통째로 복붙했을 수 있는 뒷고기 포스팅입니다.</p>\n</blockquote>\n<p>지금 후딱 배포해보고 싶은데<br>\n마침 당신의 프로젝트가 <strong>Vite</strong>로 되어있고<br>\nGithub 계정과 레포지토리도 준비되어 있다면..<br>\n양치하는 것보다 빠르게 배포 끝낼 수 있습니다.</p>\n<h1 id=\"github-action을-추가합니다\" style=\"position:relative;\"><a href=\"#github-action%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%A9%EB%8B%88%EB%8B%A4\" aria-label=\"github action을 추가합니다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github Action을 추가합니다.</h1>\n<p><a href=\"https://github.com/sitek94/vite-deploy-demo\">vite-deploy-demo</a>라는, 어떤 현인이 올려주신 Github Action을 가져다 씁시다.</p>\n<p>먼저 프로젝트 루트를 기준으로, <code class=\"language-text\">.github/workflows/deploy.yml</code> 라는 파일을 만듭니다.<br>\n<code class=\"language-text\">.github</code> 폴더와, <code class=\"language-text\">.github/workflows</code> 폴더 없으면 만드세요</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">push</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> main\n\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout repo\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Setup Node\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v4\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install dependencies\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> bahmutov/npm<span class=\"token punctuation\">-</span>install@v1\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build project\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Upload production<span class=\"token punctuation\">-</span>ready build files\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/upload<span class=\"token punctuation\">-</span>artifact@v4\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> production<span class=\"token punctuation\">-</span>files\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> ./dist\n\n  <span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n    <span class=\"token key atrule\">needs</span><span class=\"token punctuation\">:</span> build\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> github.ref == 'refs/heads/main'\n\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Download artifact\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/download<span class=\"token punctuation\">-</span>artifact@v4\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> production<span class=\"token punctuation\">-</span>files\n          <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> ./dist\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy to GitHub Pages\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v4\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./dist</code></pre></div>\n<p>그리고 이것을 망설임없이 Ctrl+C Ctrl+V합시다.<br>\n이 워크플로우는</p>\n<ul>\n<li>당신의 vite프로젝트를 빌드하고</li>\n<li>그 빌드 결과물을 <code class=\"language-text\">gh-pages</code> 브랜치에 푸시해줍니다.</li>\n</ul>\n<p>이제 워크플로우 파일을 추가하셨다면</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git add .\ngit commit -m '배포 워크플로우 추가'</code></pre></div>\n<p>이런 식으로 유식해보이게 커밋을 찍고, <code class=\"language-text\">git push origin main</code>을 하든가 어쩌든가 해서 원격 저장소에 올려줍니다.<br>\n이 워크플로우가 올라가고 나면, github action이 레포지토리의 <code class=\"language-text\">Actions</code> 탭에서 돌아갈텐데</p>\n<p>십중팔구 처음에는 실패할것이애요.</p>\n<p><img src=\"https://i.imgur.com/YN524jI.png\" alt=\"Github Action에게 write권한이 없어서 실패함\"></p>\n<p>이렇게 뜨면 안심하세요. 당신의 Github Action이 아직 쓰기 권한이 없어서 그럽니다.<br>\n빠르게 레포지토리의 <code class=\"language-text\">Settings</code>로 들어가줍니다.</p>\n<p><img src=\"https://i.imgur.com/E21yYvO.png\" alt=\"Settings - Actions - general 선택\"></p>\n<p>왼쪽 탭에서, <code class=\"language-text\">Actions > General</code>을 선택합니다.<br>\n스크롤을 내리면 <code class=\"language-text\">Workflow permissions</code>라고 있는데,<br>\n<code class=\"language-text\">Read and write permissions</code>를 선택해줍니다. 기존에는 <code class=\"language-text\">Read repository contents and packages permissions</code>였을거예요</p>\n<p><img src=\"https://i.imgur.com/SmZcedU.png\" alt=\"Write 권한을 켜기\"></p>\n<p>이제 다시 액션을 실행하면 잘 될겁니다</p>\n<h1 id=\"github-pages-설정하기\" style=\"position:relative;\"><a href=\"#github-pages-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"github pages 설정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github Pages 설정하기</h1>\n<p>이제 <code class=\"language-text\">Settings</code>에서, <code class=\"language-text\">Pages</code>로 이동합니다.</p>\n<p><img src=\"https://i.imgur.com/3PVMbu1.png\" alt=\"Pages로 ㄱㄱ\"></p>\n<p>여기에서, <code class=\"language-text\">Build and deployment</code>를 봅시다</p>\n<ul>\n<li>\"Source\"는 <code class=\"language-text\">Deploy from a branch</code></li>\n<li>\"Branch\"는 <code class=\"language-text\">gh-pages</code>, 디렉토리는 <code class=\"language-text\">/(root)</code></li>\n</ul>\n<p><img src=\"https://i.imgur.com/KVh3oYK.png\" alt=\"\"></p>\n<p>이렇게요. 이제 <code class=\"language-text\">Save</code>하시면 됩니다.<br>\n진짜 끝났어요.<br>\n<code class=\"language-text\">&lt;깃허브이름>.github.io/&lt;레포지토리이름></code> 으로 들어가시면 배포가 된 모습을 보실 수 있습니다<br>\n<a href=\"https://sungpaks.github.io/atomic-slash\">sungpaks.github.io/atomic-slash</a> 이런식으로여<br>\n액션이 정상적으로 돌았으면요. 그리고 한 1분정도 기다려야할 수도 있음</p>\n<h1 id=\"react-router-tanstack-router같은거-쓰시면\" style=\"position:relative;\"><a href=\"#react-router-tanstack-router%EA%B0%99%EC%9D%80%EA%B1%B0-%EC%93%B0%EC%8B%9C%EB%A9%B4\" aria-label=\"react router tanstack router같은거 쓰시면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Router, TanStack Router같은거 쓰시면</h1>\n<h2 id=\"base-path를-설정하세요\" style=\"position:relative;\"><a href=\"#base-path%EB%A5%BC-%EC%84%A4%EC%A0%95%ED%95%98%EC%84%B8%EC%9A%94\" aria-label=\"base path를 설정하세요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Base Path를 설정하세요.</h2>\n<p>당신 프로젝트가 진짜 철저한 SPA고 라우팅은 하나도 없으면 이것으로 되었습니다<br>\n근데 라우터를 달고계시거나 한다면 추가적인 설정이 필요할텐데:</p>\n<ul>\n<li>배포된 URL의 루트는 <code class=\"language-text\">foo.github.io/</code>가 아니라 <code class=\"language-text\">foo.github.io/bar</code> 인데</li>\n<li>라우터들은 <code class=\"language-text\">foo.github.io/bar</code>를 만나면 기본적으로 \"<code class=\"language-text\">foo.github.io</code>의 <code class=\"language-text\">/bar</code> 라우트인가보다! 라고 생각합니다</li>\n</ul>\n<p>그래서 <code class=\"language-text\">vite.config.js</code>에 아래와 같은 설정을 해줍시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">defineConfig</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token function\">TanStackRouterVite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">viteReact</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">tailwindcss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">base</span><span class=\"token operator\">:</span> <span class=\"token string\">\"/&lt;repo-name>/\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 이거 추가</span></code></pre></div>\n<p>예를 들어, <code class=\"language-text\">foo.github.io/bar</code>면 <code class=\"language-text\">base: \"/bar/\"</code> 이렇게요.<br>\n그리고 저같은 경우에는 TanStack Router를 썼었는데, TanStack Query 기준으로는 아래와 같이 <code class=\"language-text\">main.tsx</code>에서 <code class=\"language-text\">basepath</code>를 지정해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// src/main.tsx</span>\n<span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">createRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  basepath<span class=\"token operator\">:</span> <span class=\"token string\">\"/micro-state-management-example\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"루트-route가-아닌-경로에서-새로고침하거나-url로-접근하면-not-found래요\" style=\"position:relative;\"><a href=\"#%EB%A3%A8%ED%8A%B8-route%EA%B0%80-%EC%95%84%EB%8B%8C-%EA%B2%BD%EB%A1%9C%EC%97%90%EC%84%9C-%EC%83%88%EB%A1%9C%EA%B3%A0%EC%B9%A8%ED%95%98%EA%B1%B0%EB%82%98-url%EB%A1%9C-%EC%A0%91%EA%B7%BC%ED%95%98%EB%A9%B4-not-found%EB%9E%98%EC%9A%94\" aria-label=\"루트 route가 아닌 경로에서 새로고침하거나 url로 접근하면 not found래요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>루트 Route가 아닌 경로에서 새로고침하거나 URL로 접근하면 Not Found래요</h2>\n<p>예를 들어, <code class=\"language-text\">foo.github.io/bar/</code>가 기본 루트고<br>\n<code class=\"language-text\">foo.github.io/bar/first-route</code> 이런 Route가 있을 때<br>\n여기에서 새로고침하거나, URL로 직접 접근하거나, 하면 Not Found가 뜰 수도 있는데<br>\n루트 Route에 방문하지 않고 저런 경로에 접근하면 <code class=\"language-text\">index.html</code>을 받아오지 못해서 그렇습니다</p>\n<p>이거 해결도 되게 간단한데 <code class=\"language-text\">package.json</code>에서 빌드 스크립트를 조금 바꿔주면 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"vite build &amp;&amp; tsc &amp;&amp; cp dist/index.html dist/404.html\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 Vite build할 때, <code class=\"language-text\">index.html</code>을 <code class=\"language-text\">404.html</code>에 덮어쓰게 만들어주면 됩니다</p>\n<hr>\n<p><br>\n이게 끝입니다.</p>\n<p><img src=\"https://i.imgur.com/AbGV9GJ.png\" alt=\"내가 배포한거 1\">\n<img src=\"https://i.imgur.com/UBpu30t.png\" alt=\"내가 배포한거 2\"></p>\n<p>빠르고 간단한 배포가 필요할때 아주 좋아요.</p>","frontmatter":{"title":"머쓱할 정도로 쉬운, Vite 프로젝트를 Github Page에 배포하는 방법. + Routing 버그 해결","date":"July 27, 2025","description":"블로그 글이랍시고 써올리기도 좀 머쓱할정도","tag":["TIL","Deployment","Vite"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#github-action%EC%9D%84-%EC%B6%94%EA%B0%80%ED%95%A9%EB%8B%88%EB%8B%A4\">Github Action을 추가합니다.</a></p>\n</li>\n<li>\n<p><a href=\"#github-pages-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\">Github Pages 설정하기</a></p>\n</li>\n<li>\n<p><a href=\"#react-router-tanstack-router%EA%B0%99%EC%9D%80%EA%B1%B0-%EC%93%B0%EC%8B%9C%EB%A9%B4\">React Router, TanStack Router같은거 쓰시면</a></p>\n<ul>\n<li><a href=\"#base-path%EB%A5%BC-%EC%84%A4%EC%A0%95%ED%95%98%EC%84%B8%EC%9A%94\">Base Path를 설정하세요.</a></li>\n<li><a href=\"#%EB%A3%A8%ED%8A%B8-route%EA%B0%80-%EC%95%84%EB%8B%8C-%EA%B2%BD%EB%A1%9C%EC%97%90%EC%84%9C-%EC%83%88%EB%A1%9C%EA%B3%A0%EC%B9%A8%ED%95%98%EA%B1%B0%EB%82%98-url%EB%A1%9C-%EC%A0%91%EA%B7%BC%ED%95%98%EB%A9%B4-not-found%EB%9E%98%EC%9A%94\">루트 Route가 아닌 경로에서 새로고침하거나 URL로 접근하면 Not Found래요</a></li>\n</ul>\n</li>\n</ul>"},"previous":{"fields":{"slug":"/til/threejs-tips-and-tricks-for-beginner/"},"frontmatter":{"title":"이건 첫 번째 레슨, 초보를 위한 Three.js Tips & Tricks (번역 90%)"}},"next":null},"pageContext":{"id":"7609df7a-0cbc-58cb-b53b-cf8043e366a5","previousPostId":"85d72f2b-b60d-5551-a37a-5eccde8d4112","nextPostId":null}},"staticQueryHashes":["2841359383"],"slicesMap":{}}