{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/memo-summary-github-workflow-with-gemini-cli/","result":{"data":{"site":{"siteMetadata":{"title":"조성개발실록"}},"markdownRemark":{"id":"f6e8eac7-338e-5b29-8071-7b9be5f0a90b","excerpt":"저는 Obsidian…","html":"<p>저는 <a href=\"https://obsidian.md/\">Obsidian</a>에 회사 업무기록을 남기는데<br>\n문제는 제가 기록한 것 그대로의 메모들은 되게 날 것이라, 어디 내놓을 수도 없고 나중에 찾아보기도 힘듭니다.<br>\n또 문제는 이렇게 메모만 해놓고 거의 잊혀진다는 것인데요<br>\n이게 언젠가는 \"아!!이거 저번에 얘기 나눈거 적어놨는데, 어디에 있더라??\"가 됩니다<br>\n그리고 가끔, \"TODO\"로 적어두고도 까먹고 넘어가는 경우도 있고요..<br>\n그래서 생각한 것은 ~~</p>\n<p>어차피 <a href=\"https://github.com/Vinzent03/obsidian-git\">obsidian-git</a>플러그인으로 메모들을 비공개 레포지토리에 자동으로 올리고 있고,<br>\n그럼 <strong>Github Action + Gemini CLI로 주기적인 요약 워크플로우</strong>를 돌리면 어떨까?? 를 떠올렸습니다!<br>\n그리고 이런 작업을 Gemini CLI와 함께 하면 뚝딱 만들 수 있을 것 같았어요</p>\n<p>바로 시작해봅시다.</p>\n<h1 id=\"gemini-cli-\" style=\"position:relative;\"><a href=\"#gemini-cli-\" aria-label=\"gemini cli  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gemini CLI ?</h1>\n<p><a href=\"https://github.com/google-gemini/gemini-cli\">Gemini CLI</a>는 <strong>CLI 환경에서 곧바로 Google Gemini를 사용해볼 수 있는 오픈소스 AI 에이전트</strong>입니다.<br>\n개인 Google 계정을 등록만 하면 무료 티어에서도 분당 60회 &#x26; 일 1,000회 이내의 요청을 사용할 수 있고<br>\n또한 Gemini 2.5 Pro 모델, 구글 검색, 파일 시스템 작업, 쉘 커맨드 실행, MCP 등 많은 기능을 제공합니다</p>\n<p><img src=\"https://i.imgur.com/0mAyZ8U.png\" alt=\"대만족\"></p>\n<p>아래 방법 중 하나로 시작해볼 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">npx https://github.com/google-gemini/gemini-cli\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> @google/gemini-cli\nbrew <span class=\"token function\">install</span> gemini-cli</code></pre></div>\n<p>설치하고나면, <code class=\"language-text\">gemini</code> 명령으로 채팅 모드에 들어갈 수 있구요</p>\n<p><img src=\"https://i.imgur.com/Ars2RQq.png\" alt=\"gemini cli 챗모드\"></p>\n<p>또는 <code class=\"language-text\">gemini -p \"현재 코드베이스에 대해 설명해줘\"</code> 와 같이 프롬프트를 바로 전달할 수도 있습니다.</p>\n<h1 id=\"시작하기-전에-github-action을-로컬에서-실행할-수-있게-세팅하기-act\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84%EC%97%90-github-action%EC%9D%84-%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89%ED%95%A0-%EC%88%98-%EC%9E%88%EA%B2%8C-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0-act\" aria-label=\"시작하기 전에 github action을 로컬에서 실행할 수 있게 세팅하기 act permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시작하기 전에, Github Action을 로컬에서 실행할 수 있게 세팅하기 (<code class=\"language-text\">act</code>)</h1>\n<p>Github Action 초짜인 저로서는 이게 잘 돌아가는지 확인하는 과정 자체가 스트레스인데요<br>\nworkflow 파일을 수정하고, push해서, 잘 돌아가는지 확인하는게 굉장히 귀찮습니다</p>\n<p><img src=\"https://i.imgur.com/GCxiVzN.png\" alt=\"불편..\"></p>\n<p>이럴 때 유용한게, <strong>Github Action을 로컬에서 구동해주는 툴인 <a href=\"https://github.com/nektos/act\">act</a></strong> 입니다.<br>\nact를 사용하여 Github Action을 로컬에서 구동하면<br>\n(1) 피드백도 빠르게 받을 수 있고, (2) 오프라인 환경에서도 개발할 수 있으며 (3) 디버깅하기 좋은 등등.. 효능이 아주 많습니다</p>\n<p><img src=\"https://i.imgur.com/o6qIoqj.png\" alt=\"편안-\"></p>\n<p>그래서 <a href=\"https://apidog.com/kr/blog/how-to-run-your-github-actions-locally-a-comprehensive-guide-kr/\"><code class=\"language-text\">act</code>를 사용하여 깃허브 액션을 로컬에서 실행하기</a>라는 Apidog 글을 참고해서 act를 먼저 준비해보기로 했습니다.</p>\n<p>참고로 <strong>act는 Docker가 있어야만 사용할 수 있습니다</strong>.<br>\nGithub Action처럼 워크플로우 실행을 위해 격리된 환경을 생성할 때 Docker를 사용하기 때문임다<br>\n그러니 <a href=\"https://docs.docker.com/get-started/get-docker/\">Docker를 먼저 준비</a>해주세요.</p>\n<p>Docker가 준비되었다면, 맥에서는 <code class=\"language-text\">brew install act</code> 로 act를 설치하고<br>\n<code class=\"language-text\">act</code> 명령을 터미널에서 입력하여 실행할 수 있습니다<br>\n또한 워킹 디렉토리에 실행가능한 workflow나 job이 뭐가 있나 확인하려면<br>\n<code class=\"language-text\">act -l</code>로 그 목록을 볼 수 있습니다</p>\n<p><img src=\"https://i.imgur.com/OnT949q.png\" alt=\"act -l\"></p>\n<p><code class=\"language-text\">-j</code> 옵션으로 job을 명시해 실행할 수도 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">act -j summarize</code></pre></div>\n<p><img src=\"https://i.imgur.com/JEUzquE.png\" alt=\"is docker deamon running?\"></p>\n<p>이러고 끝난다면 Docker 안켜신거니까 켜주시구요</p>\n<p><img src=\"https://i.imgur.com/2lPMOSk.png\" alt=\"Docker Pull에서 무한대기\"></p>\n<p>이러고 뭔가 반응이 없어서 찜찜하시면 <code class=\"language-text\">--verbose</code> 옵션을 켜주세요. 말이 많아져서 뭔가 하고있는게 느껴지고 안심됩니다</p>\n<h1 id=\"github-action-workflow-작성하기\" style=\"position:relative;\"><a href=\"#github-action-workflow-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"github action workflow 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github Action Workflow 작성하기</h1>\n<p>먼저 이름을 대충 지어서 <code class=\"language-text\">.yaml</code>파일을 <code class=\"language-text\">.github/workflows/</code> 폴더 밑에 만들어주고, 워크플로우 작성을 시작합시다</p>\n<h2 id=\"workflow-yaml파일-작성\" style=\"position:relative;\"><a href=\"#workflow-yaml%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1\" aria-label=\"workflow yaml파일 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>workflow <code class=\"language-text\">.yaml</code>파일 작성</h2>\n<p>저는 이 요약 워크플로우를 <strong>주기적으로 실행하게 스케줄링</strong> 할건데,<br>\n매주 토요일 06:00 KST(금요일 21:00 UTC)로 정했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Weekly Notes Summary\n\n<span class=\"token key atrule\">permissions</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">contents</span><span class=\"token punctuation\">:</span> write\n\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">schedule</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">cron</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"0 21 * * 5\"</span>\n  workflow_dispatch<span class=\"token punctuation\">:</span></code></pre></div>\n<p><code class=\"language-text\">workflow_dispatch</code> 또한 추가해주어서 Github Actions 탭에서 수동으로 실행할 수 있게 했습니다.<br>\n이제 요약을 진행하는 job을 만들어볼건데</p>\n<ol>\n<li>레포지토리 파일들을 읽어야 하니 <code class=\"language-text\">checkout</code></li>\n<li>node.js 20 이상(gemini-cli는 최소한 20버전 이상이 필요합니다) + gemini-cli를 설치</li>\n<li>이제 gemini-cli에게 요약을 시킵니다.</li>\n</ol>\n<p>3번 단계는 별도의 스크립트로 빼서 편하게 작성해볼게요.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">summarize</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout repository\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v4\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">fetch-depth</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Set up Node.js\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/setup<span class=\"token punctuation\">-</span>node@v4\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"20\"</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install Gemini CLI\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install <span class=\"token punctuation\">-</span>g @google/gemini<span class=\"token punctuation\">-</span>cli\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run Summary Script\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">GEMINI_API_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GEMINI_API_KEY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ./scripts/generate_summary.sh</code></pre></div>\n<p>다만 스크립트에서, Gemini API Key를 사용해야 하니, <strong>Github Repository Secrets에 등록한 <code class=\"language-text\">GEMINI_API_KEY</code>를 환경변수로</strong> 넣어줍시다.</p>\n<p><img src=\"https://i.imgur.com/0FRoOa0.png\" alt=\"Repository secrets\"></p>\n<p>당연히 여기에 미리 준비를 해주셔야 하구요<br>\n이거는 <a href=\"https://aistudio.google.com/\">Google AI Studio</a>가셔서, 본인 계정 로그인하신 다음, 좌측 하단 <code class=\"language-text\">Get API Key</code>에서 키를 하나 발급받으셔서 넣으면 됩니다</p>\n<p>그리고 레포지토리 Settings에 들어오신 김에 해야할 일이 하나 더 있는데<br>\n좌측 메뉴에서 Actions - General에 가셔서</p>\n<p><img src=\"https://i.imgur.com/6hmQ3Iv.png\" alt=\"Workflow Permissions\"></p>\n<p><strong>워크플로우 권한을 <code class=\"language-text\">Read and write permissions</code></strong> 로 허용해줍시다.<br>\n이 권한이 있어야 워크플로우가 요약 결과 파일을 만들어줄 수 있어요</p>\n<h2 id=\"주간-기록을-모아-요약하는-스크립트-작성하기\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EA%B0%84-%EA%B8%B0%EB%A1%9D%EC%9D%84-%EB%AA%A8%EC%95%84-%EC%9A%94%EC%95%BD%ED%95%98%EB%8A%94-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"주간 기록을 모아 요약하는 스크립트 작성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주간 기록을 모아 요약하는 스크립트 작성하기</h2>\n<p>이제 workflow의 <code class=\"language-text\">Run Summary Script</code> 단계에서 실행하는 <code class=\"language-text\">generate_summary.sh</code> 스크립트를 작성해야 하는데요<br>\n저는 매주 토요일 실행이니, <strong>그 주 월요일부터 생성된 모든 기록들을 요약</strong>할 수 있도록 스크립트를 짜달라고 했습니다.</p>\n<p><img src=\"https://i.imgur.com/Ds3v5pF.png\" alt=\"해줭\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token builtin class-name\">set</span> <span class=\"token parameter variable\">-e</span>\n\n<span class=\"token comment\"># 1. 지난 월요일 구하기</span>\n<span class=\"token assign-left variable\">LAST_MONDAY</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> <span class=\"token parameter variable\">-d</span> <span class=\"token string\">\"last monday\"</span> +%F<span class=\"token variable\">)</span></span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Searching for files created since last Monday: <span class=\"token variable\">$LAST_MONDAY</span>\"</span>\n\n<span class=\"token comment\"># 2. Git을 사용하여 새로 생성된 .md 파일 찾기</span>\n<span class=\"token assign-left variable\">FILES_TO_SUMMARIZE</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">git</span> log --diff-filter<span class=\"token operator\">=</span>A --name-only <span class=\"token parameter variable\">--pretty</span><span class=\"token operator\">=</span>format:<span class=\"token string\">\"\"</span> <span class=\"token parameter variable\">--since</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$LAST_MONDAY</span>\"</span> -- <span class=\"token string\">\"*.md\"</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 빈 줄 제거</span>\n<span class=\"token assign-left variable\">FILES_TO_SUMMARIZE</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$FILES_TO_SUMMARIZE</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'/^\\s*$/d'</span><span class=\"token variable\">)</span></span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-z</span> <span class=\"token string\">\"<span class=\"token variable\">$FILES_TO_SUMMARIZE</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"No new markdown files have been created this week. Skipping.\"</span>\n  <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"--- Found files to summarize ---\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"<span class=\"token variable\">$FILES_TO_SUMMARIZE</span>\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"--------------------------------\"</span>\n\n<span class=\"token comment\"># 3. 프롬프트 정의</span>\n<span class=\"token assign-left variable\">PROMPT</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">'EOF'\n...대충 기록 요약 해달라는 프롬프트 ...\nEOF</span>\n<span class=\"token variable\">)</span></span>\n\n<span class=\"token comment\"># 4. Gemini CLI로 요약 생성 및 파일에 저장</span>\n<span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> ./summaries\n\n<span class=\"token assign-left variable\">SUMMARY_FILE_PATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"./summaries/weekly_summary_<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%m-%d_%H-%M-%S<span class=\"token variable\">)</span></span>.md\"</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Generating summary and saving to <span class=\"token variable\">$SUMMARY_FILE_PATH</span>\"</span>\n\n<span class=\"token assign-left variable\">FILES</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">while</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">IFS</span></span><span class=\"token operator\">=</span> <span class=\"token builtin class-name\">read</span> <span class=\"token parameter variable\">-r</span> line<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> <span class=\"token string\">\"<span class=\"token variable\">$line</span>\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">FILES</span><span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token variable\">$line</span>\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">fi</span>\n<span class=\"token keyword\">done</span> <span class=\"token operator\">&lt;&lt;&lt;</span> <span class=\"token string\">\"<span class=\"token variable\">$FILES_TO_SUMMARIZE</span>\"</span>\n<span class=\"token function\">cat</span> <span class=\"token string\">\"<span class=\"token variable\">${FILES<span class=\"token punctuation\">[</span>@<span class=\"token punctuation\">]</span>}</span>\"</span> <span class=\"token operator\">|</span> gemini <span class=\"token parameter variable\">-y</span> <span class=\"token parameter variable\">-p</span> <span class=\"token string\">\"<span class=\"token variable\">$PROMPT</span>\"</span> <span class=\"token operator\">></span> <span class=\"token string\">\"<span class=\"token variable\">$SUMMARY_FILE_PATH</span>\"</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Summary generated successfully and saved to <span class=\"token variable\">$SUMMARY_FILE_PATH</span>\"</span></code></pre></div>\n<p>근데 프롬프트가 길어지니까 스크립트에서 인라인으로 관리하기 빡세더라구요<br>\n그래서 <code class=\"language-text\"># 3. 프롬프트 정의</code>를 아래와 같이 바꿨습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># 3. 프롬프트 정의</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Get Prompts from TXT\"</span>\n<span class=\"token assign-left variable\">PROMPT</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> ./scripts/prompt.txt<span class=\"token variable\">)</span></span></code></pre></div>\n<p>그리고 <code class=\"language-text\">prompt.txt</code>를 만들어서 여기에 프롬프트를 작성해줬어요<br>\n대충 <code class=\"language-text\">너는 이런 능력이 있는 짱멋있는 프로젝트 관리 비서입니다.</code> ..와 같은 롤 부여부터 시작해서<br>\n액션 아이템을 요약하고, 주제별 상세 보고서, TODO라고 해놓고 안한 것 같은거 있는지, ... 등등 필요한 내용을 작성했습니다</p>\n<p><code class=\"language-text\">gemini</code>로 gemini-cli를 부를 때, 대화모드를 켜는게 아닌 <strong>프롬프트만 실행하려면 <code class=\"language-text\">-p \"$PROMPT\"</code></strong> 와 같이 옵션을 주어 프롬프트를 전달해줍니다.<br>\n<code class=\"language-text\">-y</code> 옵션 또한 줘야하는데, 이건 <strong>YOLO모드</strong>라고 gemini가 <code class=\"language-text\">이거 해도 되나요?</code>할 때 그냥 모두 OK해버리는 옵션입니다</p>\n<p><img src=\"https://i.imgur.com/CF1kPd4.png\" alt=\"진행시켜.\"></p>\n<p>아차, 그리고 <strong>요약 파일을 생성하고 나면, git commit &#x26; push</strong>까지 해줘야 합니다.<br>\n안그러면 그냥 요약 파일을 생성하고 읽지도 않고 버린 사람이 되는겁니다~</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># 5.  Git 자동 커밋 및 푸시</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"github-actions[bot]\"</span> <span class=\"token comment\"># github action bot 예시 프로필</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email <span class=\"token string\">\"123456+github-actions[bot]@users.noreply.github.com\"</span>\n\n<span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token string\">\"<span class=\"token variable\">$SUMMARY_FILE_PATH</span>\"</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"chore(summary): weekly summary generated at <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">date</span> +%Y-%m-%d_%H:%M:%S<span class=\"token variable\">)</span></span>\"</span>\n<span class=\"token function\">git</span> push</code></pre></div>\n<p>이를 스크립트의 맨 마지막에 추가해줍니다.</p>\n<h1 id=\"해치웠나\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EC%B9%98%EC%9B%A0%EB%82%98\" aria-label=\"해치웠나 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해치웠나?</h1>\n<p>이제 <code class=\"language-text\">act -j summarize</code>로 워크플로우가 잘 만들어졌는지 확인해봅시다.</p>\n<h2 id=\"gemini-api-key를-넣어요\" style=\"position:relative;\"><a href=\"#gemini-api-key%EB%A5%BC-%EB%84%A3%EC%96%B4%EC%9A%94\" aria-label=\"gemini api key를 넣어요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GEMINI API KEY를 넣어요</h2>\n<p><img src=\"https://i.imgur.com/EzOHX5k.png\" alt=\"GEMINI API KEY를 안넣으면 실패~\"></p>\n<p>앗! Gemini API Key를 넣어줘야하네요~<br>\n아까 발급한 Gemini Api Key를 다시 복사해오고요<br>\n<strong>act에서는 <code class=\"language-text\">-s FOO=\"\"</code> 옵션으로 <code class=\"language-text\">secret.FOO</code> 환경변수를 주입</strong>할 수 있으니<br>\n이제 <code class=\"language-text\">act</code> 실행할 때 아래와 같이 하여 GEMINI API KEY를 환경변수로 넣어줍시다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">act <span class=\"token parameter variable\">-j</span> summarize <span class=\"token parameter variable\">-s</span> <span class=\"token assign-left variable\">GEMINI_API_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"YOUR_API_KEY\"</span></code></pre></div>\n<h2 id=\"github-token도-넣어요-로컬-실행-시\" style=\"position:relative;\"><a href=\"#github-token%EB%8F%84-%EB%84%A3%EC%96%B4%EC%9A%94-%EB%A1%9C%EC%BB%AC-%EC%8B%A4%ED%96%89-%EC%8B%9C\" aria-label=\"github token도 넣어요 로컬 실행 시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GITHUB TOKEN도 넣어요 (로컬 실행 시)</h2>\n<p><img src=\"https://i.imgur.com/EA64sM0.png\" alt=\"Git Push에서 무한대기\"></p>\n<p>이번에는 <code class=\"language-text\">git push ...</code>차례에서 무한대기에 빠져버렸는데요</p>\n<p><img src=\"https://i.imgur.com/O4upNY5.png\" alt=\"로딩중..\"></p>\n<p>생각해보니 GITHUB TOKEN을 넣었어야하는게 아닌가? 싶었습니다<br>\n다만 진짜 github action에서는 GITHUB TOKEN을 따로 넣을 필요는 없은께.. 로컬에서 스크립트를 살짝 고쳐서 확인해보려구요</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"> <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Run Summary Script\n        <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">GEMINI_API_KEY</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GEMINI_API_KEY <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token key atrule\">GITHUB_TOKEN</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> ./scripts/generate_summary.sh</code></pre></div>\n<p>워크플로우 yml에서 env로 <code class=\"language-text\">GITHUB_TOKEN</code>을 script에 주입해줍니다. 그리고</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token comment\"># 5. Git 자동 커밋 및 푸시</span>\n\n<span class=\"token function\">git</span> remote set-url origin https://github-actions<span class=\"token punctuation\">[</span>bot<span class=\"token punctuation\">]</span>:<span class=\"token variable\">${GITHUB_TOKEN}</span>@github.com/sunghoon/memo-repository.git</code></pre></div>\n<p>원격저장소 주소를 이렇게 시크릿 토큰을 넣은 주소로 바꿔서 이 토큰을 쓰게 합니다<br>\n이제 아래와 같이 (GEMINI API KEY 했던 것처럼) GITHUB TOKEN을 넣어서 실행하면 끗</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">act <span class=\"token parameter variable\">-j</span> summarize <span class=\"token parameter variable\">-s</span> <span class=\"token assign-left variable\">GEMINI_API_KEY</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span> <span class=\"token parameter variable\">-s</span> <span class=\"token assign-left variable\">GITHUB_TOKEN</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></code></pre></div>\n<p>이제 요약파일이 잘 생성됐네요~</p>\n<p><img src=\"https://i.imgur.com/tNTh7HW.png\" alt=\"요약 잘 됐습니다~\"></p>\n<p>지난 몇 주간 작동하는걸 지켜봤는데, 주기적으로 잘 생성해주더라구요</p>\n<p><img src=\"https://i.imgur.com/d8VyyJ5.png\" alt=\"주기적 요약 결과\"></p>\n<hr>\n<p><br>\n이제 이 요약 워크플로우 덕분에 월요일에 우두커니 앉아서 \"저번주에 뭐했더라?\" 생각하며 멍때리는 일은 없네요</p>\n<p><img src=\"https://i.imgur.com/FIJBgEv.png\" alt=\"멍때리기\"></p>\n<p>나중에도 아 저번주에 뭐 했는데 뭐였지? 하면 찾아보기도 편하구요.<br>\n시간될 때 MCP같은 것도 붙여서 Jira, Slack에서 주간 업무 정보들을 더 받아와서 요약에 포함하면 좋을 듯 합니다?<br>\n예를 들어, 일주일 간 Jira 티켓 완료로 넘긴게 뭐 있는지, Slack에서 무슨 논의 했던게 있었는지, ..<br>\n나중에 그런거 하게되면 다시 갖고 돌아오겠습니다.</p>\n<p>이만 마칩니다~</p>","frontmatter":{"title":"📜 Gemini CLI에게 주간 업무 요약 Github Action 만들어달라 하기","date":"September 07, 2025","description":"기록을 요약해라 마이 잼민아~","tag":["Github Action","AI Tools"]},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#gemini-cli-\">Gemini CLI ?</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0-%EC%A0%84%EC%97%90-github-action%EC%9D%84-%EB%A1%9C%EC%BB%AC%EC%97%90%EC%84%9C-%EC%8B%A4%ED%96%89%ED%95%A0-%EC%88%98-%EC%9E%88%EA%B2%8C-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B0-act\">시작하기 전에, Github Action을 로컬에서 실행할 수 있게 세팅하기 (<code class=\"language-text\">act</code>)</a></p>\n</li>\n<li>\n<p><a href=\"#github-action-workflow-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">Github Action Workflow 작성하기</a></p>\n<ul>\n<li><a href=\"#workflow-yaml%ED%8C%8C%EC%9D%BC-%EC%9E%91%EC%84%B1\">workflow <code class=\"language-text\">.yaml</code>파일 작성</a></li>\n<li><a href=\"#%EC%A3%BC%EA%B0%84-%EA%B8%B0%EB%A1%9D%EC%9D%84-%EB%AA%A8%EC%95%84-%EC%9A%94%EC%95%BD%ED%95%98%EB%8A%94-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%91%EC%84%B1%ED%95%98%EA%B8%B0\">주간 기록을 모아 요약하는 스크립트 작성하기</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%95%B4%EC%B9%98%EC%9B%A0%EB%82%98\">해치웠나?</a></p>\n<ul>\n<li><a href=\"#gemini-api-key%EB%A5%BC-%EB%84%A3%EC%96%B4%EC%9A%94\">GEMINI API KEY를 넣어요</a></li>\n<li><a href=\"#github-token%EB%8F%84-%EB%84%A3%EC%96%B4%EC%9A%94-%EB%A1%9C%EC%BB%AC-%EC%8B%A4%ED%96%89-%EC%8B%9C\">GITHUB TOKEN도 넣어요 (로컬 실행 시)</a></li>\n</ul>\n</li>\n</ul>"},"previous":{"fields":{"slug":"/r3f-postprocessing-tonemapping-issue/"},"frontmatter":{"title":"🌈 Postprocessing 적용 시 색감/톤이 바뀌는 사람 보시오(Three.js, R3F)"}},"next":{"fields":{"slug":"/mobile-web-fullscreen-scroll-trick/"},"frontmatter":{"title":"🤸 온몸 비틀기로 모바일 웹 유저에게 전체화면 경험 유지시켜주기"}}},"pageContext":{"id":"f6e8eac7-338e-5b29-8071-7b9be5f0a90b","previousPostId":"6615b2aa-f547-581c-b867-9790f5cfb16e","nextPostId":"15dc3e00-f344-5f52-b9f4-524e278bff2f"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}