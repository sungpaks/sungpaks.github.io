<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Gatsby Starter Blog RSS Feed]]></title><description><![CDATA[My Tech Blog]]></description><link>https://github.com/sungpaks</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 03 Jan 2024 11:40:15 GMT</lastBuildDate><item><title><![CDATA[C++ 멀티스레딩 맛 한번 보세요]]></title><description><![CDATA[저번학기에 게임 만드는 팀플이 있었는데요 처음에는 C로 시작했고 나중에 C++로 확장했지만 사실 사용중인 이미지 렌더링 라이브러리가 C로 작성된거기도 하고 해서 아무튼 시작은 C…]]></description><link>https://github.com/sungpaks/multi-threading-in-cpp/</link><guid isPermaLink="false">https://github.com/sungpaks/multi-threading-in-cpp/</guid><pubDate>Wed, 03 Jan 2024 11:35:00 GMT</pubDate><content:encoded>&lt;p&gt;저번학기에 게임 만드는 팀플이 있었는데요&lt;br&gt;
처음에는 C로 시작했고 나중에 C++로 확장했지만&lt;br&gt;
사실 사용중인 이미지 렌더링 라이브러리가 C로 작성된거기도 하고 해서&lt;br&gt;
아무튼 시작은 C였고 멀티스레딩은 생각을 해두지 않았었습니다&lt;br&gt;
그럼 이제 문제가 뭐냐 모든 동작이 순차적이라는 것인데요&lt;/p&gt;
&lt;p&gt;예를 들어 가장 문제점은&lt;br&gt;
게임에서는 땅을 파는 함수가 있는데&lt;br&gt;
이 함수에서는 진동 모션과 블록의 파괴 등까지 해서 한 동작에 렌더링이 최소 5번 일어납니다&lt;/p&gt;
&lt;p&gt;아래의 진동 모션이야말로 주범인데&lt;br&gt;
&lt;img src=&quot;https://i.imgur.com/05czAG6.png&quot; width=&quot;100%&quot;&gt;
앞뒤로 왔다갔다를 보여줘야 하니 렌더링이 다다닥 있습니다&lt;br&gt;
맥북을 쓰는 팀원분은 렌더링이 빨라서 체감이 크지 않는데&lt;br&gt;
제 윈트북은 개느려서 이 렌더링 세 번에 걸리는 시간이 상당히 크고 그동안 다른 동작에 도달하지 못하니 NPC들은 멈춰있고 그렇습니다&lt;/p&gt;
&lt;h3&gt;그래서 어케함??&lt;/h3&gt;
&lt;p&gt;그래서 이 땅 파는 함수 &lt;code class=&quot;language-text&quot;&gt;dig&lt;/code&gt;을 다른 스레드에서 실행하고자 했습니다&lt;br&gt;
먼저 그러려면 &lt;code class=&quot;language-text&quot;&gt;#include &amp;lt;thread&gt;&lt;/code&gt;로 스레드 헤더를 가져옵니다&lt;br&gt;
이제 스레드 객체를 &lt;code class=&quot;language-text&quot;&gt;thread myThread(함수포인터, 객체, 인자, 인자, ... )&lt;/code&gt;와 같이 생성해줍니다.&lt;br&gt;
예를 들어, 제 경우 &lt;code class=&quot;language-text&quot;&gt;pc.dig(x, y);&lt;/code&gt;에 대한 스레드 객체를 생성하기 위해&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;thread digThread(&amp;amp;PC::dig, &amp;amp;pc, x, y);&lt;/code&gt; 이렇게 작성했습니다&lt;/p&gt;
&lt;p&gt;이제 두 가지 선택지가 있는데&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;myThread.join()&lt;/code&gt; : 메인스레드는 저거 끝나기를 기다림&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;myThread.detach()&lt;/code&gt; : 메인스레드와 분리시켜 백그라운드 작업을 시키고, 메인스레드는 할 일 하러 간다&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;메인스레드는 계속 일하고 &lt;code class=&quot;language-text&quot;&gt;dig&lt;/code&gt;만 따로 실행하면 좋겠으니, &lt;code class=&quot;language-text&quot;&gt;detach&lt;/code&gt;합니다
&lt;br/&gt;
&lt;br/&gt;&lt;/p&gt;
&lt;h3&gt;주의..&lt;/h3&gt;
&lt;p&gt;해야 할 점이 있었는데
&lt;code class=&quot;language-text&quot;&gt;switch&lt;/code&gt;의 &lt;code class=&quot;language-text&quot;&gt;case&lt;/code&gt;문 내에서 thread 변수를 만드니까 &lt;code class=&quot;language-text&quot;&gt;thread 초기화가 case레이블에 의해 생략되었습니다.&lt;/code&gt; 뭐 이런 에러가 발생합니다&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;case&lt;/code&gt;문 내부에서 변수를 선언한게 문제인데,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;switch&lt;/code&gt;시작 전에 변수 선언하거나&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;case&lt;/code&gt;문을 중괄호 &lt;code class=&quot;language-text&quot;&gt;{}&lt;/code&gt;로 묶거나
둘 중 하나 선택해서 해결할 수 있습니다&lt;/p&gt;
&lt;p&gt;대신 후자의 방식은 당연히 scope가 중괄호 내부로 제한되니 그 안에서만 사용할 수 있습니다
&lt;img src=&quot;https://i.imgur.com/MuWI0wV.png&quot; width=&quot;100%&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;동기화&lt;/h3&gt;
&lt;p&gt;그리고 이제 연산이 일부 병렬적이므로 자원에 동시에 접근하고 수정하게 될 수도 있습니다..&lt;br&gt;
따라서 동기화하려면&lt;br&gt;
여러 방법이 있는 것 같은데 저는 &lt;code class=&quot;language-text&quot;&gt;std::mutex&lt;/code&gt;를 쓰는 방법을 택했습니다&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;#include &amp;lt;mutex&gt;&lt;/code&gt;로 먼저 뮤텍스를 가져오신 다음에&lt;br&gt;
전역에 &lt;code class=&quot;language-text&quot;&gt;std::mutex m&lt;/code&gt;과 같이 뮤텍스를 하나 생성해줍니다&lt;br&gt;
이제 동기화하려는 코드 앞뒤로 &lt;code class=&quot;language-text&quot;&gt;m.lock()&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;m.unlock()&lt;/code&gt;을 써서 감싸줍니다&lt;br&gt;
대충 이런 식
&lt;img src=&quot;https://i.imgur.com/cSbhn7L.png&quot; width=&quot;100%&quot;&gt;&lt;/p&gt;
&lt;p&gt;그럼 짜잔&lt;/p&gt;
&lt;p&gt;..&lt;/p&gt;
&lt;p&gt;..&lt;/p&gt;
&lt;p&gt;..&lt;/p&gt;
&lt;p&gt;..&lt;/p&gt;
&lt;p&gt;딱히 보여줄 자료는 없고요.. 확실히 효과있었습니다&lt;/p&gt;
&lt;p&gt;처음부터 멀티스레딩을 염두에 두고 개발했으면 좋았을걸 싶네요 아쉽습니다&lt;br&gt;
전부 갈아엎을 수도 없는 노릇이라 그냥 .. 부분적으로만 스레드를 분리했었네요&lt;/p&gt;
&lt;p&gt;이만 마칩니다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[✒️ 내 동년배들 다 깃허브 블로그 운영한다]]></title><description><![CDATA[여러분 새해 복 많이 받으십시오 저는 미루고 미뤄왔던 깃허브 블로그를 드디어 만들었습니다 새해 시작이 좋네요 원래 Jeykll로 한번 시도를 했었는데 쩝.. Ruby인 것도 맘에 안 들고 어디서 막혔는지 기억도 안 나네요 대신 React…]]></description><link>https://github.com/sungpaks/github-blog-using-gatsby/</link><guid isPermaLink="false">https://github.com/sungpaks/github-blog-using-gatsby/</guid><pubDate>Wed, 03 Jan 2024 06:30:00 GMT</pubDate><content:encoded>&lt;p&gt;여러분 새해 복 많이 받으십시오&lt;br&gt;
저는 미루고 미뤄왔던 깃허브 블로그를 드디어 만들었습니다&lt;br&gt;
새해 시작이 좋네요&lt;/p&gt;
&lt;p&gt;원래 Jeykll로 한번 시도를 했었는데&lt;br&gt;
쩝.. Ruby인 것도 맘에 안 들고 어디서 막혔는지 기억도 안 나네요&lt;br&gt;
대신 React 기반인 Gatsby를 썼습니다&lt;/p&gt;
&lt;p&gt;제 지인 블로그인 &lt;a href=&quot;https://klloo.github.io/make-blog/&quot;&gt;여기(klloo 블로그)&lt;/a&gt;를 좀 참고했는데요..&lt;br&gt;
질투와 시기심. 그로 인한 동기부여. 가장 큰 도움. 내가 받은.&lt;br&gt;
설치와 프로젝트 구성 과정은 저 안에 있는 &lt;a href=&quot;https://devfoxstar.github.io/web/github-pages-gatsby/&quot;&gt;링크&lt;/a&gt;를 많이 참고했습니다.&lt;br&gt;
감사의 인사 드리며..&lt;/p&gt;
&lt;h2&gt;설치와 프로젝트 생성&lt;/h2&gt;
&lt;p&gt;링크에 자세한 설명이 있으니 저는 대략적으로만 쓰겠습니다&lt;br&gt;
설치는 &lt;code class=&quot;language-text&quot;&gt;npm install -g gatsby-cli&lt;/code&gt;&lt;br&gt;
테마는 &lt;a href=&quot;https://www.gatsbyjs.com/starters/&quot;&gt;여기에서&lt;/a&gt; 골라보시면 되는데요&lt;br&gt;
테마를 고르고 해당 깃허브 주소를 가져다가&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;gatsby new 프로젝트명 깃허브URL&lt;/code&gt;&lt;br&gt;
이런식으로 명령줄을 입력하시면 되겠습니다&lt;/p&gt;
&lt;p&gt;근데 저같은 경우&lt;br&gt;
&lt;img src=&quot;https://i.imgur.com/F5qObnj.png&quot; width=&quot;100%&quot; height=&quot;100%/&quot;&gt;&lt;br&gt;
이런 문제가 나타났는데..&lt;br&gt;
찾아보고 찾아보다가 모르겠어서 테마를 그냥 바꿔봤는데 됐습니다..&lt;br&gt;
테마의 문제인가?&lt;br&gt;
아무튼 저는 그냥 그래서 &lt;code class=&quot;language-text&quot;&gt;Gatsby Starter Blog&lt;/code&gt; 테마를 썼습니다.&lt;br&gt;
쩝.. Gatsby 만든 사람이 만드신 스타터팩인가봅니다&lt;/p&gt;
&lt;p&gt;이제 프로젝트 폴더에서 &lt;code class=&quot;language-text&quot;&gt;gatsby develop&lt;/code&gt;을 입력하여 로컬 개발환경을 열고&lt;br&gt;
브라우저에서 &lt;code class=&quot;language-text&quot;&gt;localhost:8000&lt;/code&gt;에 가면&lt;/p&gt;
&lt;img src=&quot;https://i.imgur.com/OOqFGw3.png&quot; width=&quot;100%/&quot;&gt;
이렇게 되어있습니다.
&lt;h2&gt;Github Page와 연동&lt;/h2&gt;
&lt;p&gt;이제 &lt;em&gt;(본인의 깃허브 이름).github.io&lt;/em&gt;라는 이름의 레포지토리를 만듭시다.&lt;br&gt;
전 이미 있어서 그냥&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;git remote add origin REPO_URL&lt;/code&gt; 이런식으로 프로젝트 폴더에 원격 저장소를 연결하고&lt;br&gt;
쓸데없는 것들이 있었어서.. &lt;code class=&quot;language-text&quot;&gt;--force&lt;/code&gt; 옵션을 붙여서 &lt;code class=&quot;language-text&quot;&gt;push&lt;/code&gt;해주어 덮어씌워버렸습니다&lt;/p&gt;
&lt;p&gt;이제 레포지토리의 &lt;code class=&quot;language-text&quot;&gt;master&lt;/code&gt;브랜치에 프로젝트가 올라가있을건데요&lt;br&gt;
저는 배포를 따로 다른 브랜치에서 하고싶기 때문에 로컬 &lt;code class=&quot;language-text&quot;&gt;deploy&lt;/code&gt; 브랜치를 먼저 생성합니다 : &lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;git branch deploy&lt;/code&gt;&lt;br&gt;
그리고 &lt;strong&gt;package.json&lt;/strong&gt; 파일 보시면 맨 아래쪽에 &lt;code class=&quot;language-text&quot;&gt;&quot;scripts&quot;&lt;/code&gt; 룰이 있는데&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;json&quot;&gt;&lt;pre class=&quot;language-json&quot;&gt;&lt;code class=&quot;language-json&quot;&gt;&lt;span class=&quot;token property&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token property&quot;&gt;&quot;deploy&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;gatsby build &amp;amp;&amp;amp; gh-pages -d public -b deploy&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 &lt;code class=&quot;language-text&quot;&gt;deploy&lt;/code&gt;를 추가해줍니다&lt;/p&gt;
&lt;p&gt;그런 다음 &lt;code class=&quot;language-text&quot;&gt;npm run deploy&lt;/code&gt; 입력해주면 알아서 배포파일을 만들고 원격 &lt;code class=&quot;language-text&quot;&gt;deploy&lt;/code&gt;브랜치에 올라가기까지 합니다&lt;/p&gt;
&lt;p&gt;마지막으로.. Github 레포지토리에서 &lt;strong&gt;Settings&lt;/strong&gt; - &lt;strong&gt;pages&lt;/strong&gt; - &lt;strong&gt;Build and deployment&lt;/strong&gt; 로 가서 브랜치를 deploy로 설정해줍니다&lt;br&gt;
이렇게 하면 deploy를 기준으로 Github Page를 호스팅해줍니다
&lt;img src=&quot;https://i.imgur.com/MGNEGYR.png&quot; width=&quot;100%/&quot;&gt;&lt;/p&gt;
&lt;h2&gt;초기 작업&lt;/h2&gt;
&lt;h3&gt;1. 프로필&lt;/h3&gt;
&lt;p&gt;지금은 Gatsby 개발해주신 Kyle Methews 선생님께서 인사를 하고계시니까.. 먼저 프로필을 바꿔봅시다?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bio.js&lt;/strong&gt;를 보면 &quot;siteMetadata&quot;를 가져와서 &lt;code class=&quot;language-text&quot;&gt;author&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;social&lt;/code&gt;을 가져오도록 되어 있다고 친절하게도 주석으로 써주셨습니다.&lt;br&gt;
따라서 &lt;strong&gt;gatsby-config.js&lt;/strong&gt; 파일로 가서 적당히 &lt;code class=&quot;language-text&quot;&gt;Title, author, social&lt;/code&gt; 이런 데이터들을 본인 것으로 바꿔주도록 합시다.&lt;/p&gt;
&lt;h3&gt;2. 폰트&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://0andme.github.io/blog/gatsby%EB%A1%9C-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A7%8C%EB%93%A4%EA%B8%B0-(4)-%ED%8F%B0%ED%8A%B8-%EB%B0%94%EA%BE%B8%EA%B8%B0/&quot;&gt;여기&lt;/a&gt;를 좀 참고했습니다.&lt;br&gt;
이미 Gatsby Starter Blog 테마는 Fontsource를 이용하고 있습니다.&lt;br&gt;
저는 &lt;strong&gt;IBM&lt;/strong&gt; 폰트를 사용하기 위해
&lt;code class=&quot;language-text&quot;&gt;npm install @fontsource/ibm-plex-sans&lt;/code&gt;와 같이 입력하여 받아와서&lt;br&gt;
&lt;strong&gt;gatsby-browser.js&lt;/strong&gt;에 &lt;code class=&quot;language-text&quot;&gt;import &quot;@fontsource/ibm-plex-sans&quot;&lt;/code&gt;라고 써줬습니다.&lt;br&gt;
그 다음 &lt;strong&gt;style.css&lt;/strong&gt;에서 &lt;code class=&quot;language-text&quot;&gt;body { font-family: &quot;ibm-plex-sans&quot;; }&lt;/code&gt;라고 써주면..&lt;/p&gt;
&lt;img src=&quot;https://i.imgur.com/kPO51P6.png&quot; width=&quot;50%&quot;&gt;
&lt;p&gt;잘 되네요~&lt;/p&gt;
&lt;h3&gt;3. 상단바&lt;/h3&gt;
&lt;p&gt;그 왜 있잖아요 상단에 고정되어서 따라다니는데 반투명하고
버튼같은거 있어서 블로그 홈으로 가거나 그럴 수 있는 상단 메뉴 UI&lt;br&gt;
그런거를 만들어보겠습니다&lt;br&gt;
이미 테마에서 스타일이 많이 적용되어있고 &lt;code class=&quot;language-text&quot;&gt;wrapper&lt;/code&gt;스타일도 존재하니 적당히 살펴보고 겹치지 않게 잘 해주도록 합시다&lt;/p&gt;
&lt;p&gt;일단 &lt;code class=&quot;language-text&quot;&gt;TopUI&lt;/code&gt; 컴포넌트를 만들어주고&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div className&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;top-ui&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
   &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;h4&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
        &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;Link to&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;성훈 블로그&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;Link&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;h4&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;저는 대충 이런식으로 썼습니다&lt;br&gt;
고맙게도 &lt;code class=&quot;language-text&quot;&gt;Link&lt;/code&gt;컴포넌트가 이미 있는데요&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;to=&quot;/&quot;&lt;/code&gt;와 같이 쓰면 블로그 홈으로 가도록 해줄 수 있네요&lt;/p&gt;
&lt;p&gt;이제 이 컴포넌트를 이미 있는 &lt;strong&gt;layout.js&lt;/strong&gt;의 &lt;code class=&quot;language-text&quot;&gt;Layout&lt;/code&gt; 컴포넌트에서 함께 뱉어내도록 합시다&lt;br&gt;
이미 최상위 &lt;code class=&quot;language-text&quot;&gt;div&lt;/code&gt;가 &lt;code class=&quot;language-text&quot;&gt;global-wrapper&lt;/code&gt;스타일로 적용되어있는데요&lt;br&gt;
이 스타일에 구애받지 않고 따로 &lt;code class=&quot;language-text&quot;&gt;top-ui&lt;/code&gt; 스타일을 만들어주고 싶으니 이 &lt;code class=&quot;language-text&quot;&gt;div&lt;/code&gt;의 바깥에 작성하고 새로운 &lt;code class=&quot;language-text&quot;&gt;div&lt;/code&gt;로 감싸줬습니다
&lt;img src=&quot;https://i.imgur.com/0HjPPVL.png&quot; width=&quot;100%/&quot;&gt;&lt;/p&gt;
&lt;p&gt;이제 &lt;strong&gt;style.css&lt;/strong&gt;에 가서 스타일 클래스를 만들어줍시다&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;.top-ui {}&lt;/code&gt;와 같이 쓰고 이 안에다 CSS style을 작성하면 되겠습니다&lt;br&gt;
상단에 고정할거니까 &lt;code class=&quot;language-text&quot;&gt;position: fixed&lt;/code&gt;라고 쓰고&lt;br&gt;
투명도를 조절하려면 &lt;code class=&quot;language-text&quot;&gt;opacity&lt;/code&gt;&lt;br&gt;
가 아닌.. 배경색만 반투명하게 하고싶으니\ &lt;code class=&quot;language-text&quot;&gt;background-color&lt;/code&gt;를 &lt;code class=&quot;language-text&quot;&gt;rgba(255,255,255,0.8)&lt;/code&gt;와 같이 써줍니다.&lt;br&gt;
&lt;code class=&quot;language-text&quot;&gt;width: 100%&lt;/code&gt;라고 적어주고 적당히 높이와 여백을 써주면??
&lt;img src=&quot;https://i.imgur.com/Um9EDUg.png&quot; width=&quot;100%/&quot;&gt;
좋네요 나중에 적당히 다른 버튼들을 만들어주면 있어보일 것 같습니다&lt;/p&gt;
&lt;h2&gt;글 작성하기&lt;/h2&gt;
&lt;p&gt;블로그라면 응당 글을 써야겠죠?&lt;br&gt;
프로젝트 폴더에 보면 &lt;strong&gt;content/blog&lt;/strong&gt; 밑에 이미 세 개의 글이 기본적으로 있습니다.&lt;br&gt;
이거 다 지워주고..&lt;br&gt;
새 글을 쓰려면 폴더를 하나 만들고 그 밑에 마크다운 파일을 생성하여 여기에 글을 작성합니다. 이미지같은거 넣으려면 또한 같이 넣으시구요.&lt;br&gt;
이런식으로&lt;/p&gt;
&lt;img src=&quot;https://i.imgur.com/uZfUuLc.png&quot; width=&quot;100%/&quot;&gt;
&lt;p&gt;글의 제목과 날짜, 설명은
마크다운 파일 가장 상단에&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;---
title: 내 동년배들 다 깃허브 블로그 운영한다
date: &quot;2024-01-03T15:30&quot;
description: &quot;Gatsby로 Github 블로그 만들어봤습니다&quot;
---&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이렇게 쓰시면 알아서 아래와 같이 됩니다
&lt;img src=&quot;https://i.imgur.com/oVOck6K.png&quot; width=&quot;100%/&quot;&gt;&lt;/p&gt;
&lt;p&gt;쩝.. 이정도면 준비는 얼추 된 것 같네요.
스타일도 좀 만지고 완성도도 높이고 하는건 천천히 하겠습니다
이만 마칩니다&lt;/p&gt;</content:encoded></item></channel></rss>