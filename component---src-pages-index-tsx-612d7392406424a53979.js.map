{"version":3,"file":"component---src-pages-index-tsx-612d7392406424a53979.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Tab.tsx","webpack://gatsby-starter-blog/./src/components/TagButtonList.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/components/Particles.tsx","webpack://gatsby-starter-blog/./src/components/ParticlesV2.tsx","webpack://gatsby-starter-blog/./src/components/AboutMe.tsx","webpack://gatsby-starter-blog/./src/components/Bio.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\ninterface TabPropsType {\n  amount: Number;\n  curTab: Number;\n}\n\nexport default function Tab({ amount, curTab }: TabPropsType) {\n  return (\n    <div className=\"tab-container\">\n      <Link className={curTab === 0 ? \"tab-item active\" : \"tab-item\"} to=\"/\">\n        POST{\" \"}\n        {curTab === 0 ? (\n          <span className=\"amount\">{`${amount}`}</span>\n        ) : undefined}\n      </Link>\n\n      {/* <button \n\t\t\tclassName={curTab === 0 ? \"tab-item active\" : \"tab-item\"}\n\t\t\tonClick={()=>{\n\t\t\t\tif(curTab === 1) onClickAnother();\n\t\t\t}}\n\t\t\t>\n\t\t\t\tPOST {curTab === 0 ? <span className=\"amount\">{`${amount}`}</span> : undefined}\n\t\t\t</button> */}\n      <Link to=\"/til\" className={curTab === 1 ? \"tab-item active\" : \"tab-item\"}>\n        TIL{\" \"}\n        {curTab === 1 ? (\n          <span className=\"amount\">{`${amount}`}</span>\n        ) : undefined}\n      </Link>\n      {/* <button \n\t\t\tclassName={curTab === 1 ? \"tab-item active\" : \"tab-item\"}\n\t\t\tonClick={()=>{\n\t\t\t\tif(curTab === 0) onClickAnother();\n\t\t\t}}\n\t\t\t>\n\t\t\t\t\n\t\t\t</button> */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { MarkdownRemarkNode } from \"../types/common\";\n\nexport default function TagButtonList({\n  post,\n  onClickTag\n}: {\n  post: MarkdownRemarkNode;\n  onClickTag: (tag: string) => void;\n}) {\n  return (\n    <>\n      {post.frontmatter.tag?.map(c => {\n        return (\n          <button\n            key={c}\n            id={c}\n            className=\"custom-button tag-button\"\n            onClick={() => onClickTag(c)}\n          >\n            {c}\n          </button>\n        );\n      })}\n    </>\n  );\n}\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { FC } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface ComponentProps {\n  description: string;\n  title: string;\n  children?: any;\n  thumbnail?: string;\n}\n\nconst Seo = ({ description, title, children, thumbnail }: ComponentProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || metaDescription,\n    thumbnail\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:type\" content=\"website\" />\n      {seo.thumbnail && <meta property=\"og:image\" content={seo.thumbnail} />}\n      <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n      <meta\n        name=\"google-site-verification\"\n        content=\"iP6AmcpYft1WcrX_A3DlYxkWH2bwT-mrYanTBB8vm4k\"\n      />\n    </>\n  );\n};\n\nexport default Seo;\n","import React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { Points, Vector3 } from \"three\";\n\nfunction Particles({\n  color,\n  maxDistance = 500\n}: {\n  color: string;\n  maxDistance?: number;\n}) {\n  const particles = React.useRef<Points>(null);\n  const getRandomPositionFromCenter = useCallback(\n    () => Math.random() * 1.4 - 0.7,\n    []\n  );\n\n  const count = 300; // 파티클 수\n  const particlesData = React.useRef({\n    positions: new Float32Array(count * 3),\n    velocities: new Float32Array(count * 3)\n  });\n\n  // 초기화\n  for (let i = 0; i < count; i++) {\n    const distance = 5 + Math.random() * 5;\n    const x = (Math.random() - 0.5) * 0.5;\n    const y = (Math.random() - 1) * 10;\n    const z = (Math.random() - 0.5) * 0.5;\n\n    particlesData.current.positions[i * 3] = getRandomPositionFromCenter();\n    particlesData.current.positions[i * 3 + 1] = getRandomPositionFromCenter();\n    particlesData.current.positions[i * 3 + 2] = getRandomPositionFromCenter();\n    particlesData.current.velocities[i * 3] = x * 0.01;\n    particlesData.current.velocities[i * 3 + 1] = y * 0.01;\n    particlesData.current.velocities[i * 3 + 2] = z * 0.01;\n  }\n\n  useFrame(() => {\n    if (!particles.current) return;\n\n    const positions = particlesData.current.positions;\n    const velocities = particlesData.current.velocities;\n\n    for (let i = 0; i < count; i++) {\n      const particlePosition = new Vector3(\n        positions[i * 3],\n        positions[i * 3 + 1],\n        positions[i * 3 + 2]\n      );\n\n      particlePosition.x += velocities[i * 3];\n      particlePosition.y += velocities[i * 3 + 1];\n      particlePosition.z += velocities[i * 3 + 2];\n\n      const dist = particlePosition.length();\n      const minProbability = 0.01;\n      const maxProbability = 0.99;\n      const probability =\n        Math.pow(dist / maxDistance, 2) * (maxProbability - minProbability) +\n        minProbability;\n\n      if (Math.random() < probability) {\n        positions[i * 3] = getRandomPositionFromCenter();\n        positions[i * 3 + 1] = getRandomPositionFromCenter();\n        positions[i * 3 + 2] = getRandomPositionFromCenter();\n      } else {\n        positions[i * 3] = particlePosition.x;\n        positions[i * 3 + 1] = particlePosition.y;\n        positions[i * 3 + 2] = particlePosition.z;\n      }\n    }\n    particles.current.geometry.attributes.position.needsUpdate = true;\n  });\n\n  useEffect(() => {\n    return () => {\n      particles.current?.geometry.dispose();\n      particlesData.current.positions.fill(0);\n      particlesData.current.velocities.fill(0);\n    };\n  }, []);\n\n  return (\n    <points ref={particles}>\n      <bufferGeometry>\n        <bufferAttribute\n          attach=\"attributes-position\"\n          count={count}\n          array={particlesData.current.positions}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial size={0.3} color={color} transparent opacity={0.8} />\n    </points>\n  );\n}\n\nexport default memo(Particles);\n","import React, {\n  memo,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from \"react\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { BufferGeometry, Color, Material, Points, Vector3 } from \"three\";\n\nconst G = 0.005;\n\nfunction ParticlesV2({\n  maxDistance = 500,\n  color\n}: {\n  maxDistance?: number;\n  color?: string;\n}) {\n  const count = 300; // 파티클 수\n  const particles = React.useRef<Points>(null);\n  const particlesData = React.useRef({\n    positions: new Float32Array(count * 3),\n    velocities: new Float32Array(count * 3),\n    colors: new Float32Array(count * 3)\n  });\n\n  const initParticle = useCallback(\n    (\n      particlesData: React.MutableRefObject<{\n        positions: Float32Array;\n        velocities: Float32Array;\n        colors: Float32Array;\n      }>,\n      i: number\n    ) => {\n      const color = new Color(Math.random() * 0xffffff);\n      const positions = particlesData.current.positions;\n      const velocities = particlesData.current.velocities;\n      const colors = particlesData.current.colors;\n      positions[i * 3] = Math.random() * 0.5;\n      positions[i * 3 + 1] = Math.random() * 0.5;\n      positions[i * 3 + 2] = Math.random() * 0.5;\n      velocities[i * 3] = (Math.random() - 0.5) * 0.075;\n      velocities[i * 3 + 1] = (Math.random() - 1) * 0.01;\n      velocities[i * 3 + 2] = (Math.random() - 0.5) * 0.075;\n      colors[i] = color.r;\n      colors[i + 1] = color.g;\n      colors[i + 2] = color.b;\n    },\n    [count]\n  );\n\n  // 초기화\n  for (let i = 0; i < count; i++) {\n    initParticle(particlesData, i);\n  }\n\n  useFrame(() => {\n    if (!particles.current) return;\n\n    const positions = particlesData.current.positions;\n    const velocities = particlesData.current.velocities;\n\n    for (let i = 0; i < count; i++) {\n      const particlePosition = new Vector3(\n        positions[i * 3],\n        positions[i * 3 + 1],\n        positions[i * 3 + 2]\n      );\n\n      velocities[i * 3 + 1] -= G;\n      particlePosition.x += velocities[i * 3];\n      particlePosition.y += velocities[i * 3 + 1];\n      particlePosition.z += velocities[i * 3 + 2];\n\n      const dist = particlePosition.length();\n      const minProbability = 0.01;\n      const maxProbability = 0.99;\n      const probability =\n        Math.pow(dist / maxDistance, 2) * (maxProbability - minProbability) +\n        minProbability;\n\n      if (Math.random() < probability) {\n        initParticle(particlesData, i);\n      } else {\n        positions[i * 3] = particlePosition.x;\n        positions[i * 3 + 1] = particlePosition.y;\n        positions[i * 3 + 2] = particlePosition.z;\n      }\n    }\n    particles.current.geometry.attributes.position.needsUpdate = true;\n  });\n\n  useEffect(() => {\n    return () => {\n      particles.current?.geometry.dispose();\n      particlesData.current.positions.fill(0);\n      particlesData.current.velocities.fill(0);\n      particlesData.current.colors.fill(0);\n    };\n  }, []);\n\n  return (\n    <points ref={particles}>\n      <bufferGeometry>\n        <bufferAttribute\n          attach=\"attributes-position\"\n          count={count}\n          array={particlesData.current.positions}\n          itemSize={3}\n        />\n        <bufferAttribute\n          attach=\"attributes-color\"\n          count={count}\n          array={particlesData.current.colors}\n          itemSize={3}\n        />\n      </bufferGeometry>\n      <pointsMaterial\n        size={0.4}\n        transparent\n        opacity={1}\n        vertexColors\n      ></pointsMaterial>\n    </points>\n  );\n}\n\nexport default memo(ParticlesV2);\n","\"use client\";\n\nimport { OrbitControls, useGLTF } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport React, { useState } from \"react\";\nimport Particles from \"./Particles\";\nimport ParticlesV2 from \"./ParticlesV2\";\n\nuseGLTF.preload(\"/models/thinking_spinning/scene.glb\");\n\nfunction CameraController() {\n  return (\n    <OrbitControls\n      enableZoom={true}\n      enableRotate\n      enablePan\n      makeDefault\n      autoRotate\n    />\n  );\n}\n\nexport default function AboutMe() {\n  return (\n    <>\n      <div id=\"canvas-container-rocket\" style={{}}>\n        {/* <div\n          style={{\n            position: \"absolute\",\n            width: \"fit-content\",\n            bottom: \"20%\",\n            right: \"20%\",\n            rotate: \"-30deg\",\n            zIndex: 10\n          }}\n        >\n          <IconHandClick />\n        </div> */}\n        <Canvas\n          camera={{\n            fov: 75,\n            near: 0.1,\n            far: 1000,\n            position: [20, 20, 20]\n          }}\n        >\n          <ambientLight intensity={1} />\n          <directionalLight intensity={10} position={[5, 15, -5]} />\n          <SpaceShip />\n          <CameraController />\n        </Canvas>\n      </div>\n      {/* <p className=\"rocket-credit\">\n        This work is based on \"Rocket 🚀\"\n        (https://sketchfab.com/3d-models/rocket-9b9b64b138f24e4a908238c0b471930e)\n        by lizlancaster (https://sketchfab.com/lizlancaster) licensed under\n        CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)\n      </p> */}\n    </>\n  );\n}\n\nfunction SpaceShip(props: any) {\n  const [enlarged, setEnlarged] = useState(false);\n  const { scene } = useGLTF(\"/models/rocket/scene.glb\");\n  const scale = enlarged ? 4 : 3;\n  // scene.scale.set(SCALE, SCALE, SCALE);\n  scene.rotation.x = -Math.PI / 6;\n  let theta = 0;\n  const easeFactor = 0.1;\n  const rotationFactor = 0.5;\n  const xAmplitude = (Math.random() + 0.2) * 8;\n  const yAmplitude = (Math.random() + 0.2) * 8;\n  const zAmplitude = (Math.random() + 0.2) * 8;\n\n  useFrame((state, delta) => {\n    theta += Math.PI / 10;\n    scene.position.x = Math.sin(theta / xAmplitude) * easeFactor;\n    scene.position.y = Math.sin(theta / yAmplitude) * easeFactor;\n    scene.position.z = Math.sin(theta / zAmplitude) * easeFactor;\n    scene.rotation.y += delta * rotationFactor;\n  });\n\n  return (\n    <group\n      /* onClick={() => setEnlarged(prev => !prev)} */ onPointerEnter={() =>\n        setEnlarged(true)\n      }\n      onPointerLeave={() => setEnlarged(false)}\n      scale={scale}\n    >\n      <primitive object={scene} {...props}>\n        <Particles color=\"#FF4500\" maxDistance={80} />\n        <Particles color=\"#1E90FF\" maxDistance={20} />\n        <ParticlesV2 />\n      </primitive>\n    </group>\n  );\n}\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport { FC } from \"react\";\nimport AboutMe from \"./AboutMe\";\n//import { StaticImage } from \"gatsby-plugin-image\"\n\ninterface authorType {\n  name: string;\n  summary: string;\n}\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `);\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author: authorType = data.site.siteMetadata?.author;\n  //const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/*{\" \"}\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      */}\n      <div>\n        <div className=\"bio-inner-container\">\n          {author?.name && (\n            <p>\n              <strong>@{author.name}</strong> 이라고 합니다.\n              <br />\n              <span className=\"smaller\">{author?.summary || null}</span>\n              <br />\n              <br />\n            </p>\n          )}\n          <AboutMe />\n        </div>\n        <p className=\"svg-icon-container\">\n          <a href=\"https://github.com/sungpaks\" className=\"plane-link\">\n            <svg\n              stroke=\"currentColor\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 496 512\"\n              height=\"1em\"\n              width=\"1em\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z\"></path>\n            </svg>\n          </a>\n\n          <a\n            href=\"https://www.linkedin.com/in/sunghoon-cho-857946321/\"\n            className=\"plane-link\"\n          >\n            <svg\n              stroke=\"currentColor\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 448 512\"\n              height=\"1em\"\n              width=\"1em\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z\"></path>\n            </svg>\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Bio;\n","import React from \"react\";\nimport { Link, graphql, navigate } from \"gatsby\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Bio from \"../components/Bio\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/seo\";\nimport Tab from \"../components/Tab\";\nimport { SiteMetadata, MarkdownRemarkNode, TagNode } from \"../types/common\";\nimport TagButton from \"../components/TagButtonList\";\n\nexport interface PageQueryData {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n  allMarkdownRemark: {\n    nodes: MarkdownRemarkNode[];\n  };\n  tags: {\n    group: TagNode[];\n  };\n}\n\ninterface ComponentProps {\n  data: PageQueryData;\n  location: any;\n}\n\nconst BlogIndex = ({ data, location }: ComponentProps) => {\n  const posts = data.allMarkdownRemark.nodes;\n  const [curTag, setCurTag] = useState<string>(\"ALL\");\n  const [curPostList, setCurPostList] = useState<MarkdownRemarkNode[]>(posts);\n  const [curTab, setCurTab] = useState<Number>(0);\n\n  useEffect(() => {\n    if (curTag === \"ALL\") {\n      setCurPostList([...posts]);\n    } else {\n      setCurPostList([\n        ...posts.filter(p => p.frontmatter.tag.includes(curTag))\n      ]);\n    }\n    const tagButtons = document.getElementsByClassName(\"tag-button\");\n    for (let i = 0; i < tagButtons.length; i++) {\n      if (curTag !== \"ALL\" && tagButtons[i].id === curTag) {\n        tagButtons[i].classList.add(\"pressed\");\n      } else {\n        tagButtons[i].classList.remove(\"pressed\");\n      }\n    }\n  }, [curTag]);\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} setCurTag={setCurTag}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout location={location} setCurTag={setCurTag}>\n      <Bio />\n      <Tab amount={curPostList.length} curTab={0} />\n      <ol style={{ listStyle: `none` }}>\n        {curPostList.map(post => {\n          const title = post.frontmatter.title || post.fields.slug;\n          /*const categories = [\n            { fieldValue: ALL_NAME, totalCount: allPosts.length },\n            ...data.categories.group,\n          ]*/\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span\n                        itemProp=\"headline\"\n                        className=\"post-list-item-title\"\n                      >\n                        {title}\n                      </span>\n                    </Link>\n                  </h2>\n                </header>\n                <TagButton\n                  post={post}\n                  onClickTag={c => {\n                    setCurTag(c === curTag ? \"ALL\" : c);\n                    if (c === curTag) {\n                    }\n                  }}\n                />\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n                <small>{post.frontmatter.date}</small>\n              </article>\n            </li>\n          );\n        })}\n      </ol>\n      <hr className=\"hr-dotted\" />\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => (\n  <Seo title=\"조성개발실록\" description=\"\" children={null} />\n);\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tag: { ne: \"TIL\" } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tag\n        }\n      }\n    }\n\n    tags: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tag) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n"],"names":["Tab","amount","curTab","React","className","Link","to","undefined","TagButtonList","post","onClickTag","frontmatter","tag","_post$frontmatter$tag","map","c","key","id","onClick","_ref","description","title","children","thumbnail","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","seo","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter","Particles","color","maxDistance","particles","getRandomPositionFromCenter","useCallback","Math","random","count","particlesData","positions","Float32Array","velocities","i","x","y","z","current","useFrame","particlePosition","Vector3","dist","length","minProbability","maxProbability","probability","pow","geometry","attributes","position","needsUpdate","useEffect","_particles$current","dispose","fill","ref","attach","array","itemSize","size","transparent","opacity","memo","ParticlesV2","colors","initParticle","Color","r","g","b","vertexColors","CameraController","OrbitControls","enableZoom","enableRotate","enablePan","makeDefault","autoRotate","AboutMe","style","Canvas","camera","fov","near","far","intensity","SpaceShip","props","enlarged","setEnlarged","useState","scene","useGLTF","scale","rotation","PI","theta","xAmplitude","yAmplitude","zAmplitude","state","delta","sin","onPointerEnter","onPointerLeave","object","preload","author","_data$site$siteMetada","summary","href","stroke","viewBox","height","width","xmlns","d","data","location","posts","allMarkdownRemark","nodes","curTag","setCurTag","curPostList","setCurPostList","setCurTab","filter","p","includes","tagButtons","document","getElementsByClassName","classList","add","remove","Layout","Bio","listStyle","fields","slug","itemScope","itemType","itemProp","TagButton","dangerouslySetInnerHTML","__html","excerpt","date","Head","Seo"],"sourceRoot":""}