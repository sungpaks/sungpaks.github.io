{"version":3,"file":"2d36dd80-0ec627023aa209fdfafb.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/three/build/three.core.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2024 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '172';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.renderTarget = null; // assign texture to a render target\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.renderTarget = source.renderTarget;\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis._depthTexture = null;\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tset depthTexture( current ) {\n\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\n\t\tif ( current !== null ) current.renderTarget = this;\n\n\t\tthis._depthTexture = current;\n\n\t}\n\n\tget depthTexture() {\n\n\t\treturn this._depthTexture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in Data3DTexture directly.\n\t\t//\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t *\n\t * @returns {number}\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} minTarget\n\t * @param {Vector2} maxTarget\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\n\t * @returns {Vector2}\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t *\n\t * @param {number} fullWidth\n\t * @param {number} fullHeight\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: a,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.isMaterial === true ) {\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.isObject3D === true ) {\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass RenderTarget3D extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTarget3D = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass RenderTargetArray extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTargetArray = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Number} format\n * @param {Number} type\n * @return {Number} The number of bytes required to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","lerp","x","y","t","denormalize","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","mapLinear","a1","a2","b1","b2","inverseLerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","Vector2","prototype","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","name","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","Promise","resolve","reject","setTimeout","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","define","colorSpaces","Object","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","whitePoint","_canvas","ImageUtils","static","image","test","src","HTMLCanvasElement","context","getContext","ImageData","putImageData","drawImage","toDataURL","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","defineProperty","uuid","dataReady","version","needsUpdate","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","getDataURL","from","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","super","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","keys","dispose","transformUv","uv","needsPMREMUpdate","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","RenderTarget","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","r1","r2","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","isObject3D","parent","DEFAULT_UP","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","error","removeFromParent","remove","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","serialize","library","element","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","targetLengthSq","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getBarycoord","p3","v3","attr","i1","i2","i3","barycoord","setFromPointsAndIndices","i0","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getInterpolation","isFrontFacing","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","isMeshBasicMaterial","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","checkGeometryIntersection","faceIndex","face","checkIntersection$1","getInterpolatedAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","cloneUniforms","property","mergeUniforms","uniforms","merged","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","cloneUniformsGroups","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","concat","scene","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","FogExp2","density","isFogExp2","Fog","isFog","Scene","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","fromJSON","json","boneInverse","InstancedBufferAttribute","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","reset","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","instanceCount","_instanceInfo","_availableInstanceIds","unusedVertexCount","_nextVertexStart","unusedIndexCount","_nextIndexStart","customSort","_geometryInfo","_availableGeometryIds","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","setGeometryAt","hasIndex","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","pop","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","oldGeometry","batchId","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","computeLineDistances","lineDistances","threshold","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","_start","_end","LineSegments","LineLoop","PointsMaterial","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","Group","isGroup","VideoTexture","video","isVideoTexture","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","FramebufferTexture","isFramebufferTexture","CompressedTexture","isCompressedTexture","CompressedArrayTexture","isCompressedArrayTexture","CompressedCubeTexture","isCompressedCubeTexture","CanvasTexture","isCanvasTexture","DepthTexture","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezier","k","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","resolution","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","path","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","minX","minY","maxX","maxY","invSize","queue","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","bridge","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","ShapeUtils","contour","faces","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","splineTube","binormal","position2","extrudeByPath","shapePoints","isClockWise","reverse","hl","ahole","triangulateShape","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","buildLidFaces","buildSideFaces","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","PlaneGeometry","width_half","height_half","segment_width","segment_height","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateSegment","generateIndices","generateBufferData","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","isShadowMaterial","RawShaderMaterial","isRawShaderMaterial","MeshStandardMaterial","isMeshStandardMaterial","MeshPhysicalMaterial","isMeshPhysicalMaterial","ior","get","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","isMeshPhongMaterial","MeshToonMaterial","isMeshToonMaterial","MeshNormalMaterial","isMeshNormalMaterial","MeshLambertMaterial","isMeshLambertMaterial","MeshDepthMaterial","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","isMeshDistanceMaterial","MeshMatcapMaterial","isMeshMatcapMaterial","LineDashedMaterial","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","apply","AnimationUtils","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","frame","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","typeName","getTrackTypeForValueTypeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","label","decoder","TextDecoder","decode","catch","err","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","skyColor","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","isSpotLightShadow","SpotLight","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","isPointLight","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","isDirectionalLight","AmbientLight","isAmbientLight","RectAreaLight","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","shBasis","LightProbe","isLightProbe","MaterialLoader","getTexture","createMaterialFromType","uniform","setTextures","LoaderUtils","fromCharCode","decodeURIComponent","escape","lastIndexOf","replace","InstancedBufferGeometry","isInstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","ObjectLoader","extractUrlBase","async","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","parseImagesAsync","bufferGeometryLoader","deserializeImage","loadImage","imageArray","deserializedImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","AudioLoader","handleError","bufferCopy","decodeAudioData","audioBuffer","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","root","isAnimationObjectGroup","Composite","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","findByName","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","RenderTarget3D","isRenderTarget3D","RenderTargetArray","isRenderTargetArray","Uniform","_id","UniformsGroup","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_vector$3","SpotLightHelper","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","nearZ","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","tmpPath","tmpShape","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","inSubpaths","toShapesNoHoles","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","Controls","domElement","state","mouseButtons","touches","ONE","TWO","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","contain","imageAspect","cover","revision","__THREE__"],"sourceRoot":""}