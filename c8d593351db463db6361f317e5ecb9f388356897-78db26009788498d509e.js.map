{"version":3,"file":"c8d593351db463db6361f317e5ecb9f388356897-78db26009788498d509e.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.1\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.11.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    let applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    const willChangeName = getWillChangeName(key);\n                    if (willChangeName) {\n                        values.willChange = \"transform\";\n                        return;\n                    }\n                }\n            });\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { isWillChangeMotionValue } from './is.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange) &&\n        getWillChangeName(key)) {\n        visualElement.setStaticValue(\"willChange\", \"transform\");\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["GroupPlaybackControls","constructor","animations","this","stop","runAll","filter","Boolean","then","onResolve","onReject","Promise","all","catch","getAll","propName","setAll","newValue","i","length","attachTimeline","timeline","fallback","subscriptions","map","animation","forEach","cancel","time","speed","startTime","duration","max","Math","methodName","controls","play","pause","complete","animateSingleValue","value","keyframes","options","motionValue$1","start","acceleratedValues","Set","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","velocity","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","key","undefined","spring","restDelta","restSpeed","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","t","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","current","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","isGenerator","type","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","underDampedSpring","keyframesTransition","ease","getDefaultTransition","valueKey","transform","has","startsWith","instantAnimationState","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","index","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","backOut","backIn","reverse","backInOut","mirror","anticipate","p","isAnimatable","name","Array","isArray","complex","test","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","onKeyframesResolved","onComplete","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","resolve","reject","currentFinishedPromise","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframeValues","times","easingFunctions","absoluteTimes","offset","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","values","easing","splice","frameloopDriver","update","passTimestamp","timestamp","frameData","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","resolver","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","pipe","mix","resolvedDuration","totalDuration","tick","sample","round","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","_a","stopDriver","isBezierDefinition","generateLinearEasing","points","numPoints","substring","supportsFlags","linearEasing","memoSupports","callback","supportsFlag","memoized","memo","supportsLinearEasing","document","createElement","animate","opacity","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","fill","iterations","direction","onfinish","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","DOMKeyframesResolver","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","push","pregenerateKeyframes","pendingTimeline","set","playbackRate","playState","sampleTime","setWithVelocity","static","HTMLElement","getProps","animateMotionValue","transition","isHandoff","valueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","from","isTransitionDefined","shouldSkip","skipAnimations","get","supports","setMotionValue","visualElement","hasValue","getValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","window","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","optimizedAppearDataAttribute","getOptimisedAppearId","props","getValueTransition","isAnimationControls","isKeyframesTarget","LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PresenceContext","acos","mirrorEasing","reverseEasing","isEasingArray","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","add","delete","process","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","queueMicrotask","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","isForcedMotionValue","layoutId","convertBoundingBoxToBox","top","left","right","bottom","y","convertBoxToBoundingBox","transformBoxPoints","point","transformPoint","topLeft","bottomRight","scalePoint","scale","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","node","projectionDelta","style","display","layoutScroll","scroll","root","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","scaleX","originX","scaleY","originY","createDelta","createBox","scaleCorrectors","addScaleCorrector","correctors","assign","isIdentityScale","hasScale","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","measureViewportBox","instance","getBoundingClientRect","measurePageBox","rootProjectionNode","viewportBox","prefersReducedMotion","hasReducedMotionListener","valueTypes","color","propEventHandlers","VisualElement","scrapeMotionValuesFromProps","_props","_prevProps","_visualElement","parent","presenceContext","reducedMotionConfig","blockInitialAnimation","visualState","applyWillChange","children","isVariantNode","isControllingVariants","Map","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","notify","triggerBuild","renderInstance","renderState","projection","renderScheduledAt","scheduleRender","baseTarget","initialValues","initial","depth","variantChildren","manuallyAnimateOnMount","willChange","initialMotionValues","mount","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","unmount","remove","feature","isMounted","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","sortNodePosition","other","sortInstanceNodePosition","updateFeatures","featureDefinition","Feature","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","setStaticValue","transformTemplate","prevProps","prevPresenceContext","listener","prev","nextValue","prevValue","existingValue","liveStyle","jump","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","getClosestVariantNode","child","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","parseFloat","find","setBaseTarget","getBaseTarget","valueFromInitial","variant","custom","eventName","args","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","_target","shallowCompare","prevLength","animateVariant","getAnimation","getChildAnimations","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","numVariantProps","getVariantContext","context","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","id","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","arguments","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","addPointerInfo","handler","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","calcAxisDelta","source","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","MotionContext","LazyContext","strict","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","forEachDefinition","list","shouldApplyWillChange","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","createHtmlRenderState","vars","createSvgRenderState","attrs","svgMotionConfig","dimensions","getBBox","width","height","tagName","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","motion","SVGVisualElement","HTMLVisualElement","splitCSSVariableRegex","getVariableValue","token","match","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","trim","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureKeyframe","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","DOMVisualElement","compareDocumentPosition","supportsScrollTimeline","ScrollTimeline","camelToDash","str","replace","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","isSVGElement","SVGElement","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","getAnimatableNone","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","scaleZ","skew","translateZ","perspective","originZ","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","testValueType","defaultType","computedStyle","childSubscription","textContent","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","number","transformString","transformIsDefault","valueIsDefault","buildTransform","renderHTML","setProperty","newValues","transformPropOrder","transformProps","visualElementStore","isSVGTag","getAttribute","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","camelCaseAttributes","tag","renderSVG","_styleProp","setAttribute","charAt","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","isVariantLabel","resolveVariant","getValueState","resolveVariantFromProps","variantPriorityOrder","variantProps","MotionGlobalConfig","addUniqueItem","arr","item","removeItem","warning","invariant","input","isClamp","mixer","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","isBrowser","isNumericalString","isZeroValueString","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","indexes","var","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","any","defaultOffset","fillOffset","remaining","offsetProgress","combineFunctions","transformers","toFromDifference","isCustomValue","resolveFinalValueInKeyframes","SubscriptionManager","numSubscriptions","getSize","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","parsedValue","parseComplexValue","numSections","sanitize","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","floatRegex","addValueToWillChange","getWillChangeName","isMotionValue"],"sourceRoot":""}