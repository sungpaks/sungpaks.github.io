{"version":3,"file":"component---src-templates-tag-post-js-a30bb3f2b7174a655a50.js","mappings":"uLAwBA,MApBA,SAAe,GAAgB,IAAhB,UAAEA,GAAW,EAC1B,OACE,uBAAKC,UAAU,UACb,sBAAIA,UAAU,eAAeC,MAAO,CAAEC,UAAW,KAC/C,gBAAC,EAAAC,KAAI,CACHC,GAAG,IACHC,QAAS,KACHN,GAAWA,EAAU,MAAM,GAElC,cAIH,sBAAIC,UAAU,cACZ,gBAAC,EAAAG,KAAI,CAACC,GAAG,QAAO,QAIxB,ECiBA,MAnCe,IAA+C,IAA9C,SAAEE,EAAQ,MAAEC,EAAK,SAAEC,EAAQ,UAAET,GAAW,EACtD,MACMU,EAD6B,OAChBH,aAAQ,EAARA,EAAUI,UAiB7B,OACE,2BACE,gBAAC,EAAK,CAACX,UAAWA,IAClB,uBAAKC,UAAU,iBAAiB,oBAAmBS,GACjD,0BAAQT,UAAU,kBAClB,4BAAOQ,GACP,8BAAQ,MACH,IAAIG,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGnC,C,+CCcV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEP,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEO,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBX,MAExC,OACE,gCACE,6BAAQY,EAAY,GAAMA,EAAiBZ,GAC3C,wBAAMa,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASd,IACnC,wBAAMe,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASd,IACpC,wBAAMa,KAAK,sBAAsBC,QAASJ,IACzCT,EACA,C,0ECfP,UAxBgB,IAAsC,IAArC,YAAEiB,EAAW,KAAEC,EAAI,SAAEpB,GAAU,EAC9C,MAAM,KAAEqB,GAASF,EACXG,EAAQF,EAAKG,kBAAkBC,MAGrC,OADAC,QAAQC,IAAIN,GAEV,gBAAC,IAAM,KACL,gBAAC,IAAG,CAACnB,MAJS,aAKd,wBAAMN,MAAO,CAAEgC,MAAO,UAAYN,GAClC,4BAAM,WACLC,EAAMM,KAAIC,GAEP,uBAAKlC,MAAO,CAAEC,UAAW,UACvB,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAE,GAAK+B,EAAKC,OAAOC,MAASF,EAAKG,YAAY/B,QAErD,yBAAI4B,EAAKG,YAAYxB,gBAIpB,C","sources":["webpack://gatsby-starter-blog/./src/components/topUI.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/tag-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nfunction TopUI({ setCurTag }) {\n  return (\n    <div className=\"top-ui\">\n      <h4 className=\"top-ui-title\" style={{ marginTop: 20 }}>\n        <Link\n          to=\"/\"\n          onClick={() => {\n            if (setCurTag) setCurTag(\"ALL\")\n          }}\n        >\n          üëç ÏÑ±Ìõà Î∏îÎ°úÍ∑∏\n        </Link>\n      </h4>\n      <h6 className=\"top-ui-tag\">\n        <Link to=\"/tag\">Tag</Link>\n      </h6>\n    </div>\n  )\n}\n\nexport default TopUI\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport TopUI from \"./topUI\"\n\nconst Layout = ({ location, title, children, setCurTag }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath\n  /*let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }*/\n\n  return (\n    <div>\n      <TopUI setCurTag={setCurTag} />\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{}</header>\n        <main>{children}</main>\n        <footer>\n          ¬© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst TagPost = ({ pageContext, data, location }) => {\n  const { tags } = pageContext\n  const posts = data.allMarkdownRemark.nodes\n  const tagHeader = \"All Tags\"\n  console.log(data)\n  return (\n    <Layout>\n      <Seo title={tagHeader} />\n      <span style={{ color: \"green\" }}>{tags}</span>\n      <span> Í¥ÄÎ†® Í≤åÏãúÍ∏Ä</span>\n      {posts.map(post => {\n        return (\n          <div style={{ marginTop: \"100px\" }}>\n            <h2>\n              <Link to={`${post.fields.slug}`}>{post.frontmatter.title}</Link>\n            </h2>\n            <p>{post.frontmatter.description}</p>\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport default TagPost\n\nexport const pageQuery = graphql`\n  query ($tags: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      limit: 2000\n      filter: { frontmatter: { tag: { in: [$tags] } } }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tag\n        }\n      }\n    }\n  }\n`\n"],"names":["setCurTag","className","style","marginTop","Link","to","onClick","location","title","children","isRootPath","pathname","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","pageContext","data","tags","posts","allMarkdownRemark","nodes","console","log","color","map","post","fields","slug","frontmatter"],"sourceRoot":""}