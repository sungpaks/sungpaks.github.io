{"version":3,"file":"commons-fd40aea7ee252890fe12.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Icons.tsx","webpack://gatsby-starter-blog/./src/components/TopUI.tsx","webpack://gatsby-starter-blog/./src/hooks/useWindowDimensions.ts","webpack://gatsby-starter-blog/./src/images/sitting.png","webpack://gatsby-starter-blog/./src/images/walking00.png","webpack://gatsby-starter-blog/./src/images/walking01.png","webpack://gatsby-starter-blog/./src/images/walking02.png","webpack://gatsby-starter-blog/./src/images/standing.png","webpack://gatsby-starter-blog/./src/components/Bugi.tsx","webpack://gatsby-starter-blog/./src/components/Layout.tsx"],"sourcesContent":["import React from \"react\";\n\nexport const DarkIcon = () => {\n  return (\n    <svg\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M8 22H16\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M5 19H19\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M2 16H22\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M21.0672 11.8568L20.4253 11.469L21.0672 11.8568ZM12.1432 2.93276L11.7553 2.29085V2.29085L12.1432 2.93276ZM20.4806 15.6997C20.3148 16.0793 20.4881 16.5214 20.8676 16.6873C21.2472 16.8531 21.6893 16.6798 21.8552 16.3003L20.4806 15.6997ZM2.14482 16.3003C2.31066 16.6798 2.7528 16.8531 3.13237 16.6873C3.51193 16.5214 3.68519 16.0793 3.51935 15.6997L2.14482 16.3003ZM3.98703 7.37554C4.19443 7.017 4.07191 6.5582 3.71337 6.3508C3.35482 6.14339 2.89602 6.26591 2.68862 6.62446L3.98703 7.37554ZM6.62446 2.68862C6.26591 2.89602 6.14339 3.35482 6.3508 3.71337C6.5582 4.07191 7.017 4.19443 7.37554 3.98703L6.62446 2.68862ZM15.5 14.25C12.3244 14.25 9.75 11.6756 9.75 8.5H8.25C8.25 12.5041 11.4959 15.75 15.5 15.75V14.25ZM20.4253 11.469C19.4172 13.1373 17.5882 14.25 15.5 14.25V15.75C18.1349 15.75 20.4407 14.3439 21.7092 12.2447L20.4253 11.469ZM9.75 8.5C9.75 6.41182 10.8627 4.5828 12.531 3.57467L11.7553 2.29085C9.65609 3.5593 8.25 5.86509 8.25 8.5H9.75ZM21.25 12C21.25 13.3169 20.9752 14.5677 20.4806 15.6997L21.8552 16.3003C22.431 14.9824 22.75 13.5275 22.75 12H21.25ZM3.51935 15.6997C3.02475 14.5677 2.75 13.3169 2.75 12H1.25C1.25 13.5275 1.56904 14.9824 2.14482 16.3003L3.51935 15.6997ZM12 2.75C11.9115 2.75 11.8077 2.71008 11.7324 2.63168C11.6686 2.56527 11.6538 2.50244 11.6503 2.47703C11.6461 2.44587 11.6482 2.35557 11.7553 2.29085L12.531 3.57467C13.0342 3.27065 13.196 2.71398 13.1368 2.27627C13.0754 1.82126 12.7166 1.25 12 1.25V2.75ZM21.7092 12.2447C21.6444 12.3518 21.5541 12.3539 21.523 12.3497C21.4976 12.3462 21.4347 12.3314 21.3683 12.2676C21.2899 12.1923 21.25 12.0885 21.25 12H22.75C22.75 11.2834 22.1787 10.9246 21.7237 10.8632C21.286 10.804 20.7293 10.9658 20.4253 11.469L21.7092 12.2447ZM2.75 12C2.75 10.3139 3.20043 8.73533 3.98703 7.37554L2.68862 6.62446C1.77351 8.2064 1.25 10.0432 1.25 12H2.75ZM7.37554 3.98703C8.73533 3.20043 10.3139 2.75 12 2.75V1.25C10.0432 1.25 8.2064 1.77351 6.62446 2.68862L7.37554 3.98703Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M19.9001 2.30719C19.7392 1.8976 19.1616 1.8976 19.0007 2.30719L18.5703 3.40247C18.5212 3.52752 18.4226 3.62651 18.298 3.67583L17.2067 4.1078C16.7986 4.26934 16.7986 4.849 17.2067 5.01054L18.298 5.44252C18.4226 5.49184 18.5212 5.59082 18.5703 5.71587L19.0007 6.81115C19.1616 7.22074 19.7392 7.22074 19.9001 6.81116L20.3305 5.71587C20.3796 5.59082 20.4782 5.49184 20.6028 5.44252L21.6941 5.01054C22.1022 4.849 22.1022 4.26934 21.6941 4.1078L20.6028 3.67583C20.4782 3.62651 20.3796 3.52752 20.3305 3.40247L19.9001 2.30719Z\"\n        stroke=\"currentColor\"\n      />\n      <path\n        d=\"M16.0328 8.12967C15.8718 7.72009 15.2943 7.72009 15.1333 8.12967L14.9764 8.52902C14.9273 8.65407 14.8287 8.75305 14.7041 8.80237L14.3062 8.95987C13.8981 9.12141 13.8981 9.70107 14.3062 9.86261L14.7041 10.0201C14.8287 10.0694 14.9273 10.1684 14.9764 10.2935L15.1333 10.6928C15.2943 11.1024 15.8718 11.1024 16.0328 10.6928L16.1897 10.2935C16.2388 10.1684 16.3374 10.0694 16.462 10.0201L16.8599 9.86261C17.268 9.70107 17.268 9.12141 16.8599 8.95987L16.462 8.80237C16.3374 8.75305 16.2388 8.65407 16.1897 8.52902L16.0328 8.12967Z\"\n        stroke=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport const LightIcon = () => {\n  return (\n    <svg\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M18.5 12C18.5 8.41 15.59 5.5 12 5.5C8.41 5.5 5.5 8.41 5.5 12\"\n        stroke=\"#ffffff\"\n        strokeWidth=\"1.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M4.98999 4.98999L4.85999 4.85999M19.01 4.98999L19.14 4.85999L19.01 4.98999ZM12 2.07999V2V2.07999ZM2.08002 12H2H2.08002ZM22 12H21.92H22Z\"\n        stroke=\"#ffffff\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M4 15H20\"\n        stroke=\"#ffffff\"\n        strokeWidth=\"1.5\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M6 18H18\"\n        stroke=\"#ffffff\"\n        strokeWidth=\"1.5\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <path\n        d=\"M9 21H15\"\n        stroke=\"#ffffff\"\n        strokeWidth=\"1.5\"\n        strokeMiterlimit=\"10\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nexport const TagIcon = () => {\n  return (\n    <svg\n      fill=\"currentColor\"\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 -2 32 32\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M27.395 16.112l-12.225-12.141h-11.141l-0.026 11.127 12.078 12.329c0.794 0.794 2.071 0.805 2.853 0.023l8.484-8.485c0.781-0.781 0.771-2.059-0.023-2.853zM6.982 9.004c0-1.104 0.896-2 2-2s2 0.896 2 2c0 1.105-0.896 2-2 2s-2-0.895-2-2zM17.863 22.952l-7.778-7.778 0.707-0.707 7.778 7.778-0.707 0.707zM19.984 20.831l-7.778-7.778 0.708-0.707 7.777 7.778-0.707 0.707zM22.105 18.709l-7.777-7.778 0.707-0.707 7.777 7.778-0.707 0.707z\"></path>\n    </svg>\n  );\n};\n\nexport const CommentIcon = () => {\n  return (\n    <svg\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 -2 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g id=\"File / Note_Edit\">\n        <path\n          id=\"Vector\"\n          d=\"M10.0002 4H7.2002C6.08009 4 5.51962 4 5.0918 4.21799C4.71547 4.40973 4.40973 4.71547 4.21799 5.0918C4 5.51962 4 6.08009 4 7.2002V16.8002C4 17.9203 4 18.4801 4.21799 18.9079C4.40973 19.2842 4.71547 19.5905 5.0918 19.7822C5.5192 20 6.07899 20 7.19691 20H16.8031C17.921 20 18.48 20 18.9074 19.7822C19.2837 19.5905 19.5905 19.2839 19.7822 18.9076C20 18.4802 20 17.921 20 16.8031V14M16 5L10 11V14H13L19 8M16 5L19 2L22 5L19 8M16 5L19 8\"\n          stroke=\"currentColor\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </g>\n    </svg>\n  );\n};\n\nexport const ThemeIcon = () => {\n  return (\n    <svg\n      width=\"30px\"\n      height=\"30px\"\n      viewBox=\"0 -1 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M12 2.2a9.8 9.8 0 1 0 9.8 9.8A9.81 9.81 0 0 0 12 2.2zM3.2 12A8.81 8.81 0 0 1 12 3.2v17.6A8.81 8.81 0 0 1 3.2 12z\"\n        stroke=\"currentColor\"\n        fill=\"currentColor\"\n      />\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    </svg>\n  );\n};\n","import * as React from \"react\";\nimport { FC } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { Link } from \"gatsby\";\nimport { useEffect, useState } from \"react\";\nimport { CommentIcon, DarkIcon, TagIcon, ThemeIcon } from \"./Icons\";\n\ninterface ComponentProps {\n  setCurTag?(value: string): void;\n}\n\nfunction TopUI({ setCurTag }: ComponentProps) {\n  const [scrollPercent, setScrollPercent] = useState(0);\n  const ORIGINAL = \"original\";\n  const REVERSED = \"reversed\";\n  const THEME_REVERSE = \"theme-reverse\";\n  const KEY_THEME = \"theme\";\n  const [preferDark, setPreferedDark] = useState(false);\n  const LIGHT_MODE = <ThemeIcon />;\n  const DARK_MODE = <ThemeIcon />;\n  const [curMode, setCurMode] = useState(<ThemeIcon />);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentScroll: number = document.documentElement.scrollTop;\n      const totalScroll: number =\n        document.documentElement.scrollHeight -\n        document.documentElement.clientHeight;\n      setScrollPercent((currentScroll * 100) / totalScroll);\n    };\n    document.addEventListener(\"scroll\", handleScroll);\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setPreferedDark(true);\n    }\n    setCurMode(\n      preferDark\n        ? localStorage.getItem(KEY_THEME) === REVERSED\n          ? LIGHT_MODE\n          : DARK_MODE\n        : localStorage.getItem(KEY_THEME) === REVERSED\n        ? DARK_MODE\n        : LIGHT_MODE\n    );\n    return () => {\n      document.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return (\n    <div>\n      <div className=\"top-ui\">\n        <h5 className=\"top-ui-title\" style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            onClick={() => {\n              if (setCurTag) setCurTag(\"ALL\");\n            }}\n          >\n            👍 &nbsp; 조성개발실록\n          </Link>\n        </h5>\n        <div className=\"top-ui-tag-container\">\n          <div className=\"top-ui-tag\">\n            <div className=\"tooltip\">\n              <a\n                id=\"light-or-dark\"\n                onClick={() => {\n                  const theme = localStorage.getItem(KEY_THEME);\n                  if (!theme || theme === ORIGINAL) {\n                    document.body.classList.add(THEME_REVERSE);\n                    localStorage.setItem(KEY_THEME, REVERSED);\n                  } else {\n                    document.body.classList.remove(THEME_REVERSE);\n                    localStorage.setItem(KEY_THEME, ORIGINAL);\n                  }\n                  window.dispatchEvent(\n                    new StorageEvent(\"storage\", { key: KEY_THEME })\n                  );\n                  setCurMode(\n                    preferDark\n                      ? localStorage.getItem(KEY_THEME) === REVERSED\n                        ? LIGHT_MODE\n                        : DARK_MODE\n                      : localStorage.getItem(KEY_THEME) === REVERSED\n                      ? DARK_MODE\n                      : LIGHT_MODE\n                  );\n                }}\n              >\n                {curMode}\n              </a>\n              <div className=\"tooltip-text\">테마 변경</div>\n            </div>\n          </div>\n          <div className=\"top-ui-tag\" style={{ margin: \"0 0 0 0\" }}>\n            <div className=\"tooltip\">\n              <Link to=\"/tag\">\n                <TagIcon />\n              </Link>\n              <div className=\"tooltip-text\">태그</div>\n            </div>\n          </div>\n          {/* <div className=\"top-ui-tag\">\n            <div className=\"tooltip\">\n              <Link to=\"/til\">📝 </Link>\n              <div className=\"tooltip-text\">\n                <span className=\"smaller\">TIL</span>\n                <br />\n                <span className=\"x-small\">Today I Learned</span>\n              </div>\n            </div>\n          </div> */}\n          <div className=\"top-ui-tag\">\n            <div className=\"tooltip\">\n              <Link to=\"/visitor-log\">\n                <CommentIcon />\n              </Link>\n              <div className=\"tooltip-text\">방명록</div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        className=\"progress-bar\"\n        style={{ width: `${scrollPercent}%` }}\n      ></div>\n    </div>\n  );\n}\n\nexport default TopUI;\n","import { useState, useEffect } from \"react\"\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window\n  return { width, height }\n}\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState({\n    width: 0,\n    height: 0,\n  })\n  useEffect(() => {\n    setWindowDimensions(getWindowDimensions())\n    const handleResize = () => {\n      setWindowDimensions(getWindowDimensions())\n    }\n    window.addEventListener(\"resize\", handleResize)\n    return () => window.removeEventListener(\"resize\", handleResize)\n  }, [])\n  return windowDimensions\n}\n\nexport default useWindowDimensions\n","export default __webpack_public_path__ + \"static/sitting-78e51c4e94b7df20cfe8efd626d7106a.png\";","export default __webpack_public_path__ + \"static/walking00-6ac4657a7517a9d0a86595ad1e3eb8ee.png\";","export default __webpack_public_path__ + \"static/walking01-368a89b9e62b3937dda3108795b60506.png\";","export default __webpack_public_path__ + \"static/walking02-19033ab064d097fc75dee5c237b50455.png\";","export default __webpack_public_path__ + \"static/standing-dde670ca5310bdf58d7c4d97962de350.png\";","import React, { Ref, useEffect, useRef, useState } from \"react\";\nimport useWindowDimensions from \"../hooks/useWindowDimensions\";\n//@ts-ignore\nimport sitting from \"../images/sitting.png\";\n//@ts-ignore\nimport walking01 from \"../images/walking00.png\";\n//@ts-ignore\nimport walking02 from \"../images/walking01.png\";\n//@ts-ignore\nimport walking03 from \"../images/walking02.png\";\n//@ts-ignore\nimport standing from \"../images/standing.png\";\nimport { createPortal } from \"react-dom\";\n\nexport default function Bugi(toc: any) {\n  const ref = useRef<HTMLImageElement>(null);\n  const [position, setPosition] = useState({ top: 200, left: 100 });\n  const { height, width } = useWindowDimensions();\n  const [isDragging, setIsDragging] = useState(false);\n  let lastPosition = { x: 0, y: 0 };\n  let lastTimestamp = 0;\n  let velocity = { x: 0, y: 0 };\n  let inertiaAnimation = 0;\n  const shift = useRef({ x: 0, y: 0 });\n  const animationFrameId = useRef(0);\n  const [isWalking, setIsWalking] = useState(false);\n  const startTimestamp = useRef(0);\n  const [pose, setPose] = useState(sitting);\n  const [isFlipped, setIsFlipped] = useState(false);\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n  const [dragged, setDragged] = useState(false);\n  const [isClient, setIsClient] = useState(false);\n  const emotions = [\n    \"( ੭ •౩• )੭\",\n    \"(*•؎ •*)\",\n    \"( 'ч' )\",\n    \"٩( ᐛ )\",\n    \"(´｡• ω •｡`)\",\n    \"(っ˘ڡ˘ς)\",\n    \"(｡•́︿•̀｡)\",\n    \"( ｡ •̀ ⤙ •́ ｡ )\",\n    \"¸◕ˇ‸ˇ◕˛\",\n    \"৻(  •̀ ᗜ •́  ৻)\",\n    \"ദ്ദി⑉･̆-･̆⑉)\",\n    \"(๑•̀ – •́)و\",\n    \"(𐐫ㆍ𐐃)\",\n    \"〳 ͡° Ĺ̯ ͡° 〵\",\n    \"٩( °ꇴ °)۶\",\n    \"( ⸝⸝•ᴗ•⸝⸝ )੭⁾⁾\",\n    \",,ᴗ ̯ᴗ,,\",\n    \"(๑ᵔ⤙ᵔ๑)\",\n    \"( ˘༥˘  )\",\n    \"ᴗ.ᴗᶻ ᶻ ᶻ\",\n    \"[▓▓]ε¦)💤\",\n    \"ᐠ( ᑒ  )ᐟ\",\n    \"(´～｀*)｡｡oO\"\n  ];\n  const walkingPoses = [walking01, walking03, walking02];\n  const [emotionIndex, setEmotionIndex] = useState(\n    Math.floor(Math.random()) * emotions.length\n  );\n\n  const animateWalk = (timestamp: number, targetX: number, targetY: number) => {\n    if (!startTimestamp.current) {\n      startTimestamp.current = timestamp;\n    }\n    const elapsed = timestamp - startTimestamp.current;\n    setIsFlipped(position.left - targetX > 0);\n\n    if (elapsed > 5000) {\n      setIsWalking(false);\n      setPose(sitting);\n      cancelAnimationFrame(animationFrameId.current);\n      animationFrameId.current = 0;\n      startTimestamp.current = 0;\n      return;\n    }\n    const currentPoseIndex = Math.floor(elapsed / 500) % 3;\n    if (walkingPoses[currentPoseIndex] !== pose)\n      setPose(walkingPoses[currentPoseIndex]);\n    const dx = targetX - position.left;\n    const dy = targetY - position.top;\n    setPosition(prev => {\n      return {\n        left: prev.left + dx / 1000,\n        top: prev.top + dy / 1000\n      };\n    });\n\n    animationFrameId.current = requestAnimationFrame(timestamp =>\n      animateWalk(timestamp, targetX, targetY)\n    );\n  };\n\n  const startWalk = (method: \"click\" | \"auto\") => {\n    if (\n      (method === \"click\" && dragged) ||\n      isWalking /* ||\n      !animationFrameId.current */\n    )\n      return;\n\n    const range = 200;\n\n    const targetX = Math.random() * range * 2 - range + position.left; // 현재 위치에서 -300 ~ +300 범위\n    const targetY = Math.random() * range * 2 - range + position.top; // 현재 위치에서 -300 ~ +300 범위\n    const clampedX = Math.max(\n      0,\n      Math.min(targetX, width - (ref.current?.offsetWidth || 0))\n    ); // 화면 내로 제한\n    const clampedY = Math.max(\n      0,\n      Math.min(targetY, height - (ref.current?.offsetHeight || 0))\n    ); // 화면 내로 제한\n    setIsWalking(true);\n    setPose(walking01);\n    setIsFlipped(position.left - clampedX > 0);\n    animationFrameId.current = requestAnimationFrame(timestamp =>\n      animateWalk(timestamp, clampedX, clampedY)\n    );\n  };\n\n  const handleMouseDown = (e: React.MouseEvent | React.TouchEvent) => {\n    if (isWalking) return;\n    setEmotionIndex(Math.floor(Math.random() * emotions.length));\n    setDragged(false);\n    setIsDragging(true);\n    setPose(standing);\n    //@ts-ignore\n    shift.current = {\n      //@ts-ignore\n      x: e.clientX - ref.current.offsetLeft,\n      //@ts-ignore\n      y: e.clientY - ref.current.offsetTop\n    };\n  };\n  const handleMouseUp = () => {\n    if (isDragging) {\n      startInertiaAnimation();\n      setIsDragging(false);\n      setPose(sitting);\n    }\n  };\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    if (isWalking) return;\n    setTooltipVisible(true);\n    handleMouseDown(e);\n  };\n  const handleTouchEnd = () => {\n    if (isDragging) {\n      startInertiaAnimation();\n    }\n    setTooltipVisible(false);\n    handleMouseUp();\n  };\n\n  const handleMouseMove = (e: MouseEvent | React.MouseEvent) => {\n    //setIsDragging(e.buttons === 1)\n    if (isDragging && ref.current) {\n      if (e.buttons !== 1) return;\n      // 화면 밖으로 나가면 드래깅 종료\n      if (\n        e.clientX - shift.current.x < 0 ||\n        e.clientX + (ref.current.offsetWidth || 0) - shift.current.x > width ||\n        e.clientY - shift.current.y < 0 ||\n        e.clientY + (ref.current.offsetHeight || 0) - shift.current.y > height\n      ) {\n        setIsDragging(false);\n        document.dispatchEvent(new MouseEvent(\"mouseup\"));\n        return;\n      }\n\n      // 위치 이동\n      setDragged(true);\n      setPosition({\n        left: e.clientX - shift.current.x, //ref.current.offsetWidth / 2,\n        top: e.clientY - shift.current.y //ref.current.offsetHeight / 2\n      });\n\n      // 관성운동량 계산\n      const currentTimestamp = e.timeStamp;\n      const dx = e.clientX - lastPosition.x;\n      const dy = e.clientY - lastPosition.y;\n      const dt = (currentTimestamp - lastTimestamp) / 1000;\n      if (dt) {\n        velocity = { x: dx / dt, y: dy / dt };\n      }\n      lastPosition = { x: e.clientX, y: e.clientY };\n      lastTimestamp = currentTimestamp;\n    }\n  };\n\n  const handleTouchMove = (e: TouchEvent) => {\n    const touch = e.touches[0];\n    if (isDragging && ref.current) {\n      // 화면 밖으로 나가면 드래깅 종료\n      if (\n        touch.clientX - shift.current.x < 0 ||\n        touch.clientX + (ref.current.offsetWidth || 0) - shift.current.x >\n          width ||\n        touch.clientY - shift.current.y < 0 ||\n        touch.clientY + (ref.current.offsetHeight || 0) - shift.current.y >\n          height\n      ) {\n        setIsDragging(false);\n        document.dispatchEvent(new MouseEvent(\"touchend\"));\n        return;\n      }\n\n      // 위치 이동\n      e.preventDefault();\n      setPosition({\n        left: touch.clientX - ref.current.offsetWidth / 2,\n        top: touch.clientY - ref.current.offsetHeight / 2\n      });\n\n      // 관성운동량 계산\n      const currentTimestamp = e.timeStamp;\n      const dx = touch.clientX - lastPosition.x;\n      const dy = touch.clientY - lastPosition.y;\n      const dt = (currentTimestamp - lastTimestamp) / 1000;\n      if (dt) {\n        velocity = { x: dx / dt, y: dy / dt };\n      }\n      lastPosition = { x: touch.clientX, y: touch.clientY };\n      lastTimestamp = currentTimestamp;\n    }\n  };\n\n  const startInertiaAnimation = () => {\n    const decay = 0.95; // Deceleration factor\n    const easeFactor = 0.0075; // Ease factor\n    const rotationFactor = 0.1; // Rotation factor\n\n    const animate = (\n      timestamp: number,\n      currentVelocity: { x: number; y: number }\n    ) => {\n      setPose(standing);\n      setIsFlipped(currentVelocity.x < 0);\n      currentVelocity.x *= decay;\n      currentVelocity.y *= decay;\n\n      if (ref.current) {\n        ref.current.style.rotate =\n          Math.sqrt(currentVelocity.x ** 2 + currentVelocity.y ** 2) *\n            rotationFactor *\n            Math.sign(velocity.x * -1) +\n          \"deg\";\n      }\n\n      setPosition(prev => {\n        const nextLeft = prev.left + currentVelocity.x * easeFactor;\n        const nextTop = prev.top + currentVelocity.y * easeFactor;\n        if (\n          nextLeft < 0 ||\n          nextLeft > width - (ref.current?.offsetWidth || 0)\n        ) {\n          currentVelocity.x = -currentVelocity.x;\n        }\n        if (\n          nextTop < 0 ||\n          nextTop > height - (ref.current?.offsetHeight || 0)\n        ) {\n          currentVelocity.y = -currentVelocity.y;\n        }\n\n        return {\n          left: prev.left + currentVelocity.x * easeFactor,\n          top: prev.top + currentVelocity.y * easeFactor\n        };\n      });\n\n      // Stop animation when velocity is negligible\n      if (Math.abs(velocity.x) > 0.1 || Math.abs(velocity.y) > 0.1) {\n        animationFrameId.current = requestAnimationFrame(timestamp =>\n          animate(timestamp, currentVelocity)\n        );\n      } else {\n        setPose(sitting);\n        setIsFlipped(currentVelocity.x < 0);\n        animationFrameId.current = 0;\n      }\n    };\n    setPose(standing);\n\n    animationFrameId.current = requestAnimationFrame(timestamp =>\n      animate(timestamp, velocity)\n    );\n  };\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout | number;\n    const intervalId = setInterval(() => {\n      if (!tooltipVisible && Math.random() < 0.1) {\n        setTooltipVisible(true);\n        setEmotionIndex(Math.floor(Math.random() * emotions.length));\n        timeoutId = setTimeout(() => {\n          setTooltipVisible(false);\n        }, 2000);\n      } else {\n      }\n    }, 2000); // 2초마다 확률 체크\n\n    return () => {\n      clearInterval(intervalId);\n      if (timeoutId) clearTimeout(timeoutId);\n    }; // 컴포넌트 언마운트 시 interval 정리\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"touchmove\", handleTouchMove, { passive: false });\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    document.addEventListener(\"touchend\", handleTouchEnd);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"touchmove\", handleTouchMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n      document.removeEventListener(\"touchend\", handleTouchEnd);\n    };\n  }, [isDragging]);\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // walking 중이 아니고, dragging 중이 아닐 때 10% 확률로 walking 시작\n      if (!isWalking && !isDragging && Math.random() < 0.1) {\n        startWalk(\"auto\");\n      }\n    }, 2000); // 2초마다 확률 체크\n\n    return () => clearInterval(intervalId); // 컴포넌트 언마운트 시 interval 정리\n  }, [isWalking, isDragging]); // isWalking, isDragging 상태에 따라 다시 체크\n\n  useEffect(() => {\n    setIsClient(true);\n\n    return () => setIsClient(false);\n  }, []);\n\n  if (!isClient) return null;\n  return createPortal(\n    <>\n      <img\n        className=\"hamburger\"\n        ref={ref}\n        src={pose}\n        style={{\n          left: position.left,\n          top: position.top,\n          margin: 0,\n          transform: isFlipped ? \"scaleX(-1)\" : \"scaleX(1)\"\n        }}\n        onMouseDown={handleMouseDown}\n        // onMouseUp={handleMouseUp}\n        // onMouseLeave={handleMouseMove}\n        onTouchStart={handleTouchStart}\n        // onTouchEnd={handleTouchEnd}\n        draggable={false}\n        onClick={() => startWalk(\"click\")}\n        onMouseEnter={() => setTooltipVisible(true)}\n        onMouseLeave={() => setTooltipVisible(false)}\n      />\n      <div\n        className=\"tooltip\"\n        style={{\n          position: \"fixed\",\n          left: position.left - (width > 720 ? 40 : 45),\n          top: position.top - (width > 720 ? 5 : 15),\n          width: 110,\n          height: 45,\n          whiteSpace: \"nowrap\"\n        }}\n      >\n        <div\n          className=\"tooltip-text\"\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            visibility: tooltipVisible ? \"visible\" : \"hidden\",\n            paddingLeft: 0,\n            paddingRight: 0\n          }}\n        >\n          {isDragging ? \"(o_O)\" : emotions[emotionIndex]}\n        </div>\n      </div>\n    </>,\n    document.body\n  );\n}\n","import * as React from \"react\";\nimport TopUI from \"./TopUI\";\nimport { FC } from \"react\";\nimport { useState } from \"react\";\nimport Bugi from \"./Bugi\";\n\ninterface ComponentProps {\n  location: any;\n  children: any | undefined;\n  setCurTag?(value: string): void;\n}\n\nconst Layout = ({ location, children, setCurTag }: ComponentProps) => {\n  const rootPath = \"/\"; //`${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath;\n\n  return (\n    <>\n      <Bugi />\n      <div>\n        <TopUI setCurTag={setCurTag} />\n        <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n          <header className=\"global-header\">{}</header>\n          <main>{children}</main>\n          <footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n          </footer>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n"],"names":["TagIcon","React","fill","width","height","viewBox","version","xmlns","d","CommentIcon","id","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ThemeIcon","setCurTag","scrollPercent","setScrollPercent","useState","ORIGINAL","REVERSED","THEME_REVERSE","KEY_THEME","preferDark","setPreferedDark","LIGHT_MODE","DARK_MODE","curMode","setCurMode","useEffect","handleScroll","currentScroll","document","documentElement","scrollTop","totalScroll","scrollHeight","clientHeight","addEventListener","window","matchMedia","matches","localStorage","getItem","removeEventListener","className","style","margin","Link","to","onClick","theme","body","classList","remove","setItem","add","dispatchEvent","StorageEvent","key","getWindowDimensions","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","Bugi","toc","ref","useRef","position","setPosition","top","left","useWindowDimensions","isDragging","setIsDragging","lastPosition","x","y","lastTimestamp","velocity","shift","animationFrameId","isWalking","setIsWalking","startTimestamp","pose","setPose","sitting","isFlipped","setIsFlipped","tooltipVisible","setTooltipVisible","dragged","setDragged","isClient","setIsClient","emotions","walkingPoses","walking01","walking03","walking02","emotionIndex","setEmotionIndex","Math","floor","random","length","animateWalk","timestamp","targetX","targetY","current","elapsed","cancelAnimationFrame","currentPoseIndex","dx","dy","prev","requestAnimationFrame","startWalk","method","range","clampedX","max","min","_ref$current","offsetWidth","clampedY","_ref$current2","offsetHeight","handleMouseDown","e","standing","clientX","offsetLeft","clientY","offsetTop","handleMouseUp","startInertiaAnimation","handleTouchEnd","handleMouseMove","buttons","MouseEvent","currentTimestamp","timeStamp","dt","handleTouchMove","touch","touches","preventDefault","easeFactor","animate","currentVelocity","rotate","sqrt","sign","nextLeft","nextTop","_ref$current3","_ref$current4","abs","timeoutId","intervalId","setInterval","setTimeout","clearInterval","clearTimeout","passive","createPortal","src","transform","onMouseDown","onTouchStart","draggable","onMouseEnter","onMouseLeave","whiteSpace","visibility","paddingLeft","paddingRight","_ref","location","children","isRootPath","pathname","TopUI","Date","getFullYear","href"],"sourceRoot":""}