{"version":3,"file":"component---src-pages-demo-tsx-c453c693b319c4ccccfb.js","mappings":"2PAMA,SAASA,EAAsBC,EAASC,EAAQ,IAAKC,GACjD,MAAMC,EAAYD,EAAgB,IAAKF,EAASI,UAAW,CAAC,EAAGH,KACzDI,EAAWC,KAAKC,KAAI,OAAsBJ,GAAY,KAC5D,MAAO,CACHK,KAAM,YACNC,KAAOC,GAAaP,EAAUQ,KAAKN,EAAWK,GAAUE,MAAQX,EAChEI,UAAU,OAAsBA,GAExC,C,oDCZA,SAASQ,EAAgBC,EAAUC,EAAOC,GACtC,IAAIC,EACJ,GAAwB,iBAAbH,EAAuB,CAC9B,IAAII,EAAOC,SACPJ,KACA,OAAUK,QAAQL,EAAMM,SAAU,4CAClCH,EAAOH,EAAMM,SAEbL,GACmC,QAAlCC,EAAKD,EAAcF,UAA8B,IAAPG,IAAsBD,EAAcF,GAAYI,EAAKI,iBAAiBR,IACjHA,EAAWE,EAAcF,IAGzBA,EAAWI,EAAKI,iBAAiBR,EAEzC,MACSA,aAAoBS,UACzBT,EAAW,CAACA,IAKhB,OAAOU,MAAMC,KAAKX,GAAY,GAClC,CCzBA,SAASY,EAAetB,GACpB,MAA4B,iBAAdA,IAA2BoB,MAAMG,QAAQvB,EAC3D,CCCA,SAASwB,EAAgBC,EAASzB,EAAWW,EAAOC,GAChD,MAAuB,iBAAZa,GAAwBH,EAAetB,GACvCS,EAAgBgB,EAASd,EAAOC,GAElCa,aAAmBC,SACjBN,MAAMC,KAAKI,GAEbL,MAAMG,QAAQE,GACZA,EAGA,CAACA,EAEhB,C,cCZA,SAASE,EAAaV,EAASV,EAAMqB,EAAMC,GACvC,IAAIhB,EACJ,MAAoB,iBAATN,EACAA,EAEFA,EAAKuB,WAAW,MAAQvB,EAAKuB,WAAW,KACtC5B,KAAK6B,IAAI,EAAGd,EAAUe,WAAWzB,IAE1B,MAATA,EACEqB,EAG4B,QAA3Bf,EAAKgB,EAAOI,IAAI1B,UAA0B,IAAPM,EAAgBA,EAAKI,CAExE,CClBA,MAAMiB,EAAO,CAAC/B,EAAK4B,EAAKI,KACpB,MAAMC,EAAYL,EAAM5B,EACxB,QAAWgC,EAAIhC,GAAOiC,EAAaA,GAAaA,EAAajC,CAAG,E,cCCpE,SAASkC,EAAoBC,EAAQC,GACjC,OAAO,OAAcD,GAAUA,EAAOJ,EAAK,EAAGI,EAAOE,OAAQD,IAAMD,CACvE,C,qBCSA,SAASG,EAAaC,EAAU1C,EAAWsC,EAAQK,EAAQC,EAAWC,IAVtE,SAAwBH,EAAUE,EAAWC,GACzC,IAAK,IAAIN,EAAI,EAAGA,EAAIG,EAASF,OAAQD,IAAK,CACtC,MAAMO,EAAWJ,EAASH,GACtBO,EAASC,GAAKH,GAAaE,EAASC,GAAKF,KACzC,QAAWH,EAAUI,GAErBP,IAER,CACJ,CAOIS,CAAeN,EAAUE,EAAWC,GACpC,IAAK,IAAIN,EAAI,EAAGA,EAAIvC,EAAUwC,OAAQD,IAClCG,EAASO,KAAK,CACVzC,MAAOR,EAAUuC,GACjBQ,IAAI,OAAUH,EAAWC,EAASF,EAAOJ,IACzCD,OAAQD,EAAoBC,EAAQC,IAGhD,CC5BA,SAASW,EAAcC,EAAGC,GACtB,OAAID,EAAEJ,KAAOK,EAAEL,GACK,OAAZI,EAAE3C,MACK,EACK,OAAZ4C,EAAE5C,OACM,EACL,EAGA2C,EAAEJ,GAAKK,EAAEL,EAExB,CCCA,MAAMM,EAAuB,YAkM7B,SAASC,EAAmB7B,EAAS8B,GAEjC,OADCA,EAAUC,IAAI/B,IAAY8B,EAAUE,IAAIhC,EAAS,CAAC,GAC5C8B,EAAUtB,IAAIR,EACzB,CACA,SAASiC,EAAiBC,EAAMJ,GAG5B,OAFKA,EAAUI,KACXJ,EAAUI,GAAQ,IACfJ,EAAUI,EACrB,CACA,SAASC,EAAgB5D,GACrB,OAAOoB,MAAMG,QAAQvB,GAAaA,EAAY,CAACA,EACnD,CACA,SAAS6D,EAAmBC,EAAYC,GACpC,OAAOD,EAAWC,GACZ,IACKD,KACAA,EAAWC,IAEhB,IAAKD,EACf,CACA,MAAME,EAAYlB,GAAiC,iBAAbA,EAChCmB,EAA0BjE,GAAcA,EAAUkE,MAAMF,G,yEC7N9D,MAAMG,UAA4BC,EAAA,EAC9BC,cACIC,SAASC,WACTC,KAAKpE,KAAO,QAChB,CACAqE,sBAAsBC,EAAUX,GAC5B,GATR,SAAqBA,EAAKY,GACtB,OAAOZ,KAAOY,CAClB,CAOYC,CAAYb,EAAKW,GAAW,CAC5B,MAAMlE,EAAQkE,EAASX,GACvB,GAAqB,iBAAVvD,GAAuC,iBAAVA,EACpC,OAAOA,CAEf,CAEJ,CACAqE,yBAEA,CACAC,2BAA2Bf,EAAKgB,UACrBA,EAAYC,OAAOjB,EAC9B,CACAkB,6BACI,OAAO,SACX,CACAC,MAAMH,EAAaI,GACfC,OAAOC,OAAON,EAAYC,OAAQG,EACtC,CACAG,eAAeZ,GAAU,OAAEM,IACvBI,OAAOC,OAAOX,EAAUM,EAC5B,CACAO,2BACI,OAAO,CACX,EC/BJ,SAASC,EAAuBC,GAC5B,MAAM7F,EAAU,CACZ8F,gBAAiB,KACjBC,MAAO,CAAC,EACRC,YAAa,CACTb,YAAa,CACTc,UAAW,CAAC,EACZC,gBAAiB,CAAC,EAClBC,MAAO,CAAC,EACRC,KAAM,CAAC,EACPC,MAAO,CAAC,GAEZd,aAAc,CAAC,IAGjBe,GAAO,OAAaT,GACpB,IAAIU,EAAA,EAAiBvG,GACrB,IAAIwG,EAAA,EAAkBxG,GAC5BsG,EAAKG,MAAMZ,GACX,IAAmBhC,IAAIgC,EAASS,EACpC,CACA,SAASI,EAA0B7E,GAC/B,MAUMyE,EAAO,IAAI/B,EAVD,CACZuB,gBAAiB,KACjBC,MAAO,CAAC,EACRC,YAAa,CACTb,YAAa,CACTC,OAAQ,CAAC,GAEbG,aAAc,CAAC,KAIvBe,EAAKG,MAAM5E,GACX,IAAmBgC,IAAIhC,EAASyE,EACpC,C,aCxBA,SAASK,EAAe9E,EAASzB,EAAWJ,EAASe,GACjD,MAAM6F,EAAa,GACnB,GAVJ,SAAuB/E,EAASzB,GAC5B,OAAQ,IAAAuC,GAAcd,IACC,iBAAZA,GACa,iBAAZA,IAAyBH,EAAetB,EACxD,CAMQyG,CAAchF,EAASzB,GACvBwG,EAAWvD,MAAK,OAAmBxB,EAASH,EAAetB,IACrDA,EAAU0G,SACV1G,EAAWJ,GAAUA,EAAQ8G,SAAqB9G,QAEvD,CACD,MAAM+G,EAAWnF,EAAgBC,EAASzB,EAAWW,GAC/CiG,EAAcD,EAASnE,QAC7B,OAAUxB,QAAQ4F,GAAc,+BAChC,IAAK,IAAIrE,EAAI,EAAGA,EAAIqE,EAAarE,IAAK,CAClC,MAAMsE,EAAcF,EAASpE,GACvBuE,EAAsBD,aAAuB1F,QAC7CqE,EACAc,EACD,IAAmB9C,IAAIqD,IACxBC,EAAoBD,GAExB,MAAME,EAAgB,IAAmB9E,IAAI4E,GACvC/C,EAAa,IAAKlE,GAIpB,UAAWkE,GACiB,mBAArBA,EAAWkD,QAClBlD,EAAWkD,MAAQlD,EAAWkD,MAAMzE,EAAGqE,IAE3CJ,EAAWvD,SAAQ,OAAc8D,EAAe,IAAK/G,EAAW8D,cAAc,CAAC,GACnF,CACJ,CACA,OAAO0C,CACX,CC7CA,SAASS,EAAgBvE,EAAU9C,EAASe,GACxC,MAAM6F,EAAa,GACbU,EJOV,SAAsCxE,GAAU,kBAAEyE,EAAoB,CAAC,KAAMC,GAAuB,CAAC,EAAGzG,EAAO0G,GAC3G,MAAMC,EAAkBH,EAAkBlH,UAAY,GAChDiH,EAAuB,IAAIK,IAC3BhE,EAAY,IAAIgE,IAChBC,EAAe,CAAC,EAChBC,EAAa,IAAIF,IACvB,IAAIG,EAAW,EACXC,EAAc,EACdC,EAAgB,EAMpB,IAAK,IAAIrF,EAAI,EAAGA,EAAIG,EAASF,OAAQD,IAAK,CACtC,MAAMsF,EAAUnF,EAASH,GAIzB,GAAuB,iBAAZsF,EAAsB,CAC7BJ,EAAWhE,IAAIoE,EAASF,GACxB,QACJ,CACK,IAAKvG,MAAMG,QAAQsG,GAAU,CAC9BJ,EAAWhE,IAAIoE,EAAQlE,KAAMhC,EAAagG,EAAaE,EAAQ9E,GAAI2E,EAAUD,IAC7E,QACJ,CACA,IAAKhG,EAASzB,EAAW8D,EAAa,CAAC,GAAK+D,OAKtBC,IAAlBhE,EAAWf,KACX4E,EAAchG,EAAagG,EAAa7D,EAAWf,GAAI2E,EAAUD,IAMrE,IAAIM,EAAc,EAClB,MAAMC,EAAuB,CAACC,EAAgBC,EAAiBC,EAAeC,EAAe,EAAGxB,EAAc,KAC1G,MAAMyB,EAAuBzE,EAAgBqE,IACvC,MAAEjB,EAAQ,EAAC,MAAEsB,GAAQ,OAAcD,GAAqB,KAAEjI,EAAO,eAAgBmI,GAAwBL,EAC/G,IAAI,KAAE7H,EAAO8G,EAAkB9G,MAAQ,UAAS,SAAEJ,GAAaiI,EAI/D,MAAMM,EAAmC,mBAAVxB,EACzBA,EAAMoB,EAAcxB,GACpBI,EAIAyB,EAAeJ,EAAqB7F,OACpC1C,GAAkB,OAAYM,GAC9BA,EACAiH,aAA+C,EAASA,EAAWjH,GACzE,GAAIqI,GAAgB,GAAK3I,EAAiB,CAOtC,IAAI4I,EAAgB,IACpB,GAAqB,IAAjBD,GACAxE,EAAuBoE,GAAuB,CAC9C,MAAMM,EAAQN,EAAqB,GAAKA,EAAqB,GAC7DK,EAAgBxI,KAAK0I,IAAID,EAC7B,CACA,MAAME,EAAmB,IAAKN,QACbT,IAAb7H,IACA4I,EAAiB5I,UAAW,OAAsBA,IAEtD,MAAM6I,EAAenJ,EAAsBkJ,EAAkBH,EAAe5I,GAC5EO,EAAOyI,EAAazI,KACpBJ,EAAW6I,EAAa7I,QAC5B,CACAA,UAAuDA,EAAWqH,GAClE,MAAM1E,EAAY+E,EAAca,EAC1BO,EAAanG,EAAY3C,EAIV,IAAjBqI,EAAM9F,QAA6B,IAAb8F,EAAM,KAC5BA,EAAM,GAAK,GAKf,MAAMU,EAAYV,EAAM9F,OAAS6F,EAAqB7F,OACtDwG,EAAY,IAAK,EAAAC,EAAA,GAAWX,EAAOU,GAMH,IAAhCX,EAAqB7F,QACjB6F,EAAqBa,QAAQ,MAIjCzG,EAAa0F,EAAeE,EAAsBhI,EAAMiI,EAAO1F,EAAWmG,GAC1EhB,EAAc7H,KAAK6B,IAAIyG,EAAkBvI,EAAU8H,GACnDH,EAAgB1H,KAAK6B,IAAIgH,EAAYnB,EAAc,EAEvD,IAAI,IAAArF,GAAcd,GAEduG,EAAqBhI,EAAW8D,EAAYJ,EAAiB,UADrCJ,EAAmB7B,EAAS8B,SAGnD,CACD,MAAMoD,EAAWnF,EAAgBC,EAASzB,EAAWW,EAAO6G,GACtDZ,EAAcD,EAASnE,OAI7B,IAAK,IAAI2G,EAAe,EAAGA,EAAevC,EAAauC,IAAgB,CAMnE,MACMC,EAAkB9F,EADJqD,EAASwC,GAC2B5F,GACxD,IAAK,MAAMQ,KAAO/D,EACdgI,EAAqBhI,EAAU+D,GAAMF,EAAmBC,EAAYC,GAAML,EAAiBK,EAAKqF,GAAkBD,EAAcvC,EAExI,CACJ,CACAc,EAAWC,EACXA,GAAeI,CACnB,CA4DA,OAxDAxE,EAAU8F,SAAQ,CAACC,EAAgB7D,KAC/B,IAAK,MAAM1B,KAAOuF,EAAgB,CAC9B,MAAMnB,EAAgBmB,EAAevF,GAIrCoE,EAAcoB,KAAKrG,GACnB,MAAMlD,EAAY,GACZwJ,EAAc,GACdC,EAAc,GAKpB,IAAK,IAAIlH,EAAI,EAAGA,EAAI4F,EAAc3F,OAAQD,IAAK,CAC3C,MAAM,GAAEQ,EAAE,MAAEvC,EAAK,OAAE8B,GAAW6F,EAAc5F,GAC5CvC,EAAUiD,KAAKzC,GACfgJ,EAAYvG,MAAK,EAAA3C,EAAA,GAAS,EAAGsH,EAAe7E,IAC5C0G,EAAYxG,KAAKX,GAAU,UAC/B,CAMuB,IAAnBkH,EAAY,KACZA,EAAYN,QAAQ,GACpBlJ,EAAUkJ,QAAQlJ,EAAU,IAC5ByJ,EAAYP,QAAQ7F,IAOoB,IAAxCmG,EAAYA,EAAYhH,OAAS,KACjCgH,EAAYvG,KAAK,GACjBjD,EAAUiD,KAAK,OAEdiE,EAAqB1D,IAAIiC,IAC1ByB,EAAqBzD,IAAIgC,EAAS,CAC9BzF,UAAW,CAAC,EACZ8D,WAAY,CAAC,IAGrB,MAAM4F,EAAaxC,EAAqBjF,IAAIwD,GAC5CiE,EAAW1J,UAAU+D,GAAO/D,EAC5B0J,EAAW5F,WAAWC,GAAO,IACtBoD,EACHlH,SAAU2H,EACVvH,KAAMoJ,EACNnB,MAAOkB,KACJpC,EAEX,KAEGF,CACX,CIvMiCyC,CAA6BjH,EAAU9C,EAASe,EAAO,CAAEiJ,OAAM,MAI5F,OAHA1C,EAAqBmC,SAAQ,EAAGrJ,YAAW8D,cAAcrC,KACrD+E,EAAWvD,QAAQsD,EAAe9E,EAASzB,EAAW8D,GAAY,IAE/D0C,CACX,CCAA,SAASqD,EAAoBlJ,GAkBzB,OAdA,SAAuBmJ,EAAmBC,EAAoBnK,GAC1D,IAAI4G,EAAa,GAZzB,IAAoBhG,IAaGsJ,EACXtD,EAbDpF,MAAMG,QAAQf,IAAUY,MAAMG,QAAQf,EAAM,IAa9ByG,EAAgB6C,EAAmBC,EAAoBpJ,GAGvD4F,EAAeuD,EAAmBC,EAAoBnK,EAASe,GAEhF,MAAMqJ,EAAY,IAAIC,EAAA,EAAsBzD,GAI5C,OAHI7F,GACAA,EAAM6F,WAAWvD,KAAK+G,GAEnBA,CACX,CAEJ,CACgBH,IC3BhB,SAASK,IACL,MAAMvJ,GAAQ,QAAY,KAAM,CAC5BM,QAAS,KACTuF,WAAY,OAEV2D,GAAU,QAAY,IAAMN,EAAoBlJ,KCP1D,IAA0ByJ,EDWtB,OCXsBA,EDQL,KACbzJ,EAAM6F,WAAW6C,SAASW,GAAcA,EAAUK,QAAO,GCRtD,IAAAC,YAAU,IAAM,IAAMF,KAAY,IDUlC,CAACzJ,EAAOwJ,EACnB,C,cEZA,MAAMI,EAAiB,IAAIC,QAC3B,IAAIC,EAgBJ,SAASC,GAAa,OAAEC,EAAM,YAAEC,EAAW,cAAEC,IACzC,IAAIhK,EACkC,QAArCA,EAAK0J,EAAetI,IAAI0I,UAA4B,IAAP9J,GAAyBA,EAAGwI,SAASyB,IAC/EA,EAAQ,CACJH,SACAI,YAAaH,EACTI,WACA,OAtBhB,SAAwBL,EAAQE,GAC5B,GAAIA,EAAe,CACf,MAAM,WAAEI,EAAU,UAAEC,GAAcL,EAAc,GAChD,MAAO,CAAEM,MAAOF,EAAYG,OAAQF,EACxC,CACK,OAAIP,aAAkBU,YAAc,YAAaV,EAC3CA,EAAOW,UAGP,CACHH,MAAOR,EAAOY,YACdH,OAAQT,EAAOa,aAG3B,CAQuBC,CAAed,EAAQE,EAClC,GACF,GAEV,CACA,SAASa,GAAUC,GACfA,EAAQtC,QAAQqB,EACpB,CAMA,SAASkB,GAAcjB,EAAQG,GACtBL,GALyB,oBAAnBoB,iBAEXpB,EAAW,IAAIoB,eAAeH,KAK9B,MAAMhL,EAAWD,EAAgBkK,GAUjC,OATAjK,EAAS2I,SAAS5D,IACd,IAAIqG,EAAkBvB,EAAetI,IAAIwD,GACpCqG,IACDA,EAAkB,IAAIC,IACtBxB,EAAe9G,IAAIgC,EAASqG,IAEhCA,EAAgBE,IAAIlB,GACpBL,SAAoDA,EAASwB,QAAQxG,EAAQ,IAE1E,KACH/E,EAAS2I,SAAS5D,IACd,MAAMqG,EAAkBvB,EAAetI,IAAIwD,GAC3CqG,SAAkEA,EAAgBI,OAAOpB,IACnFgB,aAAyD,EAASA,EAAgBd,OACpFP,SAAoDA,EAAS0B,UAAU1G,EAC3E,GACF,CAEV,CC7DA,MAAM2G,GAAkB,IAAIL,IAC5B,IAAIM,GAgBJ,SAASC,GAAalC,GAIlB,OAHAgC,GAAgBJ,IAAI5B,GACfiC,KAhBLA,GAAsB,KAClB,MAAMrB,EAAO,CACTG,MAAOoB,OAAOC,WACdpB,OAAQmB,OAAOE,aAEbC,EAAO,CACT/B,OAAQ4B,OACRvB,OACAD,YAAaC,GAEjBoB,GAAgB/C,SAASe,GAAaA,EAASsC,IAAM,EAEzDH,OAAOI,iBAAiB,SAAUN,KAM3B,KACHD,GAAgBF,OAAO9B,IAClBgC,GAAgBpB,MAAQqB,KACzBA,QAAsBvE,EAC1B,CAER,C,eCrBA,MAAM8E,GAAa,GAWbC,GAAmB,KAAM,CAC3BC,KAAM,EACNC,EAZyB,CACzB9L,QAAS,EACT0B,OAAQ,GACRrC,SAAU,EACV0M,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,gBAAiB,EACjBC,SAAU,GAKVC,EAbyB,CACzBpM,QAAS,EACT0B,OAAQ,GACRrC,SAAU,EACV0M,aAAc,EACdC,aAAc,EACdC,aAAc,EACdC,gBAAiB,EACjBC,SAAU,KAORE,GAAO,CACTP,EAAG,CACCvK,OAAQ,QACR+K,SAAU,QAEdF,EAAG,CACC7K,OAAQ,SACR+K,SAAU,QAGlB,SAASC,GAAe/H,EAASgI,EAAUf,EAAMI,GAC7C,MAAMY,EAAOhB,EAAKe,IACZ,OAAEjL,EAAM,SAAE+K,GAAaD,GAAKG,GAC5B7L,EAAO8L,EAAKzM,QACZyG,EAAWgF,EAAKI,KACtBY,EAAKzM,QAAUwE,EAAQ,SAAS8H,KAChCG,EAAKV,aAAevH,EAAQ,SAASjD,KAAYiD,EAAQ,SAASjD,KAClEkL,EAAK/K,OAAOH,OAAS,EACrBkL,EAAK/K,OAAO,GAAK,EACjB+K,EAAK/K,OAAO,GAAK+K,EAAKV,aACtBU,EAAKpN,UAAW,EAAAA,EAAA,GAAS,EAAGoN,EAAKV,aAAcU,EAAKzM,SACpD,MAAM0M,EAAUb,EAAOpF,EACvBgG,EAAKN,SACDO,EAAUf,GACJ,GACA,QAAkBc,EAAKzM,QAAUW,EAAM+L,EACrD,CChDA,MAAMC,GAAe,CACjBC,MAAO,CACH,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,KAAM,CACF,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,IAAK,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,IAERC,IAAK,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,KCfNC,GAAa,CACfC,MAAO,EACPC,OAAQ,GACRC,IAAK,GAET,SAASC,GAAYC,EAAM9L,EAAQ+L,EAAQ,GACvC,IAAI5F,EAAQ,EAWZ,GANI2F,KAAQL,KACRK,EAAOL,GAAWK,IAKF,iBAATA,EAAmB,CAC1B,MAAME,EAAWxM,WAAWsM,GACxBA,EAAKG,SAAS,MACd9F,EAAQ6F,EAEHF,EAAKG,SAAS,KACnBH,EAAOE,EAAW,IAEbF,EAAKG,SAAS,MACnB9F,EAAS6F,EAAW,IAAOzN,SAAS2N,gBAAgBC,YAE/CL,EAAKG,SAAS,MACnB9F,EAAS6F,EAAW,IAAOzN,SAAS2N,gBAAgBE,aAGpDN,EAAOE,CAEf,CAOA,MAHoB,iBAATF,IACP3F,EAAQnG,EAAS8L,GAEdC,EAAQ5F,CACnB,CCxCA,MAAMkG,GAAgB,CAAC,EAAG,GAC1B,SAASC,GAAcnM,EAAQwK,EAAiBD,EAAc6B,GAC1D,IAAIC,EAAmB5N,MAAMG,QAAQoB,GAAUA,EAASkM,GACpDI,EAAc,EACdC,EAAiB,EAyBrB,MAxBsB,iBAAXvM,EAMPqM,EAAmB,CAACrM,EAAQA,GAEL,iBAAXA,IAGRqM,GAFJrM,EAASA,EAAOwM,QACLC,SAAS,KACGzM,EAAO0M,MAAM,KAQb,CAAC1M,EAAQsL,GAAWtL,GAAUA,EAAS,MAGlEsM,EAAcZ,GAAYW,EAAiB,GAAI9B,EAAc6B,GAC7DG,EAAiBb,GAAYW,EAAiB,GAAI7B,GAC3C8B,EAAcC,CACzB,C,eC1BA,MAAMI,GAAQ,CAAEvC,EAAG,EAAGM,EAAG,GAMzB,SAASkC,GAAeC,EAAW9C,EAAM9M,GACrC,MAAQ+C,OAAQqM,EAAmBpB,GAAaI,KAAQpO,GAClD,OAAE+K,EAAS6E,EAAS,KAAE9B,EAAO,KAAQ9N,EACrC6P,EAAuB,MAAT/B,EAAe,SAAW,QACxCa,EAAQ5D,IAAW6E,EChB7B,SAAmB/J,EAAS+J,GACxB,MAAMjB,EAAQ,CAAExB,EAAG,EAAGM,EAAG,GACzB,IAAIpM,EAAUwE,EACd,KAAOxE,GAAWA,IAAYuO,GAC1B,GAAIvO,aAAmByO,YACnBnB,EAAMxB,GAAK9L,EAAQ0O,WACnBpB,EAAMlB,GAAKpM,EAAQ2O,UACnB3O,EAAUA,EAAQ4O,kBAEjB,GAAwB,QAApB5O,EAAQ6O,QAAmB,CAQhC,MAAMC,EAAiB9O,EAAQ+O,wBAC/B/O,EAAUA,EAAQgP,cAClB,MAAMC,EAAoBjP,EAAQ+O,wBAClCzB,EAAMxB,GAAKgD,EAAeI,KAAOD,EAAkBC,KACnD5B,EAAMlB,GAAK0C,EAAeK,IAAMF,EAAkBE,GACtD,KACK,MAAInP,aAAmBoP,oBAexB,MAf4C,CAC5C,MAAM,EAAEtD,EAAC,EAAEM,GAAMpM,EAAQqK,UACzBiD,EAAMxB,GAAKA,EACXwB,EAAMlB,GAAKA,EACX,IAAIiD,EAAM,KACNC,EAAStP,EAAQuP,WACrB,MAAQF,GACmB,QAAnBC,EAAOT,UACPQ,EAAMC,GAEVA,EAAStP,EAAQuP,WAErBvP,EAAUqP,CACd,CAGA,CAEJ,OAAO/B,CACX,CD1ByCkC,CAAU9F,EAAQ6E,GAAaF,GAM9DoB,EAAa/F,IAAW6E,EACxB,CAAErE,MAAOqE,EAAUmB,YAAavF,OAAQoE,EAAUoB,cAhB5D,SAAuBjG,GACnB,MAAO,YAAaA,GAA6B,QAAnBA,EAAOmF,QAC/BnF,EAAOW,UACP,CAAEH,MAAOR,EAAOgE,YAAavD,OAAQT,EAAOiE,aACtD,CAaUiC,CAAclG,GACdmG,EAAgB,CAClB3F,MAAOqE,EAAUb,YACjBvD,OAAQoE,EAAUZ,cAMtBlC,EAAKgB,GAAM/K,OAAOH,OAAS,EAK3B,IAAIuO,GAAcrE,EAAKgB,GAAMsD,YAC7B,MAAMC,EAAajC,EAAiBxM,OACpC,IAAK,IAAID,EAAI,EAAGA,EAAI0O,EAAY1O,IAAK,CACjC,MAAMI,EAASmM,GAAcE,EAAiBzM,GAAIuO,EAAcrB,GAAciB,EAAWjB,GAAclB,EAAMb,IACxGqD,GAAcpO,IAAW+J,EAAKgB,GAAMwD,oBAAoB3O,KACzDwO,GAAa,GAEjBrE,EAAKgB,GAAM/K,OAAOJ,GAAKI,CAC3B,CAKIoO,IACArE,EAAKgB,GAAMsD,aAAc,EAAAA,GAAA,GAAYtE,EAAKgB,GAAM/K,QAAQ,OAAcqM,IACtEtC,EAAKgB,GAAMwD,oBAAsB,IAAIxE,EAAKgB,GAAM/K,SAEpD+J,EAAKgB,GAAMpN,SAAWoM,EAAKgB,GAAMsD,YAAYtE,EAAKgB,GAAMzM,QAC5D,CEtBA,SAASkQ,GAAsB1L,EAAS2L,EAAU1E,EAAM9M,EAAU,CAAC,GAC/D,MAAO,CACHyR,QAAS,IAhCjB,SAAiB7B,EAAW7E,EAAS6E,EAAW9C,GAM5C,GAFAA,EAAKK,EAAEE,aAAe,EACtBP,EAAKW,EAAEJ,aAAe,EAClBtC,IAAW6E,EAAW,CACtB,IAAItJ,EAAOyE,EACX,KAAOzE,GAAQA,IAASsJ,GACpB9C,EAAKK,EAAEE,cAAgB/G,EAAKyJ,WAC5BjD,EAAKW,EAAEJ,cAAgB/G,EAAK0J,UAC5B1J,EAAOA,EAAK2J,YAEpB,CACAnD,EAAKK,EAAEG,aACHvC,IAAW6E,EAAY7E,EAAOgG,YAAchG,EAAOgE,YACvDjC,EAAKW,EAAEH,aACHvC,IAAW6E,EAAY7E,EAAOiG,aAAejG,EAAOiE,aACxDlC,EAAKK,EAAEI,gBAAkBqC,EAAUb,YACnCjC,EAAKW,EAAEF,gBAAkBqC,EAAUZ,YAUvC,CAGuByC,CAAQ5L,EAAS7F,EAAQ+K,OAAQ+B,GAChD4E,OAASxE,KNYjB,SAA0BrH,EAASiH,EAAMI,GACrCU,GAAe/H,EAAS,IAAKiH,EAAMI,GACnCU,GAAe/H,EAAS,IAAKiH,EAAMI,GACnCJ,EAAKI,KAAOA,CAChB,CMfYyE,CAAiB9L,EAASiH,EAAMI,IAC5BlN,EAAQ+C,QAAU/C,EAAQ+K,SAC1B4E,GAAe9J,EAASiH,EAAM9M,EAClC,EAEJ4R,OAAQ,IAAMJ,EAAS1E,GAE/B,C,eCxCA,MAAM+E,GAAkB,IAAIjH,QACtBkH,GAAkB,IAAIlH,QACtBmH,GAAmB,IAAInH,QACvBoH,GAAkBnM,GAAYA,IAAY1E,SAAS2N,gBAAkBnC,OAAS9G,EACpF,SAASoM,GAAWT,GAAU,UAAE5B,EAAYzO,SAAS2N,mBAAoB9O,GAAY,CAAC,GAClF,IAAIkS,EAAoBH,GAAiB1P,IAAIuN,GAKxCsC,IACDA,EAAoB,IAAI/F,IACxB4F,GAAiBlO,IAAI+L,EAAWsC,IAKpC,MAAMpF,EAAOG,KACPkF,EAAmBZ,GAAsB3B,EAAW4B,EAAU1E,EAAM9M,GAM1E,GALAkS,EAAkB9F,IAAI+F,IAKjBN,GAAgBjO,IAAIgM,GAAY,CACjC,MAAMwC,EAAa,KACf,IAAK,MAAMlH,KAAWgH,EAClBhH,EAAQuG,SAAS,EAEnBY,EAAY,KACd,IAAK,MAAMnH,KAAWgH,EAClBhH,EAAQwG,OAAO,GAAAY,UAAUC,UAC7B,EAEEzG,EAAY,KACd,IAAK,MAAMZ,KAAWgH,EAClBhH,EAAQ0G,QAAQ,EAElBY,EAAW,KACb,MAAMC,KAAKL,GAAY,GAAO,GAC9B,MAAMK,KAAKJ,GAAW,GAAO,GAC7B,MAAMX,OAAO5F,GAAW,GAAO,EAAK,EAExC+F,GAAgBhO,IAAI+L,EAAW4C,GAC/B,MAAMzH,EAASiH,GAAepC,GAC9BjD,OAAOI,iBAAiB,SAAUyF,EAAU,CAAEE,SAAS,IACnD9C,IAAczO,SAAS2N,iBACvBgD,GAAgBjO,IAAI+L,GCjDbpM,EDiD0CgP,EChDrC,mBADRjP,EDiDkCqM,GChDblD,GAAanJ,GAAKyI,GAAczI,EAAGC,KDkDhEuH,EAAOgC,iBAAiB,SAAUyF,EAAU,CAAEE,SAAS,GAC3D,CCpDJ,IAAgBnP,EAAGC,EDqDf,MAAMgP,EAAWX,GAAgBxP,IAAIuN,GAErC,OADA,MAAM6C,KAAKD,GAAU,GAAO,GACrB,KACH,IAAIvR,GACJ,SAAYuR,GAIZ,MAAMG,EAAkBZ,GAAiB1P,IAAIuN,GAC7C,IAAK+C,EACD,OAEJ,GADAA,EAAgBrG,OAAO6F,GACnBQ,EAAgBvH,KAChB,OAIJ,MAAMwH,EAAiBf,GAAgBxP,IAAIuN,GAC3CiC,GAAgBvF,OAAOsD,GACnBgD,IACAZ,GAAepC,GAAWiD,oBAAoB,SAAUD,GACd,QAAzC3R,EAAK6Q,GAAgBzP,IAAIuN,UAA+B,IAAP3O,GAAyBA,IAC3E0L,OAAOkG,oBAAoB,SAAUD,GACzC,CAER,CE/EA,SAASE,GAAgBpB,EAAQqB,GAC7B,IAAIC,EACJ,MAAMC,EAAU,KACZ,MAAM,YAAElL,GAAgBgL,EAElBrS,GAD6B,OAAhBqH,EAAuB,EAAIA,EAAYnH,OAC5B,IAC1BoS,IAAiBtS,GACjBgR,EAAOhR,GAEXsS,EAAetS,CAAQ,EAG3B,OADA,MAAMgR,OAAOuB,GAAS,GACf,KAAM,SAAYA,EAC7B,C,eCAA,MAAMC,GAAgB,IAAIvL,IAC1B,SAASwL,IAAY,OAAEC,EAAM,UAAExD,EAAYzO,SAAS2N,gBAAe,KAAEhB,EAAO,KAAS,CAAC,GAE9EsF,IACAxD,EAAYwD,GACXF,GAActP,IAAIgM,IACnBsD,GAAcrP,IAAI+L,EAAW,CAAC,GAElC,MAAMhI,EAAesL,GAAc7Q,IAAIuN,GAMvC,OALKhI,EAAakG,KACdlG,EAAakG,IAAQ,EAAAuF,GAAA,KACf,IAAIC,eAAe,CAAEF,OAAQxD,EAAW9B,SAtBtD,UAAgC,OAAEsF,EAAM,UAAExD,EAAS,KAAE9B,EAAO,MAEpDsF,IACAxD,EAAYwD,GAEhB,MAAMrL,EAAc,CAAEnH,MAAO,GACvB2S,EAAStB,IAAYnF,IACvB/E,EAAYnH,MAA8B,IAAtBkM,EAAKgB,GAAMpN,QAAc,GAC9C,CAAEkP,YAAW9B,SAChB,MAAO,CAAE/F,cAAawL,SAC1B,CAacC,CAAuB,CAAEJ,OAAQxD,EAAW9B,UAE/ClG,EAAakG,EACxB,CAYA,SAAS2F,GAAqBzT,GAC1B,OAAOA,IAAYA,EAAQ+K,QAAU/K,EAAQ+C,OACjD,CA4BA,SAAS,GAAOyO,GAAU,KAAE1D,EAAO,OAAQ9N,GAAY,CAAC,GACpD,MAAM0T,EAAsB,CAAE5F,UAAS9N,GACvC,MAA2B,mBAAbwR,EA7BlB,SAAwBA,EAAUxR,GAC9B,OAXJ,SAA4BwR,GACxB,OAA2B,IAApBA,EAAS5O,MACpB,CASQ+Q,CAAmBnC,IAAaiC,GAAqBzT,GAC9CiS,IAAYnF,IACf0E,EAAS1E,EAAK9M,EAAQ8N,MAAMpN,SAAUoM,EAAK,GAC5C9M,GAGI8S,GAAgBtB,EAAU2B,GAAYnT,GAErD,CAqBU4T,CAAepC,EAAUkC,GApBnC,SAAyBtJ,EAAWpK,GAChC,GAAIyT,GAAqBzT,GAErB,OADAoK,EAAUyJ,QACH5B,IAAYnF,IACf1C,EAAU8C,KAAO9C,EAAU/J,SAAWyM,EAAK9M,EAAQ8N,MAAMpN,QAAQ,GAClEV,GAEF,CACD,MAAM+S,EAAWI,GAAYnT,GAC7B,OAAOoK,EAAU0J,eAAef,GAAWgB,IACvCA,EAAeF,QACRf,IAAiBpS,IACpBqT,EAAe7G,KAAO6G,EAAe1T,SAAWK,CAAQ,GACzDqS,KAEX,CACJ,CAKUiB,CAAgBxC,EAAUkC,EACpC,C,eCtEA,SAASO,GAAWlQ,EAAMmQ,IACtB,OAAQ9S,SAAS8S,GAAOA,EAAI7S,SAAU,sBAAsB0C,iNAChE,CACA,MAAMoQ,GAA2B,KAAM,CACnCC,SAAS,QAAY,GACrBC,SAAS,QAAY,GACrBC,iBAAiB,QAAY,GAC7BC,iBAAiB,QAAY,KCZjC,MAGMC,GAAYjS,GAHQ,CAACA,GAChBA,GAAkB,iBAANA,GAAkBA,EAAEkS,IAElBC,CAAkBnS,GAAKA,EAAEkS,SAAMvM,E,eCDxD,SAASyM,GAAuBC,EAAQC,GAIpC,MAAMjU,ECcV,SAAwBkU,GACpB,MAAMlU,GAAQ,QAAY,KAAM,QAAYkU,MAMtC,SAAEC,IAAa,IAAAC,YAAWC,GAAA,GAChC,GAAIF,EAAU,CACV,MAAO,CAAEG,IAAa,IAAAC,UAASL,IAC/B,IAAApK,YAAU,IAAM9J,EAAMwU,GAAG,SAAUF,IAAY,GACnD,CACA,OAAOtU,CACX,CD3BkByU,CAAeR,KAOvBS,EAAc,IAAM1U,EAAMiD,IAAIgR,KAkBpC,OAbAS,KAKA,SAA0B,KACtB,MAAMC,EAAiB,IAAM,MAAMC,UAAUF,GAAa,GAAO,GAC3DG,EAAgBb,EAAOc,KAAKnT,GAAMA,EAAE6S,GAAG,SAAUG,KACvD,MAAO,KACHE,EAAchM,SAASkM,GAAgBA,OACvC,SAAYL,EAAY,CAC3B,IAEE1U,CACX,CE7BA,SAASgV,GAAaC,EAAOC,EAAyBC,EAAa/V,GAC/D,GAAqB,mBAAV6V,EACP,OCJR,SAAqBG,GAKjB,KAAoB3U,QAAU,GAC9B2U,IACA,MAAMpV,EAAQ+T,GAAuB,KAAoBtT,QAAS2U,GAKlE,OADA,KAAoB3U,aAAU6G,EACvBtH,CACX,CDTeqV,CAAYJ,GAEvB,MAAMK,EAAiD,mBAA5BJ,EACrBA,EHJV,YAAsBK,GAClB,MAAMC,GAAgB5U,MAAMG,QAAQwU,EAAK,IACnCE,EAAYD,EAAe,GAAK,EAChCE,EAAaH,EAAK,EAAIE,GACtBE,EAAaJ,EAAK,EAAIE,GACtBN,EAAcI,EAAK,EAAIE,GACvBrW,EAAUmW,EAAK,EAAIE,GACnBG,GAAe,EAAApF,GAAA,GAAYmF,EAAYR,EAAa,CACtDU,MAAOjC,GAASuB,EAAY,OACzB/V,IAEP,OAAOoW,EAAeI,EAAaF,GAAcE,CACrD,CGPUvQ,CAAU6P,EAAyBC,EAAa/V,GACtD,OAAOwB,MAAMG,QAAQkU,GACfa,GAAiBb,EAAOK,GACxBQ,GAAiB,CAACb,IAAQ,EAAEc,KAAYT,EAAYS,IAC9D,CACA,SAASD,GAAiB9B,EAAQsB,GAC9B,MAAMS,GAAS,QAAY,IAAM,KACjC,OAAOhC,GAAuBC,GAAQ,KAClC+B,EAAO/T,OAAS,EAChB,MAAMgU,EAAYhC,EAAOhS,OACzB,IAAK,IAAID,EAAI,EAAGA,EAAIiU,EAAWjU,IAC3BgU,EAAOhU,GAAKiS,EAAOjS,GAAGN,MAE1B,OAAO6T,EAAYS,EAAO,GAElC,C,oCEhBA,MAAME,WAAwB,YAC1BC,wBAAwBC,GACpB,MAAMlR,EAAUjB,KAAKmB,MAAMiR,SAAS3V,QACpC,GAAIwE,GAAWkR,EAAUE,YAAcrS,KAAKmB,MAAMkR,UAAW,CACzD,MAAM7L,EAAOxG,KAAKmB,MAAMmR,QAAQ7V,QAChC+J,EAAKI,OAAS3F,EAAQ+F,cAAgB,EACtCR,EAAKG,MAAQ1F,EAAQ8F,aAAe,EACpCP,EAAKoF,IAAM3K,EAAQmK,UACnB5E,EAAKmF,KAAO1K,EAAQkK,UACxB,CACA,OAAO,IACX,CAIAoH,qBAAuB,CACvBC,SACI,OAAOxS,KAAKmB,MAAMsR,QACtB,EAEJ,SAASC,IAAS,SAAED,EAAQ,UAAEJ,IAC1B,MAAMM,GAAK,IAAAC,SACLtD,GAAM,IAAAuD,QAAO,MACbrM,GAAO,IAAAqM,QAAO,CAChBlM,MAAO,EACPC,OAAQ,EACRgF,IAAK,EACLD,KAAM,KAEJ,MAAEmH,IAAU,IAAA1C,YAAWC,GAAA,GAkC7B,OAxBA,IAAA0C,qBAAmB,KACf,MAAM,MAAEpM,EAAK,OAAEC,EAAM,IAAEgF,EAAG,KAAED,GAASnF,EAAK/J,QAC1C,GAAI4V,IAAc/C,EAAI7S,UAAYkK,IAAUC,EACxC,OACJ0I,EAAI7S,QAAQuW,QAAQC,YAAcN,EAClC,MAAMpR,EAAQhF,SAAS2W,cAAc,SAerC,OAdIJ,IACAvR,EAAMuR,MAAQA,GAClBvW,SAAS4W,KAAKC,YAAY7R,GACtBA,EAAM8R,OACN9R,EAAM8R,MAAMC,WAAW,oCACFX,yEAEZhM,wCACCC,qCACHgF,sCACCD,0CAIL,KACHpP,SAAS4W,KAAKI,YAAYhS,EAAM,CACnC,GACF,CAAC8Q,KACI,KAAAmB,KAAIvB,GAAiB,CAAEI,UAAWA,EAAWD,SAAU9C,EAAKgD,QAAS9L,EAAMiM,SAAU,eAAmBA,EAAU,CAAEnD,SAChI,CClEA,MAAMmE,GAAgB,EAAGhB,WAAUvC,UAASmC,YAAWqB,iBAAgBC,SAAQC,wBAAuBC,WAClG,MAAMC,GAAmB,OAAYC,IAC/BpB,GAAK,IAAAC,SACLoB,GAAU,IAAAC,UAAQ,KAAM,CAC1BtB,KACAzC,UACAmC,YACAsB,SACAD,eAAiBQ,IACbJ,EAAiB7U,IAAIiV,GAAS,GAC9B,IAAK,MAAMC,KAAcL,EAAiB9D,SACtC,IAAKmE,EACD,OAERT,GAAkBA,GAAgB,EAEtCU,SAAWF,IACPJ,EAAiB7U,IAAIiV,GAAS,GACvB,IAAMJ,EAAiBpM,OAAOwM,OAQ7CN,EAAwB,CAAClY,KAAK2Y,UAAY,CAAChC,IAiB3C,OAhBA,IAAA4B,UAAQ,KACJH,EAAiBjP,SAAQ,CAACyP,EAAG/U,IAAQuU,EAAiB7U,IAAIM,GAAK,IAAO,GACvE,CAAC8S,IAKJ,aAAgB,MACXA,IACIyB,EAAiBtN,MAClBkN,GACAA,GAAgB,GACrB,CAACrB,IACS,cAATwB,IACApB,GAAW,KAAAe,KAAId,GAAU,CAAEL,UAAWA,EAAWI,SAAUA,MAEvD,KAAAe,KAAIe,GAAA,EAAgBC,SAAU,CAAExY,MAAOgY,EAASvB,SAAUA,GAAY,EAElF,SAASsB,KACL,OAAO,IAAIhR,GACf,C,eCrDA,MAAM0R,GAAeC,GAAUA,EAAMnV,KAAO,GAC5C,SAASoV,GAAalC,GAClB,MAAMmC,EAAW,GAMjB,OAJA,EAAAC,SAAShQ,QAAQ4N,GAAWiC,KACpB,IAAAI,gBAAeJ,IACfE,EAASnW,KAAKiW,EAAM,IAErBE,CACX,CCgCA,MAAMG,GAAkB,EAAGtC,WAAUuC,kBAAiBrB,SAAQzD,WAAU,EAAMwD,iBAAgBE,yBAAwB,EAAMC,OAAO,YAC/H,QAAWmB,EAAiB,4CAK5B,MAAMC,GAAkB,IAAAhB,UAAQ,IAAMU,GAAalC,IAAW,CAACA,IAKzDyC,EAAcD,EAAgBnE,IAAI2D,IAIlCU,GAAkB,IAAAtC,SAAO,GAMzBuC,GAAyB,IAAAvC,QAAOoC,GAIhCI,GAAe,QAAY,IAAM,IAAItS,OAKpCuS,EAAgBC,IAAqB,IAAAhF,UAAS0E,IAC9CO,EAAkBC,IAAuB,IAAAlF,UAAS0E,IACzD,SAA0B,KACtBE,EAAgB1Y,SAAU,EAC1B2Y,EAAuB3Y,QAAUwY,EAIjC,IAAK,IAAIlX,EAAI,EAAGA,EAAIyX,EAAiBxX,OAAQD,IAAK,CAC9C,MAAMwB,EAAMkV,GAAYe,EAAiBzX,IACpCmX,EAAYtK,SAASrL,GAMtB8V,EAAa3N,OAAOnI,IALU,IAA1B8V,EAAa5X,IAAI8B,IACjB8V,EAAapW,IAAIM,GAAK,EAMlC,IACD,CAACiW,EAAkBN,EAAYlX,OAAQkX,EAAYQ,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAIV,IAAoBK,EAAgB,CACpC,IAAIM,EAAe,IAAIX,GAKvB,IAAK,IAAIlX,EAAI,EAAGA,EAAIyX,EAAiBxX,OAAQD,IAAK,CAC9C,MAAM2W,EAAQc,EAAiBzX,GACzBwB,EAAMkV,GAAYC,GACnBQ,EAAYtK,SAASrL,KACtBqW,EAAaC,OAAO9X,EAAG,EAAG2W,GAC1BiB,EAAgBlX,KAAKiW,GAE7B,CAcA,MATa,SAATb,GAAmB8B,EAAgB3X,SACnC4X,EAAeD,GAEnBF,EAAoBd,GAAaiB,SACjCL,EAAkBN,EAMtB,CAWA,MAAM,YAAEa,IAAgB,IAAA1F,YAAW2F,GAAA,GACnC,OAAQ,KAAAvC,KAAI,GAAAwC,SAAU,CAAEvD,SAAU+C,EAAiB1E,KAAK4D,IAChD,MAAMnV,EAAMkV,GAAYC,GAClBrC,EAAY4C,IAAoBO,GAClCN,EAAYtK,SAASrL,GAmBzB,OAAQ,KAAAiU,KAAIC,GAAe,CAAEpB,UAAWA,EAAWnC,UAAUiF,EAAgB1Y,UAAWyT,SAC9E5M,EACOqQ,OAAQtB,OAAY/O,EAAYqQ,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAMH,eAAgBrB,OAAY/O,EApBhI,KACX,IAAI+R,EAAarW,IAAIO,GAIjB,OAHA8V,EAAapW,IAAIM,GAAK,GAK1B,IAAI0W,GAAsB,EAC1BZ,EAAaxQ,SAASqR,IACbA,IACDD,GAAsB,EAAK,IAE/BA,IACAH,SAA0DA,IAC1DL,EAAoBL,EAAuB3Y,SAC3CiX,GAAkBA,IACtB,EAI+JjB,SAAUiC,GAASnV,EAAK,KACzL,ECpJC,SAAS4W,GAAK,GAAsC,IAAtC,SAAEC,GAAkC,EAC/D,MAAM,EAAC7N,EAAC,EAAE8N,IAAQ9F,EAAAA,EAAAA,UAAS,IACrB,EAAC+F,EAAW,EAAEC,IAAkBhG,EAAAA,EAAAA,WAAS,IACzC,EAACiG,EAAS,EAAEC,IAAgBlG,EAAAA,EAAAA,WAAS,IACrC,EAACmG,EAAU,EAAEC,IAAiBpG,EAAAA,EAAAA,WAAS,IACtCqG,EAAeC,GAAqBnR,KAkBrC,QAAE+J,GVlBV,UAAmB,UAAEzE,EAAS,OAAE7E,EAAM,aAAE2Q,GAAe,KAAS1b,GAAY,CAAC,GACzE,MAAM4U,GAAS,OAAYT,IAkB3B,OAjB2BuH,EACrB,KACA,EAAAhR,YACa,KACfuJ,GAAW,SAAUlJ,GACrBkJ,GAAW,YAAarE,GACjB,IAAO,CAAC+L,GAAaxO,IAAGM,QAC3BmH,EAAOR,QAAQvQ,IAAIsJ,EAAE9L,SACrBuT,EAAON,gBAAgBzQ,IAAIsJ,EAAEzM,UAC7BkU,EAAOP,QAAQxQ,IAAI4J,EAAEpM,SACrBuT,EAAOL,gBAAgB1Q,IAAI4J,EAAE/M,SAAS,GACvC,IACIV,EACH4P,WAAYA,aAA6C,EAASA,EAAUvO,eAAY6G,EACxF6C,QAASA,aAAuC,EAASA,EAAO1J,eAAY6G,MAEjF,CAAC0H,EAAW7E,EAAQ6Q,KAAKC,UAAU7b,EAAQ+C,UACvC6R,CACX,CUFsBkH,GACdC,EAAgBnG,GACpBvB,EACA,CAAC,EAAG,IAAK,IAAK,IAAK,KACnB,CAAC,EAAG,GAAK,GAAK,GAAK,IAGrB,OACE2H,EAAAA,cAACC,EAAAA,EAAM,CAACjB,SAAUA,EAAUkB,eAAWhU,GACrC8T,EAAAA,cAAAA,KAAAA,KAAI,aACJA,EAAAA,cAAAA,KAAAA,CAAIzE,GAAG,KAAK,MACZyE,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACT7R,QAAS,CAAE4C,KACXjJ,WAAY,CACV1D,KAAM,SACN6b,OAAQ,GAEVlW,MAAO,CAAEmW,gBAAiB,aAAc/Q,MAAO,gBAE/CyQ,EAAAA,cAAAA,SAAAA,CAAQO,QAAS,IAAMtB,GAAKjZ,GAAQA,EAAO,OAAO,MAAc,iBACjD,IACfga,EAAAA,cAAAA,SAAAA,CAAQO,QAAS,IAAMtB,GAAKjZ,GAAQA,EAAO,OAAO,OAEpDga,EAAAA,cAAAA,KAAAA,CAAIzE,GAAG,KAAK,MACZyE,EAAAA,cAACG,GAAAA,EAAOK,OAAM,CACZC,WAAY,CAAExc,MAAO,KACrBsc,QAAS,IAAMpB,GAAe,IAC/B,SAGDa,EAAAA,cAACrC,GAAe,KACbuB,GACCc,EAAAA,cAACG,GAAAA,EAAOO,OAAM,CACZvW,MAAO,CACLoF,MAAO,QACPC,OAAQ,QACR8Q,gBAAiB,OACjBK,aAAc,QAEhBC,QAAS,IAAMzB,GAAe,GAC9B0B,KAAM3B,EACN4B,SAAU,CACRC,OAAQ,CACNC,QAAS,EACTvP,EAAG,IAELwP,QAAS,CACPD,QAAS,EACTvP,EAAG,IAGPqH,QAAQ,SACRvK,QAAQ,UACR2S,KAAK,UAELlB,EAAAA,cAAAA,IAAAA,KAAG,gBACHA,EAAAA,cAACG,GAAAA,EAAOK,OAAM,CACZC,WAAY,CAAExc,MAAO,KACrBsc,QAAS,IAAMpB,GAAe,IAC/B,WAQPa,EAAAA,cAAAA,KAAAA,CAAIzE,GAAG,KAAK,MACZyE,EAAAA,cAAAA,SAAAA,CAAQO,QAAS,IAAMlB,GAAarZ,IAASA,KAC1CoZ,EAAY,OAAS,SAExBY,EAAAA,cAACrC,GAAe,KACbyB,GACCY,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTe,QAAM,EACNhX,MAAO,CAAEiX,QAAS,OAAQC,IAAK,QAC/BP,SAAU,CACRG,QAAS,CACP/Y,WAAY,CACVoZ,gBAAiB,KAGrBP,OAAQ,CACN7Y,WAAY,CACVoZ,gBAAiB,MAIvBxI,QAAQ,SACRvK,QAAQ,UACR2S,KAAK,UAELlB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTjW,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,EACHuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,GACHuP,QAAS,IAGbG,QAAM,GACP,KAGDnB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTe,QAAM,EACNhX,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,EACHuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,GACHuP,QAAS,KAGd,KAGDhB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTe,QAAM,EACNhX,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,EACHuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,GACHuP,QAAS,KAGd,KAGDhB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTe,QAAM,EACNhX,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,EACHuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,GACHuP,QAAS,KAGd,OAQPhB,EAAAA,cAAAA,KAAAA,CAAIzE,GAAG,KAAK,MACZyE,EAAAA,cAAAA,SAAAA,CAAQO,QAAS,IAAMhB,GAAcvZ,IAASA,KAC3CsZ,EAAa,OAAS,SAEzBU,EAAAA,cAACrC,GAAe,KACb2B,GACCU,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTjW,MAAO,CAAEiX,QAAS,OAAQC,IAAK,QAC/BP,SAAU,CACRG,QAAS,CACP/Y,WAAY,CACVoZ,gBAAiB,KAGrBP,OAAQ,CACN7Y,WAAY,CACVoZ,gBAAiB,MAIvBxI,QAAQ,SACRvK,QAAQ,UACR2S,KAAK,UAELlB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTjW,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,CAAC,EAAG,IAAK,GAAI,GAChBuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,GACHuP,QAAS,KAGd,KAGDhB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTjW,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,CAAC,EAAG,IAAK,GAAI,GAChBuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,CAAC,EAAG,IAAK,GAAI,GAChBuP,QAAS,KAGd,KAGDhB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTjW,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,CAAC,EAAG,IAAK,GAAI,GAChBuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,GACHuP,QAAS,KAGd,KAGDhB,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTjW,MAAO,CAAEoF,MAAO,OAAQC,OAAQ,QAChCsR,SAAU,CACRG,QAAS,CACPxP,EAAG,CAAC,EAAG,IAAK,GAAI,GAChBuP,QAAS,GAEXD,OAAQ,CACNtP,EAAG,GACHuP,QAAS,KAGd,OAQPhB,EAAAA,cAAAA,KAAAA,CAAIzE,GAAG,KAAK,MACZyE,EAAAA,cAACrC,GAAe,KACdqC,EAAAA,cAAAA,OAAAA,CAAM9H,IAAKsH,EAAe+B,SA7QLC,IACzBA,EAAEC,iBACe,IAAIC,SAASF,EAAEG,eACTtb,IAAI,eAEzBoZ,EACE,QACA,CACEmC,QAAS,CAAC,EAAG,GAAI,EAAG,GACpBC,QAAS,CAAC,EAAG,GAAI,EAAG,IAEtB,CACExd,SAAU,IAGhB,GA+PM2b,EAAAA,cAAAA,QAAAA,CACEjY,KAAK,aACLoC,MAAO,CAAEmW,gBAAiB,QAASwB,MAAO,WAE5C9B,EAAAA,cAAAA,SAAAA,KAAQ,QAKZA,EAAAA,cAAAA,KAAAA,CAAIzE,GAAG,KAAK,KAAK,KACjByE,EAAAA,cAACG,GAAAA,EAAOC,IAAG,CACTjW,MAAO,CACLqF,OAAQ,IACRD,MAAO,OACP+Q,gBAAiB,eACjBU,QAASjB,KAKnB,C","sources":["webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/create-generator-easing.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/is-dom-keyframes.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animate/resolve-subjects.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/sequence/utils/calc-time.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/wrap.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/easing/utils/get-easing-for-segment.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/sequence/utils/edit.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/sequence/utils/sort.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/sequence/create.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/object/ObjectVisualElement.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/utils/create-visual-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animate/subject.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animate/sequence.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/animate/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/animation/hooks/use-animate.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/resize/handle-element.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/resize/handle-window.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/info.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/presets.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/edge.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/offset.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/offsets/inset.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/on-scroll-handler.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/track.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/resize/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/render/dom/scroll/index.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-scroll.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/utils/transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-combine-values.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-transform.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/value/use-computed.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://gatsby-starter-blog/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://gatsby-starter-blog/./src/pages/demo.tsx"],"sourcesContent":["import { calcGeneratorDuration, maxGeneratorDuration } from '../../animation/generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds } from '../../utils/time-conversion.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => generator.next(duration * progress).value / scale,\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","function isDOMKeyframes(keyframes) {\n    return typeof keyframes === \"object\" && !Array.isArray(keyframes);\n}\n\nexport { isDOMKeyframes };\n","import { resolveElements } from '../../render/dom/utils/resolve-element.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\n\nfunction resolveSubjects(subject, keyframes, scope, selectorCache) {\n    if (typeof subject === \"string\" && isDOMKeyframes(keyframes)) {\n        return resolveElements(subject, scope, selectorCache);\n    }\n    else if (subject instanceof NodeList) {\n        return Array.from(subject);\n    }\n    else if (Array.isArray(subject)) {\n        return subject;\n    }\n    else {\n        return [subject];\n    }\n}\n\nexport { resolveSubjects };\n","/**\n * Given a absolute or relative time definition and current/prev time state of the sequence,\n * calculate an absolute time for the next keyframes.\n */\nfunction calcNextTime(current, next, prev, labels) {\n    var _a;\n    if (typeof next === \"number\") {\n        return next;\n    }\n    else if (next.startsWith(\"-\") || next.startsWith(\"+\")) {\n        return Math.max(0, current + parseFloat(next));\n    }\n    else if (next === \"<\") {\n        return prev;\n    }\n    else {\n        return (_a = labels.get(next)) !== null && _a !== void 0 ? _a : current;\n    }\n}\n\nexport { calcNextTime };\n","const wrap = (min, max, v) => {\n    const rangeSize = max - min;\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\n};\n\nexport { wrap };\n","import { wrap } from '../../utils/wrap.mjs';\nimport { isEasingArray } from './is-easing-array.mjs';\n\nfunction getEasingForSegment(easing, i) {\n    return isEasingArray(easing) ? easing[wrap(0, easing.length, i)] : easing;\n}\n\nexport { getEasingForSegment };\n","import { getEasingForSegment } from '../../../easing/utils/get-easing-for-segment.mjs';\nimport { removeItem } from '../../../utils/array.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction eraseKeyframes(sequence, startTime, endTime) {\n    for (let i = 0; i < sequence.length; i++) {\n        const keyframe = sequence[i];\n        if (keyframe.at > startTime && keyframe.at < endTime) {\n            removeItem(sequence, keyframe);\n            // If we remove this item we have to push the pointer back one\n            i--;\n        }\n    }\n}\nfunction addKeyframes(sequence, keyframes, easing, offset, startTime, endTime) {\n    /**\n     * Erase every existing value between currentTime and targetTime,\n     * this will essentially splice this timeline into any currently\n     * defined ones.\n     */\n    eraseKeyframes(sequence, startTime, endTime);\n    for (let i = 0; i < keyframes.length; i++) {\n        sequence.push({\n            value: keyframes[i],\n            at: mixNumber(startTime, endTime, offset[i]),\n            easing: getEasingForSegment(easing, i),\n        });\n    }\n}\n\nexport { addKeyframes, eraseKeyframes };\n","function compareByTime(a, b) {\n    if (a.at === b.at) {\n        if (a.value === null)\n            return 1;\n        if (b.value === null)\n            return -1;\n        return 0;\n    }\n    else {\n        return a.at - b.at;\n    }\n}\n\nexport { compareByTime };\n","import { createGeneratorEasing } from '../../easing/utils/create-generator-easing.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { fillOffset } from '../../utils/offsets/fill.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { resolveSubjects } from '../animate/resolve-subjects.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { calcNextTime } from './utils/calc-time.mjs';\nimport { addKeyframes } from './utils/edit.mjs';\nimport { compareByTime } from './utils/sort.mjs';\n\nconst defaultSegmentEasing = \"easeInOut\";\nfunction createAnimationsFromSequence(sequence, { defaultTransition = {}, ...sequenceTransition } = {}, scope, generators) {\n    const defaultDuration = defaultTransition.duration || 0.3;\n    const animationDefinitions = new Map();\n    const sequences = new Map();\n    const elementCache = {};\n    const timeLabels = new Map();\n    let prevTime = 0;\n    let currentTime = 0;\n    let totalDuration = 0;\n    /**\n     * Build the timeline by mapping over the sequence array and converting\n     * the definitions into keyframes and offsets with absolute time values.\n     * These will later get converted into relative offsets in a second pass.\n     */\n    for (let i = 0; i < sequence.length; i++) {\n        const segment = sequence[i];\n        /**\n         * If this is a timeline label, mark it and skip the rest of this iteration.\n         */\n        if (typeof segment === \"string\") {\n            timeLabels.set(segment, currentTime);\n            continue;\n        }\n        else if (!Array.isArray(segment)) {\n            timeLabels.set(segment.name, calcNextTime(currentTime, segment.at, prevTime, timeLabels));\n            continue;\n        }\n        let [subject, keyframes, transition = {}] = segment;\n        /**\n         * If a relative or absolute time value has been specified we need to resolve\n         * it in relation to the currentTime.\n         */\n        if (transition.at !== undefined) {\n            currentTime = calcNextTime(currentTime, transition.at, prevTime, timeLabels);\n        }\n        /**\n         * Keep track of the maximum duration in this definition. This will be\n         * applied to currentTime once the definition has been parsed.\n         */\n        let maxDuration = 0;\n        const resolveValueSequence = (valueKeyframes, valueTransition, valueSequence, elementIndex = 0, numSubjects = 0) => {\n            const valueKeyframesAsList = keyframesAsList(valueKeyframes);\n            const { delay = 0, times = defaultOffset(valueKeyframesAsList), type = \"keyframes\", ...remainingTransition } = valueTransition;\n            let { ease = defaultTransition.ease || \"easeOut\", duration } = valueTransition;\n            /**\n             * Resolve stagger() if defined.\n             */\n            const calculatedDelay = typeof delay === \"function\"\n                ? delay(elementIndex, numSubjects)\n                : delay;\n            /**\n             * If this animation should and can use a spring, generate a spring easing function.\n             */\n            const numKeyframes = valueKeyframesAsList.length;\n            const createGenerator = isGenerator(type)\n                ? type\n                : generators === null || generators === void 0 ? void 0 : generators[type];\n            if (numKeyframes <= 2 && createGenerator) {\n                /**\n                 * As we're creating an easing function from a spring,\n                 * ideally we want to generate it using the real distance\n                 * between the two keyframes. However this isn't always\n                 * possible - in these situations we use 0-100.\n                 */\n                let absoluteDelta = 100;\n                if (numKeyframes === 2 &&\n                    isNumberKeyframesArray(valueKeyframesAsList)) {\n                    const delta = valueKeyframesAsList[1] - valueKeyframesAsList[0];\n                    absoluteDelta = Math.abs(delta);\n                }\n                const springTransition = { ...remainingTransition };\n                if (duration !== undefined) {\n                    springTransition.duration = secondsToMilliseconds(duration);\n                }\n                const springEasing = createGeneratorEasing(springTransition, absoluteDelta, createGenerator);\n                ease = springEasing.ease;\n                duration = springEasing.duration;\n            }\n            duration !== null && duration !== void 0 ? duration : (duration = defaultDuration);\n            const startTime = currentTime + calculatedDelay;\n            const targetTime = startTime + duration;\n            /**\n             * If there's only one time offset of 0, fill in a second with length 1\n             */\n            if (times.length === 1 && times[0] === 0) {\n                times[1] = 1;\n            }\n            /**\n             * Fill out if offset if fewer offsets than keyframes\n             */\n            const remainder = times.length - valueKeyframesAsList.length;\n            remainder > 0 && fillOffset(times, remainder);\n            /**\n             * If only one value has been set, ie [1], push a null to the start of\n             * the keyframe array. This will let us mark a keyframe at this point\n             * that will later be hydrated with the previous value.\n             */\n            valueKeyframesAsList.length === 1 &&\n                valueKeyframesAsList.unshift(null);\n            /**\n             * Add keyframes, mapping offsets to absolute time.\n             */\n            addKeyframes(valueSequence, valueKeyframesAsList, ease, times, startTime, targetTime);\n            maxDuration = Math.max(calculatedDelay + duration, maxDuration);\n            totalDuration = Math.max(targetTime, totalDuration);\n        };\n        if (isMotionValue(subject)) {\n            const subjectSequence = getSubjectSequence(subject, sequences);\n            resolveValueSequence(keyframes, transition, getValueSequence(\"default\", subjectSequence));\n        }\n        else {\n            const subjects = resolveSubjects(subject, keyframes, scope, elementCache);\n            const numSubjects = subjects.length;\n            /**\n             * For every element in this segment, process the defined values.\n             */\n            for (let subjectIndex = 0; subjectIndex < numSubjects; subjectIndex++) {\n                /**\n                 * Cast necessary, but we know these are of this type\n                 */\n                keyframes = keyframes;\n                transition = transition;\n                const thisSubject = subjects[subjectIndex];\n                const subjectSequence = getSubjectSequence(thisSubject, sequences);\n                for (const key in keyframes) {\n                    resolveValueSequence(keyframes[key], getValueTransition(transition, key), getValueSequence(key, subjectSequence), subjectIndex, numSubjects);\n                }\n            }\n        }\n        prevTime = currentTime;\n        currentTime += maxDuration;\n    }\n    /**\n     * For every element and value combination create a new animation.\n     */\n    sequences.forEach((valueSequences, element) => {\n        for (const key in valueSequences) {\n            const valueSequence = valueSequences[key];\n            /**\n             * Arrange all the keyframes in ascending time order.\n             */\n            valueSequence.sort(compareByTime);\n            const keyframes = [];\n            const valueOffset = [];\n            const valueEasing = [];\n            /**\n             * For each keyframe, translate absolute times into\n             * relative offsets based on the total duration of the timeline.\n             */\n            for (let i = 0; i < valueSequence.length; i++) {\n                const { at, value, easing } = valueSequence[i];\n                keyframes.push(value);\n                valueOffset.push(progress(0, totalDuration, at));\n                valueEasing.push(easing || \"easeOut\");\n            }\n            /**\n             * If the first keyframe doesn't land on offset: 0\n             * provide one by duplicating the initial keyframe. This ensures\n             * it snaps to the first keyframe when the animation starts.\n             */\n            if (valueOffset[0] !== 0) {\n                valueOffset.unshift(0);\n                keyframes.unshift(keyframes[0]);\n                valueEasing.unshift(defaultSegmentEasing);\n            }\n            /**\n             * If the last keyframe doesn't land on offset: 1\n             * provide one with a null wildcard value. This will ensure it\n             * stays static until the end of the animation.\n             */\n            if (valueOffset[valueOffset.length - 1] !== 1) {\n                valueOffset.push(1);\n                keyframes.push(null);\n            }\n            if (!animationDefinitions.has(element)) {\n                animationDefinitions.set(element, {\n                    keyframes: {},\n                    transition: {},\n                });\n            }\n            const definition = animationDefinitions.get(element);\n            definition.keyframes[key] = keyframes;\n            definition.transition[key] = {\n                ...defaultTransition,\n                duration: totalDuration,\n                ease: valueEasing,\n                times: valueOffset,\n                ...sequenceTransition,\n            };\n        }\n    });\n    return animationDefinitions;\n}\nfunction getSubjectSequence(subject, sequences) {\n    !sequences.has(subject) && sequences.set(subject, {});\n    return sequences.get(subject);\n}\nfunction getValueSequence(name, sequences) {\n    if (!sequences[name])\n        sequences[name] = [];\n    return sequences[name];\n}\nfunction keyframesAsList(keyframes) {\n    return Array.isArray(keyframes) ? keyframes : [keyframes];\n}\nfunction getValueTransition(transition, key) {\n    return transition[key]\n        ? {\n            ...transition,\n            ...transition[key],\n        }\n        : { ...transition };\n}\nconst isNumber = (keyframe) => typeof keyframe === \"number\";\nconst isNumberKeyframesArray = (keyframes) => keyframes.every(isNumber);\n\nexport { createAnimationsFromSequence, getValueTransition };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nfunction isObjectKey(key, object) {\n    return key in object;\n}\nclass ObjectVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"object\";\n    }\n    readValueFromInstance(instance, key) {\n        if (isObjectKey(key, instance)) {\n            const value = instance[key];\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    getBaseTargetFromProps() {\n        return undefined;\n    }\n    removeValueFromRenderState(key, renderState) {\n        delete renderState.output[key];\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    build(renderState, latestValues) {\n        Object.assign(renderState.output, latestValues);\n    }\n    renderInstance(instance, { output }) {\n        Object.assign(instance, output);\n    }\n    sortInstanceNodePosition() {\n        return 0;\n    }\n}\n\nexport { ObjectVisualElement };\n","import { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { SVGVisualElement } from '../../render/svg/SVGVisualElement.mjs';\nimport { HTMLVisualElement } from '../../render/html/HTMLVisualElement.mjs';\nimport { visualElementStore } from '../../render/store.mjs';\nimport { ObjectVisualElement } from '../../render/object/ObjectVisualElement.mjs';\n\nfunction createDOMVisualElement(element) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                transform: {},\n                transformOrigin: {},\n                style: {},\n                vars: {},\n                attrs: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = isSVGElement(element)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options);\n    node.mount(element);\n    visualElementStore.set(element, node);\n}\nfunction createObjectVisualElement(subject) {\n    const options = {\n        presenceContext: null,\n        props: {},\n        visualState: {\n            renderState: {\n                output: {},\n            },\n            latestValues: {},\n        },\n    };\n    const node = new ObjectVisualElement(options);\n    node.mount(subject);\n    visualElementStore.set(subject, node);\n}\n\nexport { createDOMVisualElement, createObjectVisualElement };\n","import { visualElementStore } from '../../render/store.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateTarget } from '../interfaces/visual-element-target.mjs';\nimport { createDOMVisualElement, createObjectVisualElement } from '../utils/create-visual-element.mjs';\nimport { isDOMKeyframes } from '../utils/is-dom-keyframes.mjs';\nimport { resolveSubjects } from './resolve-subjects.mjs';\nimport { animateSingleValue } from './single-value.mjs';\n\nfunction isSingleValue(subject, keyframes) {\n    return (isMotionValue(subject) ||\n        typeof subject === \"number\" ||\n        (typeof subject === \"string\" && !isDOMKeyframes(keyframes)));\n}\n/**\n * Implementation\n */\nfunction animateSubject(subject, keyframes, options, scope) {\n    const animations = [];\n    if (isSingleValue(subject, keyframes)) {\n        animations.push(animateSingleValue(subject, isDOMKeyframes(keyframes)\n            ? keyframes.default || keyframes\n            : keyframes, options ? options.default || options : options));\n    }\n    else {\n        const subjects = resolveSubjects(subject, keyframes, scope);\n        const numSubjects = subjects.length;\n        invariant(Boolean(numSubjects), \"No valid elements provided.\");\n        for (let i = 0; i < numSubjects; i++) {\n            const thisSubject = subjects[i];\n            const createVisualElement = thisSubject instanceof Element\n                ? createDOMVisualElement\n                : createObjectVisualElement;\n            if (!visualElementStore.has(thisSubject)) {\n                createVisualElement(thisSubject);\n            }\n            const visualElement = visualElementStore.get(thisSubject);\n            const transition = { ...options };\n            /**\n             * Resolve stagger function if provided.\n             */\n            if (\"delay\" in transition &&\n                typeof transition.delay === \"function\") {\n                transition.delay = transition.delay(i, numSubjects);\n            }\n            animations.push(...animateTarget(visualElement, { ...keyframes, transition }, {}));\n        }\n    }\n    return animations;\n}\n\nexport { animateSubject };\n","import { spring } from '../generators/spring/index.mjs';\nimport { createAnimationsFromSequence } from '../sequence/create.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction animateSequence(sequence, options, scope) {\n    const animations = [];\n    const animationDefinitions = createAnimationsFromSequence(sequence, options, scope, { spring });\n    animationDefinitions.forEach(({ keyframes, transition }, subject) => {\n        animations.push(...animateSubject(subject, keyframes, transition));\n    });\n    return animations;\n}\n\nexport { animateSequence };\n","import { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { animateSequence } from './sequence.mjs';\nimport { animateSubject } from './subject.mjs';\n\nfunction isSequence(value) {\n    return Array.isArray(value) && Array.isArray(value[0]);\n}\n/**\n * Creates an animation function that is optionally scoped\n * to a specific element.\n */\nfunction createScopedAnimate(scope) {\n    /**\n     * Implementation\n     */\n    function scopedAnimate(subjectOrSequence, optionsOrKeyframes, options) {\n        let animations = [];\n        if (isSequence(subjectOrSequence)) {\n            animations = animateSequence(subjectOrSequence, optionsOrKeyframes, scope);\n        }\n        else {\n            animations = animateSubject(subjectOrSequence, optionsOrKeyframes, options, scope);\n        }\n        const animation = new GroupPlaybackControls(animations);\n        if (scope) {\n            scope.animations.push(animation);\n        }\n        return animation;\n    }\n    return scopedAnimate;\n}\nconst animate = createScopedAnimate();\n\nexport { animate, createScopedAnimate };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { createScopedAnimate } from '../animate/index.mjs';\n\nfunction useAnimate() {\n    const scope = useConstant(() => ({\n        current: null, // Will be hydrated by React\n        animations: [],\n    }));\n    const animate = useConstant(() => createScopedAnimate(scope));\n    useUnmountEffect(() => {\n        scope.animations.forEach((animation) => animation.stop());\n    });\n    return [scope, animate];\n}\n\nexport { useAnimate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst resizeHandlers = new WeakMap();\nlet observer;\nfunction getElementSize(target, borderBoxSize) {\n    if (borderBoxSize) {\n        const { inlineSize, blockSize } = borderBoxSize[0];\n        return { width: inlineSize, height: blockSize };\n    }\n    else if (target instanceof SVGElement && \"getBBox\" in target) {\n        return target.getBBox();\n    }\n    else {\n        return {\n            width: target.offsetWidth,\n            height: target.offsetHeight,\n        };\n    }\n}\nfunction notifyTarget({ target, contentRect, borderBoxSize, }) {\n    var _a;\n    (_a = resizeHandlers.get(target)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => {\n        handler({\n            target,\n            contentSize: contentRect,\n            get size() {\n                return getElementSize(target, borderBoxSize);\n            },\n        });\n    });\n}\nfunction notifyAll(entries) {\n    entries.forEach(notifyTarget);\n}\nfunction createResizeObserver() {\n    if (typeof ResizeObserver === \"undefined\")\n        return;\n    observer = new ResizeObserver(notifyAll);\n}\nfunction resizeElement(target, handler) {\n    if (!observer)\n        createResizeObserver();\n    const elements = resolveElements(target);\n    elements.forEach((element) => {\n        let elementHandlers = resizeHandlers.get(element);\n        if (!elementHandlers) {\n            elementHandlers = new Set();\n            resizeHandlers.set(element, elementHandlers);\n        }\n        elementHandlers.add(handler);\n        observer === null || observer === void 0 ? void 0 : observer.observe(element);\n    });\n    return () => {\n        elements.forEach((element) => {\n            const elementHandlers = resizeHandlers.get(element);\n            elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.delete(handler);\n            if (!(elementHandlers === null || elementHandlers === void 0 ? void 0 : elementHandlers.size)) {\n                observer === null || observer === void 0 ? void 0 : observer.unobserve(element);\n            }\n        });\n    };\n}\n\nexport { resizeElement };\n","const windowCallbacks = new Set();\nlet windowResizeHandler;\nfunction createWindowResizeHandler() {\n    windowResizeHandler = () => {\n        const size = {\n            width: window.innerWidth,\n            height: window.innerHeight,\n        };\n        const info = {\n            target: window,\n            size,\n            contentSize: size,\n        };\n        windowCallbacks.forEach((callback) => callback(info));\n    };\n    window.addEventListener(\"resize\", windowResizeHandler);\n}\nfunction resizeWindow(callback) {\n    windowCallbacks.add(callback);\n    if (!windowResizeHandler)\n        createWindowResizeHandler();\n    return () => {\n        windowCallbacks.delete(callback);\n        if (!windowCallbacks.size && windowResizeHandler) {\n            windowResizeHandler = undefined;\n        }\n    };\n}\n\nexport { resizeWindow };\n","import { progress } from '../../../utils/progress.mjs';\nimport { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\n/**\n * A time in milliseconds, beyond which we consider the scroll velocity to be 0.\n */\nconst maxElapsed = 50;\nconst createAxisInfo = () => ({\n    current: 0,\n    offset: [],\n    progress: 0,\n    scrollLength: 0,\n    targetOffset: 0,\n    targetLength: 0,\n    containerLength: 0,\n    velocity: 0,\n});\nconst createScrollInfo = () => ({\n    time: 0,\n    x: createAxisInfo(),\n    y: createAxisInfo(),\n});\nconst keys = {\n    x: {\n        length: \"Width\",\n        position: \"Left\",\n    },\n    y: {\n        length: \"Height\",\n        position: \"Top\",\n    },\n};\nfunction updateAxisInfo(element, axisName, info, time) {\n    const axis = info[axisName];\n    const { length, position } = keys[axisName];\n    const prev = axis.current;\n    const prevTime = info.time;\n    axis.current = element[`scroll${position}`];\n    axis.scrollLength = element[`scroll${length}`] - element[`client${length}`];\n    axis.offset.length = 0;\n    axis.offset[0] = 0;\n    axis.offset[1] = axis.scrollLength;\n    axis.progress = progress(0, axis.scrollLength, axis.current);\n    const elapsed = time - prevTime;\n    axis.velocity =\n        elapsed > maxElapsed\n            ? 0\n            : velocityPerSecond(axis.current - prev, elapsed);\n}\nfunction updateScrollInfo(element, info, time) {\n    updateAxisInfo(element, \"x\", info, time);\n    updateAxisInfo(element, \"y\", info, time);\n    info.time = time;\n}\n\nexport { createScrollInfo, updateScrollInfo };\n","const ScrollOffset = {\n    Enter: [\n        [0, 1],\n        [1, 1],\n    ],\n    Exit: [\n        [0, 0],\n        [1, 0],\n    ],\n    Any: [\n        [1, 0],\n        [0, 1],\n    ],\n    All: [\n        [0, 0],\n        [1, 1],\n    ],\n};\n\nexport { ScrollOffset };\n","const namedEdges = {\n    start: 0,\n    center: 0.5,\n    end: 1,\n};\nfunction resolveEdge(edge, length, inset = 0) {\n    let delta = 0;\n    /**\n     * If we have this edge defined as a preset, replace the definition\n     * with the numerical value.\n     */\n    if (edge in namedEdges) {\n        edge = namedEdges[edge];\n    }\n    /**\n     * Handle unit values\n     */\n    if (typeof edge === \"string\") {\n        const asNumber = parseFloat(edge);\n        if (edge.endsWith(\"px\")) {\n            delta = asNumber;\n        }\n        else if (edge.endsWith(\"%\")) {\n            edge = asNumber / 100;\n        }\n        else if (edge.endsWith(\"vw\")) {\n            delta = (asNumber / 100) * document.documentElement.clientWidth;\n        }\n        else if (edge.endsWith(\"vh\")) {\n            delta = (asNumber / 100) * document.documentElement.clientHeight;\n        }\n        else {\n            edge = asNumber;\n        }\n    }\n    /**\n     * If the edge is defined as a number, handle as a progress value.\n     */\n    if (typeof edge === \"number\") {\n        delta = length * edge;\n    }\n    return inset + delta;\n}\n\nexport { namedEdges, resolveEdge };\n","import { resolveEdge, namedEdges } from './edge.mjs';\n\nconst defaultOffset = [0, 0];\nfunction resolveOffset(offset, containerLength, targetLength, targetInset) {\n    let offsetDefinition = Array.isArray(offset) ? offset : defaultOffset;\n    let targetPoint = 0;\n    let containerPoint = 0;\n    if (typeof offset === \"number\") {\n        /**\n         * If we're provided offset: [0, 0.5, 1] then each number x should become\n         * [x, x], so we default to the behaviour of mapping 0 => 0 of both target\n         * and container etc.\n         */\n        offsetDefinition = [offset, offset];\n    }\n    else if (typeof offset === \"string\") {\n        offset = offset.trim();\n        if (offset.includes(\" \")) {\n            offsetDefinition = offset.split(\" \");\n        }\n        else {\n            /**\n             * If we're provided a definition like \"100px\" then we want to apply\n             * that only to the top of the target point, leaving the container at 0.\n             * Whereas a named offset like \"end\" should be applied to both.\n             */\n            offsetDefinition = [offset, namedEdges[offset] ? offset : `0`];\n        }\n    }\n    targetPoint = resolveEdge(offsetDefinition[0], targetLength, targetInset);\n    containerPoint = resolveEdge(offsetDefinition[1], containerLength);\n    return targetPoint - containerPoint;\n}\n\nexport { resolveOffset };\n","import { calcInset } from './inset.mjs';\nimport { ScrollOffset } from './presets.mjs';\nimport { resolveOffset } from './offset.mjs';\nimport { interpolate } from '../../../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../../../utils/offsets/default.mjs';\n\nconst point = { x: 0, y: 0 };\nfunction getTargetSize(target) {\n    return \"getBBox\" in target && target.tagName !== \"svg\"\n        ? target.getBBox()\n        : { width: target.clientWidth, height: target.clientHeight };\n}\nfunction resolveOffsets(container, info, options) {\n    const { offset: offsetDefinition = ScrollOffset.All } = options;\n    const { target = container, axis = \"y\" } = options;\n    const lengthLabel = axis === \"y\" ? \"height\" : \"width\";\n    const inset = target !== container ? calcInset(target, container) : point;\n    /**\n     * Measure the target and container. If they're the same thing then we\n     * use the container's scrollWidth/Height as the target, from there\n     * all other calculations can remain the same.\n     */\n    const targetSize = target === container\n        ? { width: container.scrollWidth, height: container.scrollHeight }\n        : getTargetSize(target);\n    const containerSize = {\n        width: container.clientWidth,\n        height: container.clientHeight,\n    };\n    /**\n     * Reset the length of the resolved offset array rather than creating a new one.\n     * TODO: More reusable data structures for targetSize/containerSize would also be good.\n     */\n    info[axis].offset.length = 0;\n    /**\n     * Populate the offset array by resolving the user's offset definition into\n     * a list of pixel scroll offets.\n     */\n    let hasChanged = !info[axis].interpolate;\n    const numOffsets = offsetDefinition.length;\n    for (let i = 0; i < numOffsets; i++) {\n        const offset = resolveOffset(offsetDefinition[i], containerSize[lengthLabel], targetSize[lengthLabel], inset[axis]);\n        if (!hasChanged && offset !== info[axis].interpolatorOffsets[i]) {\n            hasChanged = true;\n        }\n        info[axis].offset[i] = offset;\n    }\n    /**\n     * If the pixel scroll offsets have changed, create a new interpolator function\n     * to map scroll value into a progress.\n     */\n    if (hasChanged) {\n        info[axis].interpolate = interpolate(info[axis].offset, defaultOffset(offsetDefinition));\n        info[axis].interpolatorOffsets = [...info[axis].offset];\n    }\n    info[axis].progress = info[axis].interpolate(info[axis].current);\n}\n\nexport { resolveOffsets };\n","function calcInset(element, container) {\n    const inset = { x: 0, y: 0 };\n    let current = element;\n    while (current && current !== container) {\n        if (current instanceof HTMLElement) {\n            inset.x += current.offsetLeft;\n            inset.y += current.offsetTop;\n            current = current.offsetParent;\n        }\n        else if (current.tagName === \"svg\") {\n            /**\n             * This isn't an ideal approach to measuring the offset of <svg /> tags.\n             * It would be preferable, given they behave like HTMLElements in most ways\n             * to use offsetLeft/Top. But these don't exist on <svg />. Likewise we\n             * can't use .getBBox() like most SVG elements as these provide the offset\n             * relative to the SVG itself, which for <svg /> is usually 0x0.\n             */\n            const svgBoundingBox = current.getBoundingClientRect();\n            current = current.parentElement;\n            const parentBoundingBox = current.getBoundingClientRect();\n            inset.x += svgBoundingBox.left - parentBoundingBox.left;\n            inset.y += svgBoundingBox.top - parentBoundingBox.top;\n        }\n        else if (current instanceof SVGGraphicsElement) {\n            const { x, y } = current.getBBox();\n            inset.x += x;\n            inset.y += y;\n            let svg = null;\n            let parent = current.parentNode;\n            while (!svg) {\n                if (parent.tagName === \"svg\") {\n                    svg = parent;\n                }\n                parent = current.parentNode;\n            }\n            current = svg;\n        }\n        else {\n            break;\n        }\n    }\n    return inset;\n}\n\nexport { calcInset };\n","import { warnOnce } from '../../../utils/warn-once.mjs';\nimport { updateScrollInfo } from './info.mjs';\nimport { resolveOffsets } from './offsets/index.mjs';\n\nfunction measure(container, target = container, info) {\n    /**\n     * Find inset of target within scrollable container\n     */\n    info.x.targetOffset = 0;\n    info.y.targetOffset = 0;\n    if (target !== container) {\n        let node = target;\n        while (node && node !== container) {\n            info.x.targetOffset += node.offsetLeft;\n            info.y.targetOffset += node.offsetTop;\n            node = node.offsetParent;\n        }\n    }\n    info.x.targetLength =\n        target === container ? target.scrollWidth : target.clientWidth;\n    info.y.targetLength =\n        target === container ? target.scrollHeight : target.clientHeight;\n    info.x.containerLength = container.clientWidth;\n    info.y.containerLength = container.clientHeight;\n    /**\n     * In development mode ensure scroll containers aren't position: static as this makes\n     * it difficult to measure their relative positions.\n     */\n    if (process.env.NODE_ENV !== \"production\") {\n        if (container && target && target !== container) {\n            warnOnce(getComputedStyle(container).position !== \"static\", \"Please ensure that the container has a non-static position, like 'relative', 'fixed', or 'absolute' to ensure scroll offset is calculated correctly.\");\n        }\n    }\n}\nfunction createOnScrollHandler(element, onScroll, info, options = {}) {\n    return {\n        measure: () => measure(element, options.target, info),\n        update: (time) => {\n            updateScrollInfo(element, info, time);\n            if (options.offset || options.target) {\n                resolveOffsets(element, info, options);\n            }\n        },\n        notify: () => onScroll(info),\n    };\n}\n\nexport { createOnScrollHandler };\n","import { resize } from '../resize/index.mjs';\nimport { createScrollInfo } from './info.mjs';\nimport { createOnScrollHandler } from './on-scroll-handler.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst scrollListeners = new WeakMap();\nconst resizeListeners = new WeakMap();\nconst onScrollHandlers = new WeakMap();\nconst getEventTarget = (element) => element === document.documentElement ? window : element;\nfunction scrollInfo(onScroll, { container = document.documentElement, ...options } = {}) {\n    let containerHandlers = onScrollHandlers.get(container);\n    /**\n     * Get the onScroll handlers for this container.\n     * If one isn't found, create a new one.\n     */\n    if (!containerHandlers) {\n        containerHandlers = new Set();\n        onScrollHandlers.set(container, containerHandlers);\n    }\n    /**\n     * Create a new onScroll handler for the provided callback.\n     */\n    const info = createScrollInfo();\n    const containerHandler = createOnScrollHandler(container, onScroll, info, options);\n    containerHandlers.add(containerHandler);\n    /**\n     * Check if there's a scroll event listener for this container.\n     * If not, create one.\n     */\n    if (!scrollListeners.has(container)) {\n        const measureAll = () => {\n            for (const handler of containerHandlers)\n                handler.measure();\n        };\n        const updateAll = () => {\n            for (const handler of containerHandlers) {\n                handler.update(frameData.timestamp);\n            }\n        };\n        const notifyAll = () => {\n            for (const handler of containerHandlers)\n                handler.notify();\n        };\n        const listener = () => {\n            frame.read(measureAll, false, true);\n            frame.read(updateAll, false, true);\n            frame.update(notifyAll, false, true);\n        };\n        scrollListeners.set(container, listener);\n        const target = getEventTarget(container);\n        window.addEventListener(\"resize\", listener, { passive: true });\n        if (container !== document.documentElement) {\n            resizeListeners.set(container, resize(container, listener));\n        }\n        target.addEventListener(\"scroll\", listener, { passive: true });\n    }\n    const listener = scrollListeners.get(container);\n    frame.read(listener, false, true);\n    return () => {\n        var _a;\n        cancelFrame(listener);\n        /**\n         * Check if we even have any handlers for this container.\n         */\n        const currentHandlers = onScrollHandlers.get(container);\n        if (!currentHandlers)\n            return;\n        currentHandlers.delete(containerHandler);\n        if (currentHandlers.size)\n            return;\n        /**\n         * If no more handlers, remove the scroll listener too.\n         */\n        const scrollListener = scrollListeners.get(container);\n        scrollListeners.delete(container);\n        if (scrollListener) {\n            getEventTarget(container).removeEventListener(\"scroll\", scrollListener);\n            (_a = resizeListeners.get(container)) === null || _a === void 0 ? void 0 : _a();\n            window.removeEventListener(\"resize\", scrollListener);\n        }\n    };\n}\n\nexport { scrollInfo };\n","import { resizeElement } from './handle-element.mjs';\nimport { resizeWindow } from './handle-window.mjs';\n\nfunction resize(a, b) {\n    return typeof a === \"function\" ? resizeWindow(a) : resizeElement(a, b);\n}\n\nexport { resize };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { scrollInfo } from './track.mjs';\nimport { observeTimeline } from './observe.mjs';\nimport { supportsScrollTimeline } from './supports.mjs';\n\nfunction scrollTimelineFallback({ source, container, axis = \"y\", }) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    // ScrollTimeline records progress as a percentage CSSUnitValue\n    const currentTime = { value: 0 };\n    const cancel = scrollInfo((info) => {\n        currentTime.value = info[axis].progress * 100;\n    }, { container, axis });\n    return { currentTime, cancel };\n}\nconst timelineCache = new Map();\nfunction getTimeline({ source, container = document.documentElement, axis = \"y\", } = {}) {\n    // Support legacy source argument. Deprecate later.\n    if (source)\n        container = source;\n    if (!timelineCache.has(container)) {\n        timelineCache.set(container, {});\n    }\n    const elementCache = timelineCache.get(container);\n    if (!elementCache[axis]) {\n        elementCache[axis] = supportsScrollTimeline()\n            ? new ScrollTimeline({ source: container, axis })\n            : scrollTimelineFallback({ source: container, axis });\n    }\n    return elementCache[axis];\n}\n/**\n * If the onScroll function has two arguments, it's expecting\n * more specific information about the scroll from scrollInfo.\n */\nfunction isOnScrollWithInfo(onScroll) {\n    return onScroll.length === 2;\n}\n/**\n * Currently, we only support element tracking with `scrollInfo`, though in\n * the future we can also offer ViewTimeline support.\n */\nfunction needsElementTracking(options) {\n    return options && (options.target || options.offset);\n}\nfunction scrollFunction(onScroll, options) {\n    if (isOnScrollWithInfo(onScroll) || needsElementTracking(options)) {\n        return scrollInfo((info) => {\n            onScroll(info[options.axis].progress, info);\n        }, options);\n    }\n    else {\n        return observeTimeline(onScroll, getTimeline(options));\n    }\n}\nfunction scrollAnimation(animation, options) {\n    if (needsElementTracking(options)) {\n        animation.pause();\n        return scrollInfo((info) => {\n            animation.time = animation.duration * info[options.axis].progress;\n        }, options);\n    }\n    else {\n        const timeline = getTimeline(options);\n        return animation.attachTimeline(timeline, (valueAnimation) => {\n            valueAnimation.pause();\n            return observeTimeline((progress) => {\n                valueAnimation.time = valueAnimation.duration * progress;\n            }, timeline);\n        });\n    }\n}\nfunction scroll(onScroll, { axis = \"y\", ...options } = {}) {\n    const optionsWithDefaults = { axis, ...options };\n    return typeof onScroll === \"function\"\n        ? scrollFunction(onScroll, optionsWithDefaults)\n        : scrollAnimation(onScroll, optionsWithDefaults);\n}\n\nexport { scroll };\n","import { motionValue } from './index.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useEffect } from 'react';\nimport { warning } from '../utils/errors.mjs';\nimport { scroll } from '../render/dom/scroll/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\n\nfunction refWarning(name, ref) {\n    warning(Boolean(!ref || ref.current), `You have defined a ${name} options but the provided ref is not yet hydrated, probably because it's defined higher up the tree. Try calling useScroll() in the same component as the ref, or setting its \\`layoutEffect: false\\` option.`);\n}\nconst createScrollMotionValues = () => ({\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0),\n});\nfunction useScroll({ container, target, layoutEffect = true, ...options } = {}) {\n    const values = useConstant(createScrollMotionValues);\n    const useLifecycleEffect = layoutEffect\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useLifecycleEffect(() => {\n        refWarning(\"target\", target);\n        refWarning(\"container\", container);\n        return scroll((_progress, { x, y }) => {\n            values.scrollX.set(x.current);\n            values.scrollXProgress.set(x.progress);\n            values.scrollY.set(y.current);\n            values.scrollYProgress.set(y.progress);\n        }, {\n            ...options,\n            container: (container === null || container === void 0 ? void 0 : container.current) || undefined,\n            target: (target === null || target === void 0 ? void 0 : target.current) || undefined,\n        });\n    }, [container, target, JSON.stringify(options.offset)]);\n    return values;\n}\n\nexport { useScroll };\n","import { interpolate } from './interpolate.mjs';\n\nconst isCustomValueType = (v) => {\n    return v && typeof v === \"object\" && v.mix;\n};\nconst getMixer = (v) => (isCustomValueType(v) ? v.mix : undefined);\nfunction transform(...args) {\n    const useImmediate = !Array.isArray(args[0]);\n    const argOffset = useImmediate ? 0 : -1;\n    const inputValue = args[0 + argOffset];\n    const inputRange = args[1 + argOffset];\n    const outputRange = args[2 + argOffset];\n    const options = args[3 + argOffset];\n    const interpolator = interpolate(inputRange, outputRange, {\n        mixer: getMixer(outputRange[0]),\n        ...options,\n    });\n    return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nexport { transform };\n","import { useMotionValue } from './use-motion-value.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { cancelFrame, frame } from '../frameloop/frame.mjs';\n\nfunction useCombineMotionValues(values, combineValues) {\n    /**\n     * Initialise the returned motion value. This remains the same between renders.\n     */\n    const value = useMotionValue(combineValues());\n    /**\n     * Create a function that will update the template motion value with the latest values.\n     * This is pre-bound so whenever a motion value updates it can schedule its\n     * execution in Framesync. If it's already been scheduled it won't be fired twice\n     * in a single frame.\n     */\n    const updateValue = () => value.set(combineValues());\n    /**\n     * Synchronously update the motion value with the latest values during the render.\n     * This ensures that within a React render, the styles applied to the DOM are up-to-date.\n     */\n    updateValue();\n    /**\n     * Subscribe to all motion values found within the template. Whenever any of them change,\n     * schedule an update.\n     */\n    useIsomorphicLayoutEffect(() => {\n        const scheduleUpdate = () => frame.preRender(updateValue, false, true);\n        const subscriptions = values.map((v) => v.on(\"change\", scheduleUpdate));\n        return () => {\n            subscriptions.forEach((unsubscribe) => unsubscribe());\n            cancelFrame(updateValue);\n        };\n    });\n    return value;\n}\n\nexport { useCombineMotionValues };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { transform } from '../utils/transform.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\nimport { useComputed } from './use-computed.mjs';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n    if (typeof input === \"function\") {\n        return useComputed(input);\n    }\n    const transformer = typeof inputRangeOrTransformer === \"function\"\n        ? inputRangeOrTransformer\n        : transform(inputRangeOrTransformer, outputRange, options);\n    return Array.isArray(input)\n        ? useListTransform(input, transformer)\n        : useListTransform([input], ([latest]) => transformer(latest));\n}\nfunction useListTransform(values, transformer) {\n    const latest = useConstant(() => []);\n    return useCombineMotionValues(values, () => {\n        latest.length = 0;\n        const numValues = values.length;\n        for (let i = 0; i < numValues; i++) {\n            latest[i] = values[i].get();\n        }\n        return transformer(latest);\n    });\n}\n\nexport { useTransform };\n","import { collectMotionValues } from './index.mjs';\nimport { useCombineMotionValues } from './use-combine-values.mjs';\n\nfunction useComputed(compute) {\n    /**\n     * Open session of collectMotionValues. Any MotionValue that calls get()\n     * will be saved into this array.\n     */\n    collectMotionValues.current = [];\n    compute();\n    const value = useCombineMotionValues(collectMotionValues.current, compute);\n    /**\n     * Synchronously close session of collectMotionValues.\n     */\n    collectMotionValues.current = undefined;\n    return value;\n}\n\nexport { useComputed };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import Layout from \"../components/Layout\";\nimport React, { FormEvent, useRef, useState } from \"react\";\nimport {\n  motion,\n  AnimatePresence,\n  stagger,\n  useAnimate,\n  useTransform,\n  useScroll\n} from \"framer-motion\";\n\nexport default function Demo({ location }: { location: Location }) {\n  const [x, setX] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isVisible2, setIsVisible2] = useState(false);\n  const [motionFormRef, motionFormAnimate] = useAnimate();\n  const handleInputSubmit = (e: any) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const value = formData.get(\"demo-input\");\n    if (!value) {\n      motionFormAnimate(\n        \"input\",\n        {\n          rotateZ: [3, 0, -3, 0],\n          rotateY: [3, 0, -3, 0]\n        },\n        {\n          duration: 0.2\n        }\n      );\n    }\n  };\n  const { scrollY } = useScroll();\n  const scrollOpacity = useTransform(\n    scrollY,\n    [0, 200, 300, 500, 1000],\n    [0, 0.2, 0.3, 0.5, 1]\n  );\n\n  return (\n    <Layout location={location} setCurTag={undefined}>\n      <h1>데모 놀이터입니다</h1>\n      <h2 id=\"1\">{\"1)\"}</h2>\n      <motion.div\n        animate={{ x }}\n        transition={{\n          type: \"spring\",\n          bounce: 1\n        }}\n        style={{ backgroundColor: \"lightgreen\", width: \"fit-content\" }}\n      >\n        <button onClick={() => setX(prev => prev - 100)}>{\"<-\"}</button>\n        안녕하세요? 지나가겠습니다{\" \"}\n        <button onClick={() => setX(prev => prev + 100)}>{\"->\"}</button>\n      </motion.div>\n      <h2 id=\"2\">{\"2)\"}</h2>\n      <motion.button\n        whileHover={{ scale: 1.5 }}\n        onClick={() => setIsModalOpen(true)}\n      >\n        모달 열기\n      </motion.button>\n      <AnimatePresence>\n        {isModalOpen && (\n          <motion.dialog\n            style={{\n              width: \"200px\",\n              height: \"200px\",\n              backgroundColor: \"gray\",\n              borderRadius: \"20px\"\n            }}\n            onClose={() => setIsModalOpen(false)}\n            open={isModalOpen}\n            variants={{\n              hidden: {\n                opacity: 0,\n                y: 30\n              },\n              visible: {\n                opacity: 1,\n                y: 0\n              }\n            }}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n          >\n            <p>안녕하세요? 모달입니다</p>\n            <motion.button\n              whileHover={{ scale: 1.5 }}\n              onClick={() => setIsModalOpen(false)}\n            >\n              모달 닫기\n            </motion.button>\n          </motion.dialog>\n        )}\n      </AnimatePresence>\n\n      {/* 3번째 */}\n      <h2 id=\"3\">{\"3)\"}</h2>\n      <button onClick={() => setIsVisible(prev => !prev)}>\n        {isVisible ? \"나가세요\" : \"들어오세요\"}\n      </button>\n      <AnimatePresence>\n        {isVisible && (\n          <motion.div\n            layout\n            style={{ display: \"flex\", gap: \"20px\" }}\n            variants={{\n              visible: {\n                transition: {\n                  staggerChildren: 0.1\n                }\n              },\n              hidden: {\n                transition: {\n                  staggerChildren: 0.1\n                }\n              }\n            }}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n          >\n            <motion.div\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: 0,\n                  opacity: 1\n                },\n                hidden: {\n                  y: 30,\n                  opacity: 0\n                }\n              }}\n              layout\n            >\n              나\n            </motion.div>\n            <motion.div\n              layout\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: 0,\n                  opacity: 1\n                },\n                hidden: {\n                  y: 30,\n                  opacity: 0\n                }\n              }}\n            >\n              는\n            </motion.div>\n            <motion.div\n              layout\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: 0,\n                  opacity: 1\n                },\n                hidden: {\n                  y: 30,\n                  opacity: 0\n                }\n              }}\n            >\n              바\n            </motion.div>\n            <motion.div\n              layout\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: 0,\n                  opacity: 1\n                },\n                hidden: {\n                  y: 30,\n                  opacity: 0\n                }\n              }}\n            >\n              보\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* 4번째 */}\n      <h2 id=\"4\">{\"4)\"}</h2>\n      <button onClick={() => setIsVisible2(prev => !prev)}>\n        {isVisible2 ? \"나가세요\" : \"들어오세요\"}\n      </button>\n      <AnimatePresence>\n        {isVisible2 && (\n          <motion.div\n            style={{ display: \"flex\", gap: \"20px\" }}\n            variants={{\n              visible: {\n                transition: {\n                  staggerChildren: 0.1\n                }\n              },\n              hidden: {\n                transition: {\n                  staggerChildren: 0.1\n                }\n              }\n            }}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n          >\n            <motion.div\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: [0, 10, -10, 0],\n                  opacity: 1\n                },\n                hidden: {\n                  y: 30,\n                  opacity: 0\n                }\n              }}\n            >\n              나\n            </motion.div>\n            <motion.div\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: [0, 10, -10, 0],\n                  opacity: 1\n                },\n                hidden: {\n                  y: [0, 10, -10, 0],\n                  opacity: 0\n                }\n              }}\n            >\n              는\n            </motion.div>\n            <motion.div\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: [0, 10, -10, 0],\n                  opacity: 1\n                },\n                hidden: {\n                  y: 30,\n                  opacity: 0\n                }\n              }}\n            >\n              바\n            </motion.div>\n            <motion.div\n              style={{ width: \"30px\", height: \"30px\" }}\n              variants={{\n                visible: {\n                  y: [0, 10, -10, 0],\n                  opacity: 1\n                },\n                hidden: {\n                  y: 30,\n                  opacity: 0\n                }\n              }}\n            >\n              보\n            </motion.div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      {/* 5번째 */}\n      <h2 id=\"5\">{\"5)\"}</h2>\n      <AnimatePresence>\n        <form ref={motionFormRef} onSubmit={handleInputSubmit}>\n          <input\n            name=\"demo-input\"\n            style={{ backgroundColor: \"white\", color: \"black\" }}\n          />\n          <button>입력</button>\n        </form>\n      </AnimatePresence>\n\n      {/* 6번째 */}\n      <h2 id=\"6\">{\"6)\"} </h2>\n      <motion.div\n        style={{\n          height: 1000,\n          width: \"100%\",\n          backgroundColor: \"currentColor\",\n          opacity: scrollOpacity\n        }}\n      ></motion.div>\n    </Layout>\n  );\n}\n"],"names":["createGeneratorEasing","options","scale","createGenerator","generator","keyframes","duration","Math","min","type","ease","progress","next","value","resolveElements","elements","scope","selectorCache","_a","root","document","Boolean","current","querySelectorAll","Element","Array","from","isDOMKeyframes","isArray","resolveSubjects","subject","NodeList","calcNextTime","prev","labels","startsWith","max","parseFloat","get","wrap","v","rangeSize","getEasingForSegment","easing","i","length","addKeyframes","sequence","offset","startTime","endTime","keyframe","at","eraseKeyframes","push","compareByTime","a","b","defaultSegmentEasing","getSubjectSequence","sequences","has","set","getValueSequence","name","keyframesAsList","getValueTransition","transition","key","isNumber","isNumberKeyframesArray","every","ObjectVisualElement","VisualElement","constructor","super","arguments","this","readValueFromInstance","instance","object","isObjectKey","getBaseTargetFromProps","removeValueFromRenderState","renderState","output","measureInstanceViewportBox","build","latestValues","Object","assign","renderInstance","sortInstanceNodePosition","createDOMVisualElement","element","presenceContext","props","visualState","transform","transformOrigin","style","vars","attrs","node","SVGVisualElement","HTMLVisualElement","mount","createObjectVisualElement","animateSubject","animations","isSingleValue","default","subjects","numSubjects","thisSubject","createVisualElement","visualElement","delay","animateSequence","animationDefinitions","defaultTransition","sequenceTransition","generators","defaultDuration","Map","elementCache","timeLabels","prevTime","currentTime","totalDuration","segment","undefined","maxDuration","resolveValueSequence","valueKeyframes","valueTransition","valueSequence","elementIndex","valueKeyframesAsList","times","remainingTransition","calculatedDelay","numKeyframes","absoluteDelta","delta","abs","springTransition","springEasing","targetTime","remainder","fill","unshift","subjectIndex","subjectSequence","forEach","valueSequences","sort","valueOffset","valueEasing","definition","createAnimationsFromSequence","spring","createScopedAnimate","subjectOrSequence","optionsOrKeyframes","animation","GroupPlaybackControls","useAnimate","animate","callback","stop","useEffect","resizeHandlers","WeakMap","observer","notifyTarget","target","contentRect","borderBoxSize","handler","contentSize","size","inlineSize","blockSize","width","height","SVGElement","getBBox","offsetWidth","offsetHeight","getElementSize","notifyAll","entries","resizeElement","ResizeObserver","elementHandlers","Set","add","observe","delete","unobserve","windowCallbacks","windowResizeHandler","resizeWindow","window","innerWidth","innerHeight","info","addEventListener","maxElapsed","createScrollInfo","time","x","scrollLength","targetOffset","targetLength","containerLength","velocity","y","keys","position","updateAxisInfo","axisName","axis","elapsed","ScrollOffset","Enter","Exit","Any","All","namedEdges","start","center","end","resolveEdge","edge","inset","asNumber","endsWith","documentElement","clientWidth","clientHeight","defaultOffset","resolveOffset","targetInset","offsetDefinition","targetPoint","containerPoint","trim","includes","split","point","resolveOffsets","container","lengthLabel","HTMLElement","offsetLeft","offsetTop","offsetParent","tagName","svgBoundingBox","getBoundingClientRect","parentElement","parentBoundingBox","left","top","SVGGraphicsElement","svg","parent","parentNode","calcInset","targetSize","scrollWidth","scrollHeight","getTargetSize","containerSize","hasChanged","interpolate","numOffsets","interpolatorOffsets","createOnScrollHandler","onScroll","measure","update","updateScrollInfo","notify","scrollListeners","resizeListeners","onScrollHandlers","getEventTarget","scrollInfo","containerHandlers","containerHandler","measureAll","updateAll","frameData","timestamp","listener","read","passive","currentHandlers","scrollListener","removeEventListener","observeTimeline","timeline","prevProgress","onFrame","timelineCache","getTimeline","source","supports","ScrollTimeline","cancel","scrollTimelineFallback","needsElementTracking","optionsWithDefaults","isOnScrollWithInfo","scrollFunction","pause","attachTimeline","valueAnimation","scrollAnimation","refWarning","ref","createScrollMotionValues","scrollX","scrollY","scrollXProgress","scrollYProgress","getMixer","mix","isCustomValueType","useCombineMotionValues","values","combineValues","initial","isStatic","useContext","MotionConfigContext","setLatest","useState","on","useMotionValue","updateValue","scheduleUpdate","preRender","subscriptions","map","unsubscribe","useTransform","input","inputRangeOrTransformer","outputRange","compute","useComputed","transformer","args","useImmediate","argOffset","inputValue","inputRange","interpolator","mixer","useListTransform","latest","numValues","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","sizeRef","componentDidUpdate","render","children","PopChild","id","useId","useRef","nonce","useInsertionEffect","dataset","motionPopId","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","isComplete","register","random","_","PresenceContext","Provider","getChildKey","child","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","isEveryExitComplete","isExitComplete","Demo","location","setX","isModalOpen","setIsModalOpen","isVisible","setIsVisible","isVisible2","setIsVisible2","motionFormRef","motionFormAnimate","layoutEffect","_progress","JSON","stringify","useScroll","scrollOpacity","React","Layout","setCurTag","motion","div","bounce","backgroundColor","onClick","button","whileHover","dialog","borderRadius","onClose","open","variants","hidden","opacity","visible","exit","layout","display","gap","staggerChildren","onSubmit","e","preventDefault","FormData","currentTarget","rotateZ","rotateY","color"],"sourceRoot":""}