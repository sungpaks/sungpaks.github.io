{"version":3,"file":"component---src-pages-404-js-5d88a179901778700218.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/topUI.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { FC } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\nimport { useEffect, useState } from \"react\"\n\ninterface ComponentProps {\n  setCurTag?(value: string): void\n}\n\nfunction TopUI({ setCurTag }: ComponentProps) {\n  const [scrollPercent, setScrollPercent] = useState(0)\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const currentScroll: number = document.documentElement.scrollTop\n      const totalScroll: number =\n        document.documentElement.scrollHeight -\n        document.documentElement.clientHeight\n      setScrollPercent(Math.round((currentScroll * 100) / totalScroll))\n    })\n  })\n\n  return (\n    <div>\n      <div className=\"top-ui\">\n        <h4 className=\"top-ui-title\" style={{ margin: 0 }}>\n          <Link\n            to=\"/\"\n            onClick={() => {\n              if (setCurTag) setCurTag(\"ALL\")\n            }}\n          >\n            üëç ÏÑ±Ìõà Î∏îÎ°úÍ∑∏\n          </Link>\n        </h4>\n        <h6 className=\"top-ui-tag\" style={{ margin: \"0 20px 0 0\" }}>\n          <Link to=\"/tag\">Tag</Link>\n        </h6>\n      </div>\n      <div\n        className=\"progress-bar\"\n        style={{ width: `${scrollPercent}%` }}\n      ></div>\n    </div>\n  )\n}\n\nexport default TopUI\n","import * as React from \"react\"\nimport TopUI from \"./topUI\"\nimport { FC } from \"react\"\nimport { useState } from \"react\"\n\ninterface ComponentProps {\n  location: any\n  children: any | undefined\n  setCurTag?(value: string): void\n}\n\nconst Layout = ({ location, children, setCurTag }: ComponentProps) => {\n  const rootPath = \"/\" //`${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath\n\n  return (\n    <div>\n      <TopUI setCurTag={setCurTag} />\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{}</header>\n        <main>{children}</main>\n        <footer>\n          ¬© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { FC } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ninterface ComponentProps {\n  description: string\n  title: string\n  children?: any\n}\n\nconst Seo = ({ description, title, children }: ComponentProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["setCurTag","scrollPercent","setScrollPercent","useState","useEffect","document","addEventListener","currentScroll","documentElement","scrollTop","totalScroll","scrollHeight","clientHeight","Math","round","React","className","style","margin","Link","to","onClick","width","_ref","location","children","isRootPath","pathname","TopUI","Date","getFullYear","href","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter","Head","data","siteTitle"],"sourceRoot":""}