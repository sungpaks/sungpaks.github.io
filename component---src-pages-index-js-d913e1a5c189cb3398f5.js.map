{"version":3,"file":"component---src-pages-index-js-d913e1a5c189cb3398f5.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/topUI.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n//import { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  //const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {/*{\" \"}\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      */}\n      {author?.name && (\n        <p>\n          <strong>{author.name}</strong> Ïù¥ÎùºÍ≥† Ìï©ÎãàÎã§.\n          <br />\n          {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nfunction TopUI({ setCurTag }) {\n  return (\n    <div className=\"top-ui\">\n      <h4 className=\"top-ui-title\" style={{ marginTop: 20 }}>\n        <Link\n          to=\"/\"\n          onClick={() => {\n            if (setCurTag) setCurTag(\"ALL\")\n          }}\n        >\n          üëç ÏÑ±Ìõà Î∏îÎ°úÍ∑∏\n        </Link>\n      </h4>\n      <h6 className=\"top-ui-tag\">\n        <Link to=\"/tag\">Tag</Link>\n      </h6>\n    </div>\n  )\n}\n\nexport default TopUI\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport TopUI from \"./topUI\"\n\nconst Layout = ({ location, title, children, setCurTag }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location?.pathname === rootPath\n  /*let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }*/\n\n  return (\n    <div>\n      <TopUI setCurTag={setCurTag} />\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{}</header>\n        <main>{children}</main>\n        <footer>\n          ¬© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { useState } from \"react\"\nimport { useEffect } from \"react\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const [curTag, setCurTag] = useState(\"ALL\")\n  const [curPostList, setCurPostList] = useState(posts)\n  useEffect(() => {\n    if (curTag === \"ALL\") {\n      setCurPostList([...posts])\n    } else {\n      setCurPostList([...posts.filter(p => p.frontmatter.tag.includes(curTag))])\n    }\n  }, [curTag])\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle} setCurTag={setCurTag}>\n      <Bio />\n      <hr />\n      <ol style={{ listStyle: `none` }}>\n        {curPostList.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          /*const categories = [\n            { fieldValue: ALL_NAME, totalCount: allPosts.length },\n            ...data.categories.group,\n          ]*/\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span\n                        itemProp=\"headline\"\n                        className=\"post-list-item-title\"\n                      >\n                        {title}\n                      </span>\n                    </Link>\n                  </h2>\n                </header>\n                {post.frontmatter.tag?.map(c => {\n                  return (\n                    <button\n                      class=\"custom-button tag-button\"\n                      onClick={() => {\n                        setCurTag(c === curTag ? \"ALL\" : c)\n                      }}\n                      style={{\n                        top: c === curTag ? \"2px\" : 0,\n                        color: c === curTag ? \"darkgray\" : \"black\",\n                      }}\n                    >\n                      {c}\n                    </button>\n                  )\n                })}\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n                <small>{post.frontmatter.date}</small>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <hr />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tag\n        }\n      }\n    }\n\n    tags: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tag) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"names":["author","useStaticQuery","site","siteMetadata","className","name","summary","setCurTag","style","marginTop","Link","to","onClick","location","title","children","isRootPath","pathname","Date","getFullYear","href","description","metaDescription","defaultTitle","content","property","social","twitter","data","siteTitle","posts","allMarkdownRemark","nodes","curTag","useState","curPostList","setCurPostList","useEffect","filter","p","frontmatter","tag","includes","length","listStyle","map","post","fields","slug","key","itemScope","itemType","itemProp","c","class","top","color","dangerouslySetInnerHTML","__html","excerpt","date","Head"],"sourceRoot":""}