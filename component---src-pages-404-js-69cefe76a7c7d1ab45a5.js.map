{"version":3,"file":"component---src-pages-404-js-69cefe76a7c7d1ab45a5.js","mappings":"uLAmBA,MAfA,SAAe,GAAgB,IAAhB,UAAEA,GAAW,EAC1B,OACE,uBAAKC,UAAU,UACb,sBAAIA,UAAU,eAAeC,MAAO,CAAEC,UAAW,KAC/C,gBAAC,EAAAC,KAAI,CAACC,GAAG,IAAIC,QAAS,IAAMN,EAAU,QAAQ,cAIhD,sBAAIC,UAAU,cACZ,gBAAC,EAAAG,KAAI,CAACC,GAAG,QAAO,QAIxB,ECsBA,MAnCe,IAA+C,IAA9C,SAAEE,EAAQ,MAAEC,EAAK,SAAEC,EAAQ,UAAET,GAAW,EACtD,MACMU,EAD6B,MAChBH,EAASI,SAiB5B,OACE,2BACE,gBAAC,EAAK,CAACX,UAAWA,IAClB,uBAAKC,UAAU,iBAAiB,oBAAmBS,GACjD,0BAAQT,UAAU,kBAClB,4BAAOQ,GACP,8BAAQ,MACH,IAAIG,MAAOC,cAAc,eAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGnC,C,+CCcV,IAvCY,IAAuC,IAAD,UAArC,YAAEC,EAAW,MAAEP,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEO,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjB,EAAmBX,MAExC,OACE,gCACE,6BAAQY,EAAY,GAAMA,EAAiBZ,GAC3C,wBAAMa,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASd,IACnC,wBAAMe,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAN,EAAKG,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASd,IACpC,wBAAMa,KAAK,sBAAsBC,QAASJ,IACzCT,EACA,C,kGCvCP,MAWaiB,EAAO,IAAM,gBAAC,IAAG,CAAClB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEmB,EAAI,SAAEpB,GAAU,EACtC,MAAMqB,EAAYD,EAAKX,KAAKG,aAAaX,MAEzC,OACE,gBAAC,IAAM,CAACD,SAAUA,EAAUC,MAAOoB,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/topUI.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Link } from \"gatsby\"\n\nfunction TopUI({ setCurTag }) {\n  return (\n    <div className=\"top-ui\">\n      <h4 className=\"top-ui-title\" style={{ marginTop: 20 }}>\n        <Link to=\"/\" onClick={() => setCurTag(\"ALL\")}>\n          üëç ÏÑ±Ìõà Î∏îÎ°úÍ∑∏\n        </Link>\n      </h4>\n      <h6 className=\"top-ui-tag\">\n        <Link to=\"/tag\">Tag</Link>\n      </h6>\n    </div>\n  )\n}\n\nexport default TopUI\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport TopUI from \"./topUI\"\n\nconst Layout = ({ location, title, children, setCurTag }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  /*let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }*/\n\n  return (\n    <div>\n      <TopUI setCurTag={setCurTag} />\n      <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n        <header className=\"global-header\">{}</header>\n        <main>{children}</main>\n        <footer>\n          ¬© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["setCurTag","className","style","marginTop","Link","to","onClick","location","title","children","isRootPath","pathname","Date","getFullYear","href","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","data","siteTitle"],"sourceRoot":""}