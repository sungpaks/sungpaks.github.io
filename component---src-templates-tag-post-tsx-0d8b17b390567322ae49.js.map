{"version":3,"file":"component---src-templates-tag-post-tsx-0d8b17b390567322ae49.js","mappings":"uJAqEA,IAnDYA,IAAkE,IAAD,UAAhE,YAAEC,EAAW,MAAEC,EAAK,SAAEC,EAAQ,UAAEC,GAA2B,EACtE,MAAM,KAAEC,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBN,GAAeI,EAAKG,aAAaP,YACnDQ,EAAgC,QAApB,EAAGJ,EAAKG,oBAAY,aAAjBE,EAAmBR,MAElCS,EAAM,CACVT,MAAOA,GAASO,EAChBR,YAAaA,GAAeM,EAC5BH,aAGF,OACEQ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQD,EAAIT,OACZU,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,cAAcC,QAASH,EAAIV,cACtCW,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,WAAWD,QAASH,EAAIT,QACvCU,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,iBAAiBD,QAASH,EAAIV,cAC7CW,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,UAAUD,QAAQ,YAChCH,EAAIP,WAAaQ,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,WAAWD,QAASH,EAAIP,YACzDQ,EAAAA,cAAAA,OAAAA,CAAMG,SAAS,eAAeD,QAAST,EAAKG,aAAaN,QACzDU,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,eAAeC,QAAQ,YAClCF,EAAAA,cAAAA,OAAAA,CACEC,KAAK,kBACLC,SAA0B,QAAjB,EAAAT,EAAKG,oBAAY,OAAQ,QAAR,EAAjBQ,EAAmBC,cAAM,WAAR,EAAjBC,EAA2BC,UAAO,KAE7CP,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASZ,IACpCU,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,sBAAsBC,QAASP,IACzCJ,EACDS,EAAAA,cAAAA,OAAAA,CACEC,KAAK,2BACLC,QAAQ,gDAET,C,0ECKP,UA5BgBd,IAAqD,IAApD,YAAEoB,EAAW,KAAEC,EAAI,SAAEC,GAA0B,EAC9D,MAAM,KAAEC,GAASH,EACXI,EAAQH,EAAKI,kBAAkBC,MAErC,OACEd,EAAAA,cAACe,EAAAA,EAAM,CAACL,SAAUA,GAChBV,EAAAA,cAACgB,EAAAA,EAAG,CAAC1B,MAHS,WAGSD,YAAasB,IACpCX,EAAAA,cAAAA,MAAAA,CAAKiB,MAAO,CAAEC,UAAW,QAASC,aAAc,UAC9CnB,EAAAA,cAAAA,KAAAA,CAAIiB,MAAO,CAAEG,cAAe,OAAQC,WAAY,SAC9CrB,EAAAA,cAAAA,OAAAA,CAAMiB,MAAO,CAAEK,MAAO,UAAW,MAAIX,GACrCX,EAAAA,cAAAA,OAAAA,KAAM,WACNA,EAAAA,cAAAA,KAAAA,OAEDY,EAAMW,KAAIC,GAEPxB,EAAAA,cAAAA,MAAAA,CAAKyB,IAAKD,EAAKE,OAAOC,MACpB3B,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAC4B,EAAAA,KAAI,CAACC,GAAE,GAAKL,EAAKE,OAAOC,MAASH,EAAKM,YAAYxC,QAErDU,EAAAA,cAAAA,IAAAA,KAAIwB,EAAKM,YAAYzC,iBAKtB,C","sources":["webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/templates/tag-post.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { FC } from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\ninterface ComponentProps {\n  description: string;\n  title: string;\n  children?: any;\n  thumbnail?: string;\n}\n\nconst Seo = ({ description, title, children, thumbnail }: ComponentProps) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const defaultTitle = site.siteMetadata?.title;\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || metaDescription,\n    thumbnail\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:type\" content=\"website\" />\n      {seo.thumbnail && <meta property=\"og:image\" content={seo.thumbnail} />}\n      <meta property=\"og:site_name\" content={site.siteMetadata.title} />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n      <meta\n        name=\"google-site-verification\"\n        content=\"iP6AmcpYft1WcrX_A3DlYxkWH2bwT-mrYanTBB8vm4k\"\n      />\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/Layout\"\nimport Seo from \"../components/seo\"\nimport { FC } from \"react\"\n\ninterface Frontmatter {\n  date: string\n  title: string\n  description: string\n  tag: string[]\n}\n\ninterface MarkdownRemarkNode {\n  fields: {\n    slug: string\n  }\n  frontmatter: Frontmatter\n}\n\ninterface SiteMetadata {\n  title: string\n}\n\ninterface PageQueryData {\n  site: {\n    siteMetadata: SiteMetadata\n  }\n  allMarkdownRemark: {\n    nodes: MarkdownRemarkNode[]\n  }\n}\n\ninterface ComponentProps {\n  pageContext: {\n    tags: string\n  }\n  data: PageQueryData\n  location: any\n}\n\nconst TagPost = ({ pageContext, data, location }: ComponentProps) => {\n  const { tags } = pageContext\n  const posts = data.allMarkdownRemark.nodes\n  const tagHeader = \"All Tags\"\n  return (\n    <Layout location={location}>\n      <Seo title={tagHeader} description={tags} />\n      <div style={{ marginTop: \"100px\", marginBottom: \"100px\" }}>\n        <h2 style={{ paddingBottom: \"10px\", paddingTop: \"50px\" }}>\n          <span style={{ color: \"green\" }}>üîç {tags}</span>\n          <span> Í¥ÄÎ†® Í≤åÏãúÍ∏Ä</span>\n          <hr></hr>\n        </h2>\n        {posts.map(post => {\n          return (\n            <div key={post.fields.slug}>\n              <h2>\n                <Link to={`${post.fields.slug}`}>{post.frontmatter.title}</Link>\n              </h2>\n              <p>{post.frontmatter.description}</p>\n            </div>\n          )\n        })}\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagPost\n\nexport const pageQuery = graphql`\n  query ($tags: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { frontmatter: { date: DESC } }\n      limit: 2000\n      filter: { frontmatter: { tag: { in: [$tags] } } }\n    ) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tag\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","description","title","children","thumbnail","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","_site$siteMetadata","seo","React","name","content","property","_site$siteMetadata2","social","_site$siteMetadata2$s","twitter","pageContext","data","location","tags","posts","allMarkdownRemark","nodes","Layout","Seo","style","marginTop","marginBottom","paddingBottom","paddingTop","color","map","post","key","fields","slug","Link","to","frontmatter"],"sourceRoot":""}